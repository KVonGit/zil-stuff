	.NEW 5

	.BYTE 5
	.BYTE FLAGS
	.WORD RELEASEID
	.WORD ENDLOD
	.WORD START
	.WORD VOCAB
	.WORD OBJECT
	.WORD GLOBAL
	.WORD IMPURE
	.WORD FLAGS2
	.BYTE 0,0,0,0,0,0
	.WORD WORDS
	.WORD 0,0
	.WORD 0
	.WORD 0
	.WORD 0
	.WORD 0
	.WORD 0
	.WORD 0
	.WORD 0
	.WORD 0
	.WORD TCHARS
	.WORD 0
	.WORD 0
	.WORD CHRSET
	.WORD EXTAB
	.WORD 0
	.WORD 0
	.WORD 0
	.WORD 0
	.INSERT "koww_freq"
	.INSERT "koww_data"

	.DEBUG-ROUTINE 0,0,0,"GO"
	.FUNCT GO
START::
	.DEBUG-LINE 1,13,1
	CRLF
	.DEBUG-LINE 1,14,1
	CRLF
	.DEBUG-LINE 1,15,1
	ICALL2 ITALICIZE,STR?5
	.DEBUG-LINE 1,18,1
	CRLF
	.DEBUG-LINE 1,19,1
	CRLF
	.DEBUG-LINE 1,20,1
	ICALL1 V-VERSION
	.DEBUG-LINE 1,21,1
	CRLF
	.DEBUG-LINE 1,22,1
	SET 'HERE,KOWWS-CHASM
	.DEBUG-LINE 1,23,1
	MOVE PLAYER,HERE
	.DEBUG-LINE 1,24,1
	ICALL1 V-LOOK
	.DEBUG-LINE 1,25,1
	ICALL1 MAIN-LOOP
	QUIT
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"CHKWORD?","W","PS","P1","F"
	.FUNCT CHKWORD?,W,PS,P1,F
	ASSIGNED? 'P1 /?L11
	SET 'P1,-1
	.DEBUG-LINE 2,258,1
?L11:	ZERO? W /FALSE
	.DEBUG-LINE 2,259,1
	GETB W,VOCAB-FL >F
	.DEBUG-LINE 2,260,1
	BTST F,PS \?L4
	.DEBUG-LINE 2,261,1
	LESS? P1,0 /TRUE
	.DEBUG-LINE 2,263,1
	BAND F,P1MASK >STACK
	EQUAL? STACK,P1 \?L8
	.DEBUG-LINE 2,264,1
	GETB W,VOCAB-V1 >F
	JUMP ?L5
	.DEBUG-LINE 2,265,1
?L8:	GETB W,VOCAB-V2 >F
	JUMP ?L5
?L4:	SET 'F,0
	.DEBUG-LINE 2,266,1
?L5:	RETURN F
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GETWORD?","N","R"
	.FUNCT GETWORD?,N,R
	.DEBUG-LINE 2,277,1
	MUL N,2 >STACK
	DEC 'STACK
	GET LEXBUF,STACK >R
	.DEBUG-LINE 2,278,1
	RETURN R
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRINT-WORD","N","I","MAX"
	.FUNCT PRINT-WORD,N,I,MAX
	.DEBUG-LINE 2,285,1
	MUL N,4 >STACK
	INC 'STACK
	GETB LEXBUF,STACK >I
	.DEBUG-LINE 2,286,1
	MUL N,4 >STACK
	GETB LEXBUF,STACK >STACK
	ADD I,STACK >STACK
	SUB STACK,1 >MAX
	.DEBUG-LINE 2,288,1
?L1:	GETB READBUF,I >STACK
	PRINTC STACK
	.DEBUG-LINE 2,289,1
	IGRTR? 'I,MAX \?L1
	.DEBUG-LINE 2,289,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"CLEAR-NOUN-PHRASE","NP"
	.FUNCT CLEAR-NOUN-PHRASE,NP
	.DEBUG-LINE 2,373,1
	PUTB NP,0,0
	.DEBUG-LINE 2,374,1
	PUTB NP,1,0
	.DEBUG-LINE 2,375,1
	PUTB NP,6,0
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"COPY-NOUN-PHRASE","SRC","DEST","C"
	.FUNCT COPY-NOUN-PHRASE,SRC,DEST,C
	.DEBUG-LINE 2,379,1
	GETB SRC,0 >C
	PUTB DEST,0,C
	.DEBUG-LINE 2,380,1
	MUL P-OBJSPEC-SIZE,C >STACK
	GET DEST,1 >STACK
	GET SRC,1 >STACK
	COPYT STACK,STACK,STACK
	.DEBUG-LINE 2,381,1
	GETB SRC,1 >C
	PUTB DEST,1,C
	.DEBUG-LINE 2,382,1
	MUL P-OBJSPEC-SIZE,C >STACK
	GET DEST,2 >STACK
	GET SRC,2 >STACK
	COPYT STACK,STACK,STACK
	.DEBUG-LINE 2,383,1
	GETB SRC,6 >STACK
	PUTB DEST,6,STACK
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"SAVE-PARSER-RESULT","DEST"
	.FUNCT SAVE-PARSER-RESULT,DEST
	.DEBUG-LINE 2,506,1
	PUT DEST,0,P-V-WORD
	.DEBUG-LINE 2,507,1
	PUT DEST,1,P-P1
	.DEBUG-LINE 2,508,1
	PUT DEST,2,P-P2
	.DEBUG-LINE 2,509,1
	PUT DEST,3,P-SYNTAX
	.DEBUG-LINE 2,510,1
	GET DEST,4 >STACK
	COPYT P-PRSOS,STACK,102
	.DEBUG-LINE 2,511,1
	GET DEST,5 >STACK
	COPYT P-PRSIS,STACK,102
	.DEBUG-LINE 2,512,1
	PUT DEST,6,P-NUMBER
	.DEBUG-LINE 2,513,1
	GET DEST,8 >STACK
	ICALL COPY-LEXBUF,LEXBUF,STACK
	.DEBUG-LINE 2,514,1
	GET DEST,7 >STACK
	ICALL COPY-READBUF,READBUF,STACK
	.DEBUG-LINE 2,515,1
	PUT DEST,9,WINNER
	.DEBUG-LINE 2,516,1
	PUTB DEST,20,P-LEN
	.DEBUG-LINE 2,517,1
	PUTB DEST,21,P-V
	.DEBUG-LINE 2,518,1
	PUTB DEST,22,P-V-WORDN
	.DEBUG-LINE 2,519,1
	PUTB DEST,23,P-NOBJ
	.DEBUG-LINE 2,520,1
	ZERO? PRSO-DIR \?L2
	PUSH 0
	JUMP ?L1
?L2:	PUSH PRSO
?L1:	PUTB DEST,24,STACK
	.DEBUG-LINE 2,521,1
	PUTB DEST,25,PRSA
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"RESTORE-PARSER-RESULT","SRC","L","OW"
	.FUNCT RESTORE-PARSER-RESULT,SRC,L,OW
	SET 'OW,WINNER
	.DEBUG-LINE 2,524,1
	GET SRC,0 >P-V-WORD
	.DEBUG-LINE 2,525,1
	GET SRC,1 >P-P1
	.DEBUG-LINE 2,526,1
	GET SRC,2 >P-P2
	.DEBUG-LINE 2,527,1
	GET SRC,3 >P-SYNTAX
	.DEBUG-LINE 2,528,1
	GET SRC,4 >STACK
	COPYT STACK,P-PRSOS,102
	.DEBUG-LINE 2,529,1
	GET SRC,5 >STACK
	COPYT STACK,P-PRSIS,102
	.DEBUG-LINE 2,530,1
	GET SRC,6 >P-NUMBER
	.DEBUG-LINE 2,531,1
	GET SRC,8 >STACK
	ICALL COPY-LEXBUF,STACK,LEXBUF
	.DEBUG-LINE 2,532,1
	GET SRC,7 >STACK
	ICALL COPY-READBUF,STACK,READBUF
	.DEBUG-LINE 2,533,1
	GET SRC,9 >WINNER
	.DEBUG-LINE 2,534,1
	GETB SRC,20 >P-LEN
	.DEBUG-LINE 2,535,1
	GETB SRC,21 >P-V
	.DEBUG-LINE 2,536,1
	GETB SRC,22 >P-V-WORDN
	.DEBUG-LINE 2,537,1
	GETB SRC,23 >P-NOBJ
	.DEBUG-LINE 2,538,1
	GETB SRC,24 >PRSO-DIR
	.DEBUG-LINE 2,539,1
	GETB SRC,25 >PRSA
	.DEBUG-LINE 2,541,1
	ZERO? PRSO-DIR /?L1
	.DEBUG-LINE 2,542,1
	SET 'PRSO,PRSO-DIR
	.DEBUG-LINE 2,543,1
	SET 'PRSO-DIR,1
	JUMP ?L6
	.DEBUG-LINE 2,544,1
?L1:	LESS? P-NOBJ,1 /?L4
	GETB P-PRSOS,0 >L
	ZERO? L \?L3
	.DEBUG-LINE 2,546,1
?L4:	SET 'PRSO,0
	JUMP ?L6
	.DEBUG-LINE 2,547,1
?L3:	EQUAL? L,1 \?L5
	.DEBUG-LINE 2,548,1
	GET P-PRSOS,1 >PRSO
	JUMP ?L6
	.DEBUG-LINE 2,549,1
?L5:	SET 'PRSO,MANY-OBJECTS
	.DEBUG-LINE 2,550,1
?L6:	LESS? P-NOBJ,2 /?L9
	GETB P-PRSIS,0 >L
	ZERO? L \?L7
	.DEBUG-LINE 2,552,1
?L9:	SET 'PRSI,0
	JUMP ?L11
	.DEBUG-LINE 2,553,1
?L7:	EQUAL? L,1 \?L10
	.DEBUG-LINE 2,554,1
	GET P-PRSIS,1 >PRSI
	JUMP ?L11
	.DEBUG-LINE 2,555,1
?L10:	SET 'PRSI,MANY-OBJECTS
	.DEBUG-LINE 2,556,1
?L11:	EQUAL? WINNER,OW,0 /FALSE
	.DEBUG-LINE 2,557,1
	LOC WINNER >HERE
	.DEBUG-LINE 2,558,1
	CALL1 SEARCH-FOR-LIGHT >HERE-LIT
	RETURN HERE-LIT
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"HANDLE-ORPHAN-RESPONSE","CNT","MAX","TBL","O","OUT","NY","?TMP"
	.FUNCT HANDLE-ORPHAN-RESPONSE,CNT,MAX,TBL,O,OUT,NY,?TMP
	.DEBUG-LINE 3,85,1
	LESS? P-LEN,1 /?L3
	CALL2 GETWORD?,1 >STACK
	CALL2 STARTS-NOUN-PHRASE?,STACK >STACK
	ZERO? STACK \?L4
	CALL2 PARSE-NUMBER?,1 >STACK
	ZERO? STACK /?L3
?L4:	CALL PARSE-NOUN-PHRASE,1,P-NP-XOBJ,1 >?TMP
	ADD P-LEN,1 >STACK
	EQUAL? ?TMP,STACK /?L1
	.DEBUG-LINE 3,90,1
?L3:	RETURN O-RES-NOT-HANDLED
	.DEBUG-LINE 3,99,1
?L1:	EQUAL? PRSA,V?TELL \?L6
	SET 'P-CONT,P-O-CONT
	ZERO? P-CONT /?L6
	.DEBUG-LINE 3,101,1
	SET 'READBUF,CONT-READBUF
	.DEBUG-LINE 3,101,1
	SET 'LEXBUF,CONT-LEXBUF
	.DEBUG-LINE 3,104,1
?L6:	BTST P-O-REASON,P-OF-MISSING \?L11
	.DEBUG-LINE 3,107,1
	BTST P-O-REASON,P-OF-PRSI \?L13
	.DEBUG-LINE 3,107,1
	PUSH P-NP-IOBJ
	JUMP ?L15
	.DEBUG-LINE 3,107,1
?L13:	PUSH P-NP-DOBJ
?L15:	ICALL COPY-NOUN-PHRASE,P-NP-XOBJ,STACK
	.DEBUG-LINE 3,110,1
	RETURN O-RES-SET-NP
	.DEBUG-LINE 3,113,1
?L11:	BTST P-O-REASON,P-OF-PRSI \?L17
	.DEBUG-LINE 3,113,1
	SET 'TBL,P-PRSIS
	JUMP ?L19
	.DEBUG-LINE 3,113,1
?L17:	SET 'TBL,P-PRSOS
	.DEBUG-LINE 3,114,1
?L19:	GETB TBL,0 >MAX
	.DEBUG-LINE 3,115,1
	SET 'CNT,0
	.DEBUG-LINE 3,116,1
	SET 'OUT,P-XOBJS
	.DEBUG-LINE 3,120,1
	GETB P-NP-XOBJ,0 >NY
	.DEBUG-LINE 3,122,1
	SET '?TMP,1
	.DEBUG-LINE 3,123,1
?L20:	GET TBL,?TMP >O
	.DEBUG-LINE 3,124,1
	ZERO? NY /?L25
	GETB P-NP-XOBJ,0 >STACK
	GET P-NP-XOBJ,1 >STACK
	CALL ANY-SPEC-REFERS?,STACK,STACK,O >STACK
	ZERO? STACK /?L23
?L25:	GETB P-NP-XOBJ,1 >STACK
	GET P-NP-XOBJ,2 >STACK
	CALL ANY-SPEC-REFERS?,STACK,STACK,O >STACK
	ZERO? STACK \?L23
	.DEBUG-LINE 3,127,1
	INC 'CNT
	.DEBUG-LINE 3,128,1
	PUT OUT,CNT,O
?L23:	IGRTR? '?TMP,MAX \?L20
	.DEBUG-LINE 3,131,1
	PUTB OUT,0,CNT
	.DEBUG-LINE 3,136,1
	ZERO? CNT \?L27
	.DEBUG-LINE 3,137,1
	SET 'O,0
	JUMP ?L31
	.DEBUG-LINE 3,138,1
?L27:	EQUAL? CNT,1 \?L29
	.DEBUG-LINE 3,139,1
	GET OUT,1 >O
	JUMP ?L31
	.DEBUG-LINE 3,140,1
?L29:	GETB P-NP-XOBJ,6 >STACK
	EQUAL? STACK,MCM-ANY \?L30
	.DEBUG-LINE 3,142,1
	RANDOM CNT >STACK
	GET OUT,STACK >O
	PUT OUT,1,O
	.DEBUG-LINE 3,143,1
	PUTB OUT,0,1
	.DEBUG-LINE 3,144,1
	SET 'CNT,1
	.DEBUG-LINE 3,145,1
	PRINTI "["
	ICALL2 PRINT-DEF,O
	PRINTI "]"
	CRLF
	JUMP ?L31
	.DEBUG-LINE 3,146,1
?L30:	SET 'O,MANY-OBJECTS
	.DEBUG-LINE 3,147,1
?L31:	BTST P-O-REASON,P-OF-PRSI \?L32
	.DEBUG-LINE 3,148,1
	SET 'P-PRSIS,P-XOBJS
	.DEBUG-LINE 3,149,1
	SET 'PRSI,O
	JUMP ?L34
	.DEBUG-LINE 3,151,1
?L32:	SET 'P-PRSOS,P-XOBJS
	.DEBUG-LINE 3,152,1
	SET 'PRSO,O
	.DEBUG-LINE 3,153,1
?L34:	SET 'P-XOBJS,TBL
	.DEBUG-LINE 3,155,1
	ZERO? CNT \?L35
	.DEBUG-LINE 3,156,1
	PRINTI "That wasn't an option."
	PRINT TRY-REPHRASING-CMD
	CRLF
	.DEBUG-LINE 3,157,1
	SET 'P-CONT,0
	.DEBUG-LINE 3,158,1
	RETURN O-RES-FAILED
	.DEBUG-LINE 3,159,1
?L35:	EQUAL? CNT,1 /?L38
	GETB P-NP-XOBJ,6 >STACK
	EQUAL? STACK,MCM-ALL \?L37
	.DEBUG-LINE 3,160,1
?L38:	RETURN O-RES-SET-PRSTBL
	.DEBUG-LINE 3,161,1
?L37:	LESS? CNT,MAX \?L39
	.DEBUG-LINE 3,162,1
	PRINTI "That narrowed it down a little. "
	.DEBUG-LINE 3,163,1
	ICALL2 WHICH-DO-YOU-MEAN,OUT
	.DEBUG-LINE 3,164,1
	RETURN O-RES-REORPHANED
	.DEBUG-LINE 3,166,1
?L39:	PRINTI "That didn't narrow it down at all."
	PRINT TRY-REPHRASING-CMD
	CRLF
	.DEBUG-LINE 3,167,1
	SET 'P-CONT,0
	.DEBUG-LINE 3,168,1
	RETURN O-RES-FAILED
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"REFERS-PSEUDO?","SPEC","PDO","NA","NN","AT","NT","A","N"
	.FUNCT REFERS-PSEUDO?,SPEC,PDO,NA,NN,AT,NT,A,N
	GET SPEC,0 >A
	GET SPEC,1 >N
	.DEBUG-LINE 4,59,1
	GETB PDO,0 >NA
	.DEBUG-LINE 4,60,1
	GETB PDO,1 >NN
	.DEBUG-LINE 4,61,1
	GET PDO,1 >AT
	.DEBUG-LINE 4,62,1
	GET PDO,2 >NT
	.DEBUG-LINE 4,63,1
	ZERO? A /?L1
	ZERO? N /?L10
	.DEBUG-LINE 4,64,1
	EQUAL? NA,1 \?L31
	EQUAL? A,AT /?L5
	EQUAL? NA,1 /FALSE
?L31:	CALL IN-WTBL?,AT,NA,A >STACK
	ZERO? STACK /FALSE
?L5:	EQUAL? NN,1 \?L32
	EQUAL? N,NT /?L7
	EQUAL? NN,1 /FALSE
?L32:	CALL IN-WTBL?,NT,NN,N >STACK
	ZERO? STACK /FALSE
	.DEBUG-LINE 4,65,1
?L7:	RETURN 3
	.DEBUG-LINE 4,66,1
?L1:	ZERO? N /?L10
	.DEBUG-LINE 4,67,1
	EQUAL? NN,1 \?L33
	EQUAL? N,NT /?L13
	EQUAL? NN,1 /?L11
?L33:	CALL IN-WTBL?,NT,NN,N >STACK
	ZERO? STACK /?L11
	.DEBUG-LINE 4,67,1
?L13:	RETURN 2
	.DEBUG-LINE 4,70,1
?L11:	CALL CHKWORD?,N,PS?ADJECTIVE >STACK
	ZERO? STACK /FALSE
	SET 'A,N
	PUSH A
	ZERO? STACK /FALSE
	.DEBUG-LINE 4,71,1
	EQUAL? NA,1 \?L34
	EQUAL? A,AT /TRUE
	EQUAL? NA,1 /FALSE
?L34:	CALL IN-WTBL?,AT,NA,A >STACK
	ZERO? STACK /FALSE
	.DEBUG-LINE 4,71,1
	RTRUE
	.DEBUG-LINE 4,72,1
?L10:	ZERO? A /FALSE
	.DEBUG-LINE 4,73,1
	EQUAL? NA,1 \?L35
	EQUAL? A,AT /TRUE
	EQUAL? NA,1 /FALSE
?L35:	CALL IN-WTBL?,AT,NA,A >STACK
	ZERO? STACK /FALSE
	.DEBUG-LINE 4,73,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"MATCH-PSEUDO","SPEC","PT","CNT"
	.FUNCT MATCH-PSEUDO,SPEC,PT,CNT
	.DEBUG-LINE 4,93,1
	GET PT,0 >CNT
	.DEBUG-LINE 4,94,1
	ADD PT,2 >PT
	.DEBUG-LINE 4,96,1
?L1:	DLESS? 'CNT,0 /FALSE
	.DEBUG-LINE 4,97,1
	CALL REFERS-PSEUDO?,SPEC,PT >STACK
	ZERO? STACK /?L5
	.DEBUG-LINE 4,97,1
	RETURN PT
	.DEBUG-LINE 4,98,1
?L5:	ADD PT,PDO-SIZE >PT
	JUMP ?L1
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"MAKE-PSEUDO","PDO"
	.FUNCT MAKE-PSEUDO,PDO
	.DEBUG-LINE 4,102,1
	GET PDO,3 >STACK
	PUTP PSEUDO-OBJECT,P?ACTION,STACK
	.DEBUG-LINE 4,103,1
	SET 'PSEUDO-LOC,HERE
	.DEBUG-LINE 4,104,1
	RETURN PSEUDO-OBJECT
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"THIS-IS-IT","O"
	.FUNCT THIS-IS-IT,O
	.DEBUG-LINE 5,120,1
	PUTB P-XOBJS,0,1
	.DEBUG-LINE 5,121,1
	PUT P-XOBJS,1,O
	.DEBUG-LINE 5,122,1
	CALL SET-PRONOUNS,O,P-XOBJS >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"CONTENTS-ARE-IT","CTNR","FILTER","N","I"
	.FUNCT CONTENTS-ARE-IT,CTNR,FILTER,N,I
	.DEBUG-LINE 5,127,1
	FIRST? CTNR >I \?L3
	.DEBUG-LINE 5,128,1
?L1:	ZERO? FILTER /?L6
	CALL2 FILTER,I >STACK
	ZERO? STACK /?L7
	.DEBUG-LINE 5,129,1
?L6:	INC 'N
	.DEBUG-LINE 5,130,1
	PUT P-XOBJS,N,I
	.DEBUG-LINE 5,131,1
	EQUAL? N,P-MAX-OBJECTS /?L3
?L7:	NEXT? I >I /?L1
	.DEBUG-LINE 5,132,1
?L3:	PUTB P-XOBJS,0,N
	.DEBUG-LINE 5,133,1
	ZERO? N /TRUE
	.DEBUG-LINE 5,134,1
	EQUAL? N,1 \?L13
	.DEBUG-LINE 5,134,1
	GET P-XOBJS,1 >N
	JUMP ?L14
	.DEBUG-LINE 5,135,1
?L13:	SET 'N,MANY-OBJECTS
	.DEBUG-LINE 5,136,1
?L14:	CALL SET-PRONOUNS,N,P-XOBJS >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRO-TRY-SET-IT","X","PRO?OBJS"
	.FUNCT PRO-TRY-SET-IT,X,PRO?OBJS
	.DEBUG-LINE 2,570,1
	EQUAL? X,WINNER,MANY-OBJECTS /FALSE
	FSET? X,PERSONBIT /FALSE
	FSET? X,PLURALBIT /FALSE
	.DEBUG-LINE 5,40,1
	CALL2 PRO-FORCE-SET-IT,PRO?OBJS >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRO-FORCE-SET-IT","PRO?OBJS"
	.FUNCT PRO-FORCE-SET-IT,PRO?OBJS
	.DEBUG-LINE 5,53,1
	COPYT PRO?OBJS,P-PRO-IT-OBJS,102
	.DEBUG-LINE 5,56,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRO-TRY-SET-THEM","X","PRO?OBJS"
	.FUNCT PRO-TRY-SET-THEM,X,PRO?OBJS
	.DEBUG-LINE 2,576,1
	EQUAL? X,WINNER /FALSE
	EQUAL? X,MANY-OBJECTS /?L3
	FSET? X,PLURALBIT \FALSE
	.DEBUG-LINE 5,40,1
?L3:	CALL2 PRO-FORCE-SET-THEM,PRO?OBJS >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRO-FORCE-SET-THEM","PRO?OBJS"
	.FUNCT PRO-FORCE-SET-THEM,PRO?OBJS
	.DEBUG-LINE 5,53,1
	COPYT PRO?OBJS,P-PRO-THEM-OBJS,102
	.DEBUG-LINE 5,56,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRO-TRY-SET-HIM","X","PRO?OBJS"
	.FUNCT PRO-TRY-SET-HIM,X,PRO?OBJS
	.DEBUG-LINE 2,581,1
	EQUAL? X,WINNER /FALSE
	FSET? X,PERSONBIT \FALSE
	FSET? X,FEMALEBIT /FALSE
	FSET? X,PLURALBIT /FALSE
	.DEBUG-LINE 5,40,1
	CALL2 PRO-FORCE-SET-HIM,PRO?OBJS >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRO-FORCE-SET-HIM","PRO?OBJS"
	.FUNCT PRO-FORCE-SET-HIM,PRO?OBJS
	.DEBUG-LINE 5,53,1
	COPYT PRO?OBJS,P-PRO-HIM-OBJS,102
	.DEBUG-LINE 5,56,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRO-TRY-SET-HER","X","PRO?OBJS"
	.FUNCT PRO-TRY-SET-HER,X,PRO?OBJS
	.DEBUG-LINE 2,587,1
	EQUAL? X,WINNER /FALSE
	FSET? X,PERSONBIT \FALSE
	FSET? X,FEMALEBIT \FALSE
	FSET? X,PLURALBIT /FALSE
	.DEBUG-LINE 5,40,1
	CALL2 PRO-FORCE-SET-HER,PRO?OBJS >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRO-FORCE-SET-HER","PRO?OBJS"
	.FUNCT PRO-FORCE-SET-HER,PRO?OBJS
	.DEBUG-LINE 5,53,1
	COPYT PRO?OBJS,P-PRO-HER-OBJS,102
	.DEBUG-LINE 5,56,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"SET-PRONOUNS","O","OBJS","PT","MAX","I"
	.FUNCT SET-PRONOUNS,O,OBJS,PT,MAX,I
	.DEBUG-LINE 5,63,1
	EQUAL? O,0,ROOMS /FALSE
	.DEBUG-LINE 5,64,1
	GETPT O,P?PRONOUN >PT
	ZERO? PT /?L3
	.DEBUG-LINE 5,65,1
	PTSIZE PT >STACK
	DIV STACK,2 >STACK
	SUB STACK,1 >MAX
	.DEBUG-LINE 5,66,1
	SET 'I,0
	.DEBUG-LINE 5,67,1
?L4:	GET PT,I >STACK
	ICALL2 STACK,OBJS
	IGRTR? 'I,MAX \?L4
	.DEBUG-LINE 5,68,1
	RTRUE
	.DEBUG-LINE 5,73,1
?L3:	ICALL PRO-TRY-SET-IT,O,OBJS
	.DEBUG-LINE 5,73,1
	ICALL PRO-TRY-SET-THEM,O,OBJS
	.DEBUG-LINE 5,73,1
	ICALL PRO-TRY-SET-HIM,O,OBJS
	.DEBUG-LINE 5,73,1
	CALL PRO-TRY-SET-HER,O,OBJS >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"EXPAND-PRONOUN","W","OBJS","CNT"
	.FUNCT EXPAND-PRONOUN,W,OBJS,CNT
	.DEBUG-LINE 5,85,1
	EQUAL? W,W?IT \?L1
	.DEBUG-LINE 5,86,1
	COPYT P-PRO-IT-OBJS,OBJS,102
	JUMP ?L6
	.DEBUG-LINE 5,85,1
?L1:	EQUAL? W,W?THEM \?L3
	.DEBUG-LINE 5,86,1
	COPYT P-PRO-THEM-OBJS,OBJS,102
	JUMP ?L6
	.DEBUG-LINE 5,85,1
?L3:	EQUAL? W,W?HIM \?L4
	.DEBUG-LINE 5,86,1
	COPYT P-PRO-HIM-OBJS,OBJS,102
	JUMP ?L6
	.DEBUG-LINE 5,85,1
?L4:	EQUAL? W,W?HER \FALSE
	.DEBUG-LINE 5,86,1
	COPYT P-PRO-HER-OBJS,OBJS,102
	.DEBUG-LINE 5,89,1
?L6:	GETB OBJS,0 >CNT
	.DEBUG-LINE 5,90,1
	ZERO? CNT \?L7
	.DEBUG-LINE 5,91,1
	PRINTI "You haven't seen any """
	PRINTB W
	PRINTI """ yet."
	CRLF
	.DEBUG-LINE 5,92,1
	RETURN EXPAND-PRONOUN-FAILED
	.DEBUG-LINE 5,93,1
?L7:	CALL2 STILL-VISIBLE-CHECK,OBJS >STACK
	ZERO? STACK \?L10
	.DEBUG-LINE 5,94,1
	RETURN EXPAND-PRONOUN-FAILED
	.DEBUG-LINE 5,95,1
?L10:	EQUAL? CNT,1 \?L13
	.DEBUG-LINE 5,95,1
	GET OBJS,1 >STACK
	RSTACK
	.DEBUG-LINE 5,96,1
?L13:	RETURN MANY-OBJECTS
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-PRONOUNS"
	.FUNCT V-PRONOUNS
	.DEBUG-LINE 5,107,1
	PRINTI "IT means "
	.DEBUG-LINE 5,108,1
	ICALL LIST-OBJECTS,P-PRO-IT-OBJS,0,152
	.DEBUG-LINE 5,112,1
	PRINTI "."
	CRLF
	.DEBUG-LINE 5,107,1
	PRINTI "THEM means "
	.DEBUG-LINE 5,108,1
	ICALL LIST-OBJECTS,P-PRO-THEM-OBJS,0,152
	.DEBUG-LINE 5,112,1
	PRINTI "."
	CRLF
	.DEBUG-LINE 5,107,1
	PRINTI "HIM means "
	.DEBUG-LINE 5,108,1
	ICALL LIST-OBJECTS,P-PRO-HIM-OBJS,0,152
	.DEBUG-LINE 5,112,1
	PRINTI "."
	CRLF
	.DEBUG-LINE 5,107,1
	PRINTI "HER means "
	.DEBUG-LINE 5,108,1
	ICALL LIST-OBJECTS,P-PRO-HER-OBJS,0,152
	.DEBUG-LINE 5,112,1
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"MAIN-LOOP","?RESULT"
	.FUNCT MAIN-LOOP,?RESULT
	.DEBUG-LINE 2,608,1
?L1:	CALL1 PARSER >?RESULT
	.DEBUG-LINE 2,608,1
	ZERO? ?RESULT /?L1
	.DEBUG-LINE 2,609,1
	ICALL PERFORM,PRSA,PRSO,PRSI
	.DEBUG-LINE 2,636,1
	EQUAL? PRSA,V?QUIT,V?VERSION,V?WAIT /?L13
	EQUAL? PRSA,V?SAVE,V?RESTORE,V?RESTART /?L13
	EQUAL? PRSA,V?INVENTORY,V?UNDO,V?SUPERBRIEF /?L13
	EQUAL? PRSA,V?BRIEF,V?VERBOSE,V?AGAIN /?L13
	EQUAL? PRSA,V?SCRIPT,V?UNSCRIPT,V?PRONOUNS /?L13
	EQUAL? PRSA,V?TELL /?L13
	.DEBUG-LINE 2,637,1
	GETP HERE,P?ACTION >STACK
	ICALL2 STACK,M-END
	.DEBUG-LINE 2,638,1
	ICALL1 CLOCKER
	.DEBUG-LINE 2,609,1
?L13:	LOC WINNER >HERE
	JUMP ?L1
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PARSER","NOBJ","VAL","DIR","DIR-WN","O-R","KEEP","OW","OH","OHL","RES","W","V"
	.FUNCT PARSER,NOBJ,VAL,DIR,DIR-WN,O-R,KEEP,OW,OH,OHL,RES,W,V
	.DEBUG-LINE 2,709,1
?L0:	SET 'OW,WINNER
	.DEBUG-LINE 2,710,1
	SET 'OH,HERE
	.DEBUG-LINE 2,711,1
	SET 'OHL,HERE-LIT
	.DEBUG-LINE 2,712,1
	SET 'NOBJ,0
	.DEBUG-LINE 2,713,1
	SET 'VAL,0
	.DEBUG-LINE 2,714,1
	SET 'DIR,0
	.DEBUG-LINE 2,715,1
	SET 'DIR-WN,0
	.DEBUG-LINE 2,717,1
	LESS? P-CONT,0 \?L1
	.DEBUG-LINE 2,717,1
	SET 'P-CONT,0
	.DEBUG-LINE 2,718,1
?L1:	ZERO? P-CONT /?L4
	.DEBUG-LINE 2,720,1
	SET 'READBUF,CONT-READBUF
	.DEBUG-LINE 2,720,1
	SET 'LEXBUF,CONT-LEXBUF
	.DEBUG-LINE 2,721,1
	EQUAL? P-CONT,1 \?L8
	.DEBUG-LINE 2,721,1
	SET 'P-CONT,0
	JUMP ?L15
	.DEBUG-LINE 2,722,1
?L8:	EQUAL? MODE,SUPERBRIEF /?L15
	.DEBUG-LINE 2,724,1
	EQUAL? PRSA,V?TELL /?L15
	.DEBUG-LINE 2,724,1
	CRLF
	JUMP ?L15
	.DEBUG-LINE 2,727,1
?L4:	SET 'WINNER,PLAYER
	.DEBUG-LINE 2,728,1
	LOC WINNER >HERE
	.DEBUG-LINE 2,729,1
	CALL1 SEARCH-FOR-LIGHT >HERE-LIT
	.DEBUG-LINE 2,730,1
	ICALL2 READLINE,1
	.DEBUG-LINE 2,736,1
?L15:	GETB LEXBUF,1 >P-LEN
	.DEBUG-LINE 2,737,1
	ZERO? P-LEN \?L16
	.DEBUG-LINE 2,738,1
	PRINTI "..."
	CRLF
	.DEBUG-LINE 2,739,1
	SET 'P-CONT,0
	.DEBUG-LINE 2,740,1
	RFALSE
	.DEBUG-LINE 2,744,1
?L16:	LESS? P-LEN,1 /?L19
	CALL2 GETWORD?,1 >STACK
	EQUAL? STACK,W?UNDO \?L19
	EQUAL? P-LEN,1 /?L27
	CALL2 GETWORD?,2 >STACK
	EQUAL? STACK,W?$PERIOD,W?THEN /?L27
	.DEBUG-LINE 2,750,1
?L19:	ISAVE >RES
	.DEBUG-LINE 2,751,1
	EQUAL? RES,2 \?L25
	.DEBUG-LINE 2,752,1
	PRINTI "Previous turn undone."
	CRLF
	CRLF
	.DEBUG-LINE 2,753,1
	SET 'WINNER,OW
	.DEBUG-LINE 2,754,1
	SET 'HERE,OH
	.DEBUG-LINE 2,755,1
	SET 'HERE-LIT,OHL
	.DEBUG-LINE 2,756,1
	ICALL1 V-LOOK
	.DEBUG-LINE 2,757,1
	SET 'P-CONT,0
	.DEBUG-LINE 2,758,1
	JUMP ?L0
	.DEBUG-LINE 2,760,1
?L25:	SET 'USAVE,RES
	.DEBUG-LINE 2,762,1
?L27:	ZERO? P-CONT \?L38
	.DEBUG-LINE 2,764,1
	ZERO? P-LEN /?L38
	CALL2 GETWORD?,1 >STACK
	EQUAL? STACK,W?OOPS \?L38
	.DEBUG-LINE 2,765,1
	EQUAL? P-LEN,2 \?L32
	.DEBUG-LINE 2,6,1
	GETB P-OOPS-DATA,4 >STACK
	ZERO? STACK /?L34
	.DEBUG-LINE 2,768,1
	ICALL2 HANDLE-OOPS,2
	.DEBUG-LINE 2,769,1
	GETB LEXBUF,1 >P-LEN
	JUMP ?L38
	.DEBUG-LINE 2,772,1
?L34:	PRINTI "Nothing to correct."
	CRLF
	.DEBUG-LINE 2,773,1
	RFALSE
	.DEBUG-LINE 2,774,1
?L32:	EQUAL? P-LEN,1 \?L37
	.DEBUG-LINE 2,775,1
	PRINTI "It's OK."
	CRLF
	.DEBUG-LINE 2,776,1
	RFALSE
	.DEBUG-LINE 2,778,1
?L37:	PRINTI "You can only correct one word at a time."
	CRLF
	.DEBUG-LINE 2,779,1
	RFALSE
	.DEBUG-LINE 2,781,1
?L38:	SET 'KEEP,0
	.DEBUG-LINE 2,782,1
	PUTB P-OOPS-DATA,4,0
	.DEBUG-LINE 2,783,1
	PUTB P-OOPS-DATA,5,0
	.DEBUG-LINE 2,784,1
	PUT P-OOPS-DATA,0,P-O-REASON
	.DEBUG-LINE 2,786,1
	ZERO? P-CONT \?L70
	.DEBUG-LINE 2,788,1
	EQUAL? READBUF,EDIT-READBUF /?L43
	.DEBUG-LINE 2,789,1
	ICALL COPY-READBUF,READBUF,EDIT-READBUF
	.DEBUG-LINE 2,789,1
	ICALL COPY-LEXBUF,LEXBUF,EDIT-LEXBUF
	.DEBUG-LINE 2,790,1
	SET 'READBUF,EDIT-READBUF
	.DEBUG-LINE 2,790,1
	SET 'LEXBUF,EDIT-LEXBUF
	.DEBUG-LINE 2,792,1
?L43:	ZERO? P-O-REASON /?L50
	.DEBUG-LINE 2,793,1
	CALL1 HANDLE-ORPHAN-RESPONSE >O-R
	.DEBUG-LINE 2,794,1
	EQUAL? O-R,O-RES-NOT-HANDLED /?L52
	.DEBUG-LINE 2,795,1
	SET 'WINNER,OW
	.DEBUG-LINE 2,796,1
	SET 'HERE,OH
	.DEBUG-LINE 2,797,1
	SET 'HERE-LIT,OHL
	.DEBUG-LINE 2,798,1
?L52:	EQUAL? O-R,O-RES-REORPHANED /FALSE
	.DEBUG-LINE 2,801,1
	EQUAL? O-R,O-RES-FAILED \?L57
	.DEBUG-LINE 2,802,1
	SET 'P-O-REASON,0
	.DEBUG-LINE 2,804,1
	RFALSE
	.DEBUG-LINE 2,805,1
?L57:	EQUAL? O-R,O-RES-SET-NP \?L58
	.DEBUG-LINE 2,809,1
	GETB P-SYNTAX,SYN-PREP1 >P-P1
	.DEBUG-LINE 2,810,1
	BTST P-O-REASON,P-OF-PRSI \?L59
	.DEBUG-LINE 2,811,1
	GETB P-SYNTAX,SYN-PREP2 >P-P2
	.DEBUG-LINE 2,812,1
	SET 'P-NOBJ,2
	.DEBUG-LINE 2,815,1
	SET 'KEEP,1
	JUMP ?L65
	.DEBUG-LINE 2,816,1
?L59:	SET 'P-NOBJ,1
	JUMP ?L65
	.DEBUG-LINE 2,817,1
?L58:	EQUAL? O-R,O-RES-SET-PRSTBL \?L65
	.DEBUG-LINE 2,818,1
	BTST P-O-REASON,P-OF-PRSI \?L63
	.DEBUG-LINE 2,818,1
	SET 'KEEP,2
	JUMP ?L65
	.DEBUG-LINE 2,819,1
?L63:	SET 'KEEP,1
	.DEBUG-LINE 2,820,1
?L65:	SET 'P-O-REASON,0
	.DEBUG-LINE 2,823,1
?L50:	ZERO? O-R \?L70
	.DEBUG-LINE 2,827,1
	CALL1 CONVERT-ORDER-TO-TELL? >STACK
	ZERO? STACK /?L70
	.DEBUG-LINE 2,828,1
	GETB LEXBUF,1 >P-LEN
	.DEBUG-LINE 2,831,1
?L70:	EQUAL? O-R,O-RES-SET-NP,O-RES-SET-PRSTBL /?L75
	.DEBUG-LINE 2,832,1
	SET 'P-V,0
	.DEBUG-LINE 2,833,1
	SET 'P-NOBJ,0
	.DEBUG-LINE 2,834,1
	ICALL2 CLEAR-NOUN-PHRASE,P-NP-DOBJ
	.DEBUG-LINE 2,835,1
	ICALL2 CLEAR-NOUN-PHRASE,P-NP-IOBJ
	.DEBUG-LINE 2,836,1
	SET 'P-P1,0
	.DEBUG-LINE 2,837,1
	SET 'P-P2,0
	.DEBUG-LINE 2,839,1
	SET 'RES,P-CONT
	ZERO? RES \?L77
	SET 'RES,1
	.DEBUG-LINE 2,840,1
?L77:	GRTR? RES,P-LEN \?L81
	.DEBUG-LINE 2,842,1
	SET 'P-CONT,0
	.DEBUG-LINE 2,843,1
	JUMP ?L80
	.DEBUG-LINE 2,844,1
?L81:	CALL2 GETWORD?,RES >W
	ZERO? W \?L83
	CALL2 PARSE-NUMBER?,RES >STACK
	ZERO? STACK /?L84
	SET 'W,W?$002cNUMBER
	ZERO? W \?L83
	.DEBUG-LINE 2,847,1
?L84:	ICALL2 STORE-OOPS,RES
	.DEBUG-LINE 2,848,1
	SET 'P-CONT,0
	.DEBUG-LINE 2,849,1
	PRINTI "I don't know the word """
	ICALL2 PRINT-WORD,RES
	PRINTI """."
	CRLF
	.DEBUG-LINE 2,850,1
	RFALSE
	.DEBUG-LINE 2,851,1
?L83:	EQUAL? W,W?THEN,W?$PERIOD \?L85
	.DEBUG-LINE 2,854,1
	ADD RES,1 >P-CONT
	.DEBUG-LINE 2,855,1
	GRTR? P-CONT,P-LEN \?L86
	.DEBUG-LINE 2,855,1
	SET 'P-CONT,0
	JUMP ?L80
	.DEBUG-LINE 2,856,1
?L86:	ICALL COPY-READBUF,READBUF,CONT-READBUF
	.DEBUG-LINE 2,856,1
	ICALL COPY-LEXBUF,LEXBUF,CONT-LEXBUF
	.DEBUG-LINE 2,857,1
	JUMP ?L80
	.DEBUG-LINE 2,858,1
?L85:	ZERO? P-V \?L91
	CALL CHKWORD?,W,PS?VERB,P1?VERB >V
	ZERO? V /?L91
	ZERO? DIR /?L92
	EQUAL? V,ACT?WALK \?L91
	.DEBUG-LINE 2,862,1
?L92:	SET 'P-V-WORD,W
	.DEBUG-LINE 2,863,1
	SET 'P-V-WORDN,RES
	.DEBUG-LINE 2,864,1
	SET 'P-V,V
	JUMP ?L110
	.DEBUG-LINE 2,866,1
?L91:	ZERO? DIR \?L93
	EQUAL? P-V,0,ACT?WALK \?L93
	CALL CHKWORD?,W,PS?DIRECTION,P1?DIRECTION >VAL
	ZERO? VAL /?L93
	.DEBUG-LINE 2,870,1
	SET 'DIR,VAL
	.DEBUG-LINE 2,871,1
	SET 'DIR-WN,RES
	JUMP ?L110
	.DEBUG-LINE 2,873,1
?L93:	CALL CHKWORD?,W,PS?PREPOSITION,0 >VAL
	ZERO? VAL /?L94
	.DEBUG-LINE 2,876,1
	ZERO? NOBJ \?L95
	ZERO? P-P1 \?L95
	.DEBUG-LINE 2,878,1
	SET 'P-P1,VAL
	JUMP ?L110
	.DEBUG-LINE 2,879,1
?L95:	EQUAL? NOBJ,1 \?L110
	ZERO? P-P2 \?L110
	.DEBUG-LINE 2,881,1
	SET 'P-P2,VAL
	JUMP ?L110
	.DEBUG-LINE 2,882,1
?L94:	CALL2 STARTS-NOUN-PHRASE?,W >STACK
	ZERO? STACK /?L99
	.DEBUG-LINE 2,884,1
	INC 'NOBJ
	.DEBUG-LINE 2,887,1
	EQUAL? NOBJ,1 \?L100
	.DEBUG-LINE 2,890,1
	ZERO? DIR /?L102
	ZERO? P-V /?L102
	ZERO? P-P1 \?L102
	CALL2 GETWORD?,DIR-WN >V
	ZERO? V /?L102
	CALL CHKWORD?,V,PS?PREPOSITION,0 >VAL
	ZERO? VAL /?L102
	.DEBUG-LINE 2,897,1
	SET 'P-P1,VAL
	.DEBUG-LINE 2,898,1
	SET 'DIR,0
	.DEBUG-LINE 2,899,1
	SET 'DIR-WN,0
	.DEBUG-LINE 2,900,1
?L102:	CALL PARSE-NOUN-PHRASE,RES,P-NP-DOBJ >VAL
	JUMP ?L106
	.DEBUG-LINE 2,901,1
?L100:	EQUAL? NOBJ,2 \?L105
	.DEBUG-LINE 2,902,1
	CALL PARSE-NOUN-PHRASE,RES,P-NP-IOBJ >VAL
	JUMP ?L106
	.DEBUG-LINE 2,904,1
?L105:	SET 'P-CONT,0
	.DEBUG-LINE 2,905,1
	PRINTI "That sentence has too many objects."
	CRLF
	.DEBUG-LINE 2,906,1
	RFALSE
	.DEBUG-LINE 2,909,1
?L106:	ZERO? VAL /?L107
	.DEBUG-LINE 2,910,1
	SET 'RES,VAL
	.DEBUG-LINE 2,911,1
	JUMP ?L77
	.DEBUG-LINE 2,913,1
?L107:	SET 'P-CONT,0
	.DEBUG-LINE 2,914,1
	RFALSE
	.DEBUG-LINE 2,917,1
?L99:	ICALL2 STORE-OOPS,RES
	.DEBUG-LINE 2,918,1
	SET 'P-CONT,0
	.DEBUG-LINE 2,919,1
	PRINTI "I didn't expect the word """
	ICALL2 PRINT-WORD,RES
	PRINTI """ there."
	CRLF
	.DEBUG-LINE 2,921,1
	RFALSE
	.DEBUG-LINE 2,922,1
?L110:	INC 'RES
	JUMP ?L77
	.DEBUG-LINE 2,924,1
?L80:	SET 'P-NOBJ,NOBJ
	.DEBUG-LINE 2,936,1
	ZERO? DIR /?L111
	EQUAL? P-V,0,ACT?WALK \?L111
	ZERO? NOBJ \?L111
	ZERO? P-P1 \?L111
	ZERO? P-P2 \?L111
	.DEBUG-LINE 2,941,1
	SET 'PRSO-DIR,1
	.DEBUG-LINE 2,942,1
	SET 'PRSA,V?WALK
	.DEBUG-LINE 2,943,1
	SET 'PRSO,DIR
	.DEBUG-LINE 2,944,1
	SET 'PRSI,0
	.DEBUG-LINE 2,945,1
	EQUAL? PRSA,V?AGAIN /TRUE
	.DEBUG-LINE 2,947,1
	ICALL2 SAVE-PARSER-RESULT,AGAIN-STORAGE
	.DEBUG-LINE 2,949,1
	RTRUE
	.DEBUG-LINE 2,951,1
?L111:	ZERO? P-V \?L117
	.DEBUG-LINE 2,952,1
	SET 'P-CONT,0
	.DEBUG-LINE 2,953,1
	PRINTI "That sentence has no verb."
	CRLF
	.DEBUG-LINE 2,955,1
	RFALSE
	.DEBUG-LINE 2,956,1
?L117:	ZERO? DIR /?L119
	.DEBUG-LINE 2,957,1
	ICALL2 STORE-OOPS,DIR-WN
	.DEBUG-LINE 2,958,1
	SET 'P-CONT,0
	.DEBUG-LINE 2,959,1
	PRINTI "I don't understand what """
	ICALL2 PRINT-WORD,DIR-WN
	PRINTI """ is doing in that sentence."
	CRLF
	.DEBUG-LINE 2,961,1
	RFALSE
	.DEBUG-LINE 2,962,1
?L119:	SET 'PRSO-DIR,0
	.DEBUG-LINE 2,964,1
?L75:	ZERO? O-R \?L122
	.DEBUG-LINE 2,966,1
	CALL1 MATCH-SYNTAX >STACK
	ZERO? STACK /?L126
	CALL2 FIND-OBJECTS,KEEP >STACK
	ZERO? STACK \?L129
	.DEBUG-LINE 2,968,1
?L126:	SET 'P-CONT,0
	.DEBUG-LINE 2,969,1
	RFALSE
	.DEBUG-LINE 2,970,1
?L122:	LESS? KEEP,2 \?L129
	.DEBUG-LINE 2,974,1
	CALL2 FIND-OBJECTS,KEEP >STACK
	ZERO? STACK \?L129
	.DEBUG-LINE 2,976,1
	SET 'P-CONT,0
	.DEBUG-LINE 2,977,1
	RFALSE
	.DEBUG-LINE 2,979,1
?L129:	EQUAL? PRSA,V?AGAIN /?L133
	.DEBUG-LINE 2,981,1
	ICALL2 SAVE-PARSER-RESULT,AGAIN-STORAGE
	.DEBUG-LINE 2,983,1
?L133:	ICALL SET-PRONOUNS,PRSO,P-PRSOS
	.DEBUG-LINE 2,985,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"STORE-OOPS","WN"
	.FUNCT STORE-OOPS,WN
	.DEBUG-LINE 2,996,1
	EQUAL? LEXBUF,EDIT-LEXBUF /?L1
	.DEBUG-LINE 2,997,1
	ICALL COPY-READBUF,READBUF,EDIT-READBUF
	.DEBUG-LINE 2,997,1
	ICALL COPY-LEXBUF,LEXBUF,EDIT-LEXBUF
	.DEBUG-LINE 2,999,1
?L1:	PUTB P-OOPS-DATA,5,P-CONT
	.DEBUG-LINE 2,1000,1
	PUT P-OOPS-DATA,1,WINNER
	.DEBUG-LINE 2,1001,1
	PUTB P-OOPS-DATA,4,WN
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"HANDLE-OOPS","N","W","WN","SS","SL","DS","DL","BL","MAX","DELTA","LBUF","RBUF","I"
	.FUNCT HANDLE-OOPS,N,W,WN,SS,SL,DS,DL,BL,MAX,DELTA,LBUF,RBUF,I
	SET 'LBUF,EDIT-LEXBUF
	SET 'RBUF,EDIT-READBUF
	.DEBUG-LINE 2,1007,1
	CALL2 GETWORD?,N >W
	.DEBUG-LINE 2,1009,1
	GETB P-OOPS-DATA,4 >WN
	.DEBUG-LINE 2,1010,1
	MUL WN,2 >STACK
	DEC 'STACK
	PUT LBUF,STACK,W
	.DEBUG-LINE 2,1012,1
	MUL N,4 >STACK
	INC 'STACK
	GETB LEXBUF,STACK >SS
	.DEBUG-LINE 2,1013,1
	MUL N,4 >STACK
	GETB LEXBUF,STACK >SL
	.DEBUG-LINE 2,1014,1
	MUL WN,4 >STACK
	INC 'STACK
	GETB LBUF,STACK >DS
	.DEBUG-LINE 2,1015,1
	MUL WN,4 >STACK
	GETB LBUF,STACK >DL
	.DEBUG-LINE 2,1016,1
	MUL WN,4 >STACK
	PUTB LBUF,STACK,SL
	.DEBUG-LINE 2,1017,1
	LESS? SL,DL \?L1
	.DEBUG-LINE 2,1019,1
	ADD RBUF,DS >STACK
	ADD READBUF,SS >STACK
	COPYT STACK,STACK,SL
	.DEBUG-LINE 2,1020,1
	ADD DS,DL >STACK
	SUB STACK,1 >MAX
	.DEBUG-LINE 2,1021,1
	ADD SL,1 >I
	.DEBUG-LINE 2,1022,1
?L3:	PUTB RBUF,I,32
	IGRTR? 'I,MAX \?L3
	JUMP ?L17
	.DEBUG-LINE 2,1023,1
?L1:	GRTR? SL,DL \?L17
	.DEBUG-LINE 2,1025,1
	CALL2 READBUF-LENGTH,RBUF >BL
	.DEBUG-LINE 2,1027,1
	SUB SL,DL >DELTA
	.DEBUG-LINE 2,1028,1
	ADD BL,DELTA >STACK
	LESS? STACK,READBUF-SIZE /?L7
	.DEBUG-LINE 2,1029,1
	SUB READBUF-SIZE,DELTA >STACK
	SUB STACK,1 >BL
	.DEBUG-LINE 2,1030,1
?L7:	SET 'I,BL
	.DEBUG-LINE 2,1031,1
?L10:	GETB RBUF,I >STACK
	ADD I,DELTA >STACK
	PUTB RBUF,STACK,STACK
	DLESS? 'I,DS \?L10
	.DEBUG-LINE 2,1032,1
	ADD RBUF,DS >STACK
	ADD READBUF,SS >STACK
	COPYT STACK,STACK,SL
	.DEBUG-LINE 2,1034,1
	GETB LBUF,1 >MAX
	.DEBUG-LINE 2,1035,1
	LESS? N,MAX \?L17
	.DEBUG-LINE 2,1036,1
	ADD N,1 >I
	.DEBUG-LINE 2,1037,1
?L15:	MUL I,4 >STACK
	INC 'STACK
	GETB LBUF,STACK >STACK
	ADD STACK,DELTA >STACK
	MUL I,4 >STACK
	INC 'STACK
	PUTB LBUF,STACK,STACK
	IGRTR? 'I,MAX \?L15
	.DEBUG-LINE 2,1041,1
?L17:	SET 'READBUF,RBUF
	.DEBUG-LINE 2,1042,1
	SET 'LEXBUF,LBUF
	.DEBUG-LINE 2,1043,1
	GET P-OOPS-DATA,0 >P-O-REASON
	.DEBUG-LINE 2,1044,1
	GETB P-OOPS-DATA,5 >P-CONT
	.DEBUG-LINE 2,1045,1
	GET P-OOPS-DATA,1 >WINNER
	.DEBUG-LINE 2,1046,1
	PUTB P-OOPS-DATA,4,0
	.DEBUG-LINE 2,1047,1
	PUTB P-OOPS-DATA,5,0
	.DEBUG-LINE 2,1048,1
	PUT P-OOPS-DATA,0,0
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"REPLACE-HELD-WORD","N","NEW-WORD","S","OL","NL","BL","MAX","DELTA","LBUF","RBUF","I"
	.FUNCT REPLACE-HELD-WORD,N,NEW-WORD,S,OL,NL,BL,MAX,DELTA,LBUF,RBUF,I
	SET 'LBUF,EDIT-LEXBUF
	SET 'RBUF,EDIT-READBUF
	.DEBUG-LINE 2,1054,1
	MUL N,2 >STACK
	DEC 'STACK
	PUT LBUF,STACK,NEW-WORD
	.DEBUG-LINE 2,1056,1
	DIROUT 3,TEMPTABLE
	.DEBUG-LINE 2,1057,1
	PRINTB NEW-WORD
	.DEBUG-LINE 2,1058,1
	DIROUT -3
	.DEBUG-LINE 2,1059,1
	MUL N,4 >STACK
	INC 'STACK
	GETB LBUF,STACK >S
	.DEBUG-LINE 2,1060,1
	MUL N,4 >STACK
	GETB LBUF,STACK >OL
	.DEBUG-LINE 2,1061,1
	GET TEMPTABLE,0 >NL
	.DEBUG-LINE 2,1062,1
	MUL N,4 >STACK
	PUTB LBUF,STACK,NL
	.DEBUG-LINE 2,1063,1
	LESS? NL,OL \?L1
	.DEBUG-LINE 2,1065,1
	ADD S,OL >STACK
	SUB STACK,1 >MAX
	.DEBUG-LINE 2,1066,1
	ADD S,NL >STACK
	ADD STACK,1 >I
	.DEBUG-LINE 2,1067,1
?L3:	PUTB RBUF,I,32
	IGRTR? 'I,MAX \?L3
	JUMP ?L17
	.DEBUG-LINE 2,1068,1
?L1:	GRTR? NL,OL \?L17
	.DEBUG-LINE 2,1070,1
	CALL2 READBUF-LENGTH,RBUF >BL
	.DEBUG-LINE 2,1072,1
	SUB NL,OL >DELTA
	.DEBUG-LINE 2,1073,1
	ADD BL,DELTA >STACK
	LESS? STACK,READBUF-SIZE /?L7
	.DEBUG-LINE 2,1074,1
	SUB READBUF-SIZE,DELTA >STACK
	SUB STACK,1 >BL
	.DEBUG-LINE 2,1075,1
?L7:	SET 'I,BL
	.DEBUG-LINE 2,1076,1
?L10:	GETB RBUF,I >STACK
	ADD I,DELTA >STACK
	PUTB RBUF,STACK,STACK
	DLESS? 'I,S \?L10
	.DEBUG-LINE 2,1078,1
	GETB LBUF,1 >MAX
	.DEBUG-LINE 2,1079,1
	LESS? N,MAX \?L17
	.DEBUG-LINE 2,1080,1
	ADD N,1 >I
	.DEBUG-LINE 2,1081,1
?L15:	MUL I,4 >STACK
	INC 'STACK
	GETB LBUF,STACK >STACK
	ADD STACK,DELTA >STACK
	MUL I,4 >STACK
	INC 'STACK
	PUTB LBUF,STACK,STACK
	IGRTR? 'I,MAX \?L15
	.DEBUG-LINE 2,1086,1
?L17:	ADD RBUF,S >STACK
	COPYT TEMPTABLE+2,STACK,NL
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"INSERT-HELD-WORD","N","NEW-WORD","LBUF","RBUF","LEN","MIN","BL","S","MAX","NL","DELTA","I"
	.FUNCT INSERT-HELD-WORD,N,NEW-WORD,LBUF,RBUF,LEN,MIN,BL,S,MAX,NL,DELTA,I
	SET 'LBUF,EDIT-LEXBUF
	SET 'RBUF,EDIT-READBUF
	GETB LBUF,1 >LEN
	.DEBUG-LINE 2,1092,1
	LESS? N,1 \?L1
	.DEBUG-LINE 2,1092,1
	SET 'N,1
	JUMP ?L3
	.DEBUG-LINE 2,1093,1
?L1:	GRTR? N,LEN \?L3
	.DEBUG-LINE 2,1093,1
	ADD LEN,1 >N
	.DEBUG-LINE 2,1094,1
?L3:	DIROUT 3,TEMPTABLE
	.DEBUG-LINE 2,1095,1
	PRINTB NEW-WORD
	.DEBUG-LINE 2,1096,1
	DIROUT -3
	.DEBUG-LINE 2,1097,1
	GET TEMPTABLE,0 >NL
	.DEBUG-LINE 2,1099,1
	EQUAL? LEN,LEXBUF-SIZE \?L5
	.DEBUG-LINE 2,1099,1
	SET 'LEN,58
	.DEBUG-LINE 2,1100,1
?L5:	GRTR? N,LEN /?L35
	.DEBUG-LINE 2,1101,1
	MUL N,2 >MIN
	.DEBUG-LINE 2,1102,1
	MUL LEN,2 >I
	.DEBUG-LINE 2,1103,1
?L10:	GET LBUF,I >STACK
	ADD I,2 >STACK
	PUT LBUF,STACK,STACK
	.DEBUG-LINE 2,1104,1
	SUB I,1 >STACK
	GET LBUF,STACK >STACK
	ADD I,1 >STACK
	PUT LBUF,STACK,STACK
	SUB I,2 >I
	LESS? I,MIN \?L10
	.DEBUG-LINE 2,1106,1
	GRTR? N,LEN \?L14
	.DEBUG-LINE 2,1106,1
?L35:	CALL2 READBUF-LENGTH,RBUF >STACK
	ADD STACK,1 >S
	JUMP ?L16
	.DEBUG-LINE 2,1107,1
?L14:	MUL N,4 >STACK
	INC 'STACK
	GETB LBUF,STACK >S
	.DEBUG-LINE 2,1108,1
?L16:	MUL N,2 >STACK
	DEC 'STACK
	PUT LBUF,STACK,NEW-WORD
	.DEBUG-LINE 2,1109,1
	MUL N,4 >STACK
	PUTB LBUF,STACK,NL
	.DEBUG-LINE 2,1110,1
	MUL N,4 >STACK
	INC 'STACK
	PUTB LBUF,STACK,S
	.DEBUG-LINE 2,1111,1
	ADD LEN,1 >STACK
	PUTB LBUF,1,STACK
	.DEBUG-LINE 2,1112,1
	GRTR? N,LEN /?L29
	.DEBUG-LINE 2,1114,1
	CALL2 READBUF-LENGTH,RBUF >BL
	.DEBUG-LINE 2,1115,1
	ADD NL,1 >DELTA
	.DEBUG-LINE 2,1117,1
	ADD BL,DELTA >STACK
	LESS? STACK,READBUF-SIZE /?L19
	.DEBUG-LINE 2,1118,1
	SUB READBUF-SIZE,DELTA >STACK
	SUB STACK,1 >BL
	.DEBUG-LINE 2,1120,1
?L19:	ADD BL,DELTA >STACK
	PUTB RBUF,1,STACK
	.DEBUG-LINE 2,1121,1
	SET 'I,BL
	.DEBUG-LINE 2,1122,1
?L22:	GETB RBUF,I >STACK
	ADD I,DELTA >STACK
	PUTB RBUF,STACK,STACK
	DLESS? 'I,S \?L22
	.DEBUG-LINE 2,1124,1
	ADD LEN,1 >MAX
	.DEBUG-LINE 2,1125,1
	LESS? N,MAX \?L29
	.DEBUG-LINE 2,1126,1
	ADD N,1 >I
	.DEBUG-LINE 2,1127,1
?L27:	MUL I,4 >STACK
	INC 'STACK
	GETB LBUF,STACK >STACK
	ADD STACK,DELTA >STACK
	MUL I,4 >STACK
	INC 'STACK
	PUTB LBUF,STACK,STACK
	IGRTR? 'I,MAX \?L27
	.DEBUG-LINE 2,1132,1
?L29:	ADD RBUF,S >STACK
	COPYT TEMPTABLE+2,STACK,NL
	.DEBUG-LINE 2,1134,1
	GRTR? N,LEN \?L32
	.DEBUG-LINE 2,1134,1
	SUB S,1 >STACK
	JUMP ?L34
	.DEBUG-LINE 2,1134,1
?L32:	ADD S,NL >STACK
?L34:	PUTB RBUF,STACK,32
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"CONVERT-ORDER-TO-TELL?","P","W"
	.FUNCT CONVERT-ORDER-TO-TELL?,P,W
	.DEBUG-LINE 2,1148,1
	LESS? P-LEN,2 /FALSE
	.DEBUG-LINE 2,1149,1
	CALL2 GETWORD?,1 >STACK
	CALL2 STARTS-NOUN-PHRASE?,STACK >STACK
	ZERO? STACK /?L3
	CALL PARSE-NOUN-PHRASE,1,P-NP-XOBJ,1 >P
	ZERO? P /?L3
	LESS? P,P-LEN \?L3
	CALL2 GETWORD?,P >STACK
	EQUAL? STACK,W?$COMMA \?L3
	ADD P,1 >STACK
	CALL2 GETWORD?,STACK >W
	CALL CHKWORD?,W,PS?VERB >STACK
	ZERO? STACK \?L4
	CALL CHKWORD?,W,PS?DIRECTION >STACK
	ZERO? STACK /?L3
	.DEBUG-LINE 2,1157,1
?L4:	ICALL REPLACE-HELD-WORD,P,W?$PERIOD
	.DEBUG-LINE 2,1158,1
	ICALL INSERT-HELD-WORD,1,W?$002cTELL
	.DEBUG-LINE 2,1160,1
	RTRUE
	.DEBUG-LINE 2,1161,1
?L3:	CALL2 GETWORD?,1 >STACK
	EQUAL? STACK,W?TELL \FALSE
	CALL PARSE-NOUN-PHRASE,2,P-NP-XOBJ,1 >P
	ZERO? P /FALSE
	LESS? P,P-LEN \FALSE
	CALL2 GETWORD?,P >STACK
	EQUAL? STACK,W?TO \FALSE
	ADD P,1 >STACK
	CALL2 GETWORD?,STACK >W
	CALL CHKWORD?,W,PS?VERB >STACK
	ZERO? STACK \?L6
	CALL CHKWORD?,W,PS?DIRECTION >STACK
	ZERO? STACK /FALSE
	.DEBUG-LINE 2,1169,1
?L6:	ICALL REPLACE-HELD-WORD,P,W?$PERIOD
	.DEBUG-LINE 2,1170,1
	ICALL REPLACE-HELD-WORD,1,W?$002cTELL
	.DEBUG-LINE 2,1172,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"NUMBER-F"
	.FUNCT NUMBER-F
	.DEBUG-LINE 2,1190,1
	EQUAL? PRSA,V?EXAMINE \?L1
	.DEBUG-LINE 2,1191,1
	PRINTN P-NUMBER
	PRINTI " is "
	.DEBUG-LINE 2,1192,1
	ZERO? P-NUMBER \?L3
	.DEBUG-LINE 2,1193,1
	PRINTI "zilch"
	JUMP ?L25
	.DEBUG-LINE 2,1194,1
?L3:	EQUAL? P-NUMBER,1 \?L5
	.DEBUG-LINE 2,1195,1
	PRINTI "the loneliest number that you'll ever do"
	JUMP ?L25
	.DEBUG-LINE 2,1196,1
?L5:	EQUAL? P-NUMBER,2 \?L6
	.DEBUG-LINE 2,1197,1
	PRINTI "the loneliest number since the number 1"
	JUMP ?L25
	.DEBUG-LINE 2,1198,1
?L6:	EQUAL? P-NUMBER,3 \?L7
	.DEBUG-LINE 2,1199,1
	PRINTI "a magic number"
	JUMP ?L25
	.DEBUG-LINE 2,1200,1
?L7:	EQUAL? P-NUMBER,4 \?L8
	.DEBUG-LINE 2,1201,1
	PRINTI "the only number that has the same number of characters as its value when written out in English"
	JUMP ?L25
	.DEBUG-LINE 2,1202,1
?L8:	EQUAL? P-NUMBER,5 \?L9
	.DEBUG-LINE 2,1203,1
	PRINTI "the only number that's part of more than one pair of twin primes"
	JUMP ?L25
	.DEBUG-LINE 2,1204,1
?L9:	EQUAL? P-NUMBER,6 \?L10
	.DEBUG-LINE 2,1205,1
	PRINTI "the smallest perfect number"
	JUMP ?L25
	.DEBUG-LINE 2,1206,1
?L10:	EQUAL? P-NUMBER,7 \?L11
	.DEBUG-LINE 2,1207,1
	PRINTI "a 1995 film directed by David Fincher"
	JUMP ?L25
	.DEBUG-LINE 2,1208,1
?L11:	EQUAL? P-NUMBER,8 \?L12
	.DEBUG-LINE 2,1209,1
	PRINTI "the first number that's neither prime nor semiprime"
	JUMP ?L25
	.DEBUG-LINE 2,1210,1
?L12:	EQUAL? P-NUMBER,9 \?L13
	.DEBUG-LINE 2,1211,1
	PRINTI "a 2009 animated film written and directed by Shane Acker"
	JUMP ?L25
	.DEBUG-LINE 2,1212,1
?L13:	EQUAL? P-NUMBER,10 \?L14
	.DEBUG-LINE 2,1213,1
	PRINTI "a 1979 film written, produced, and directed by Blake Edwards"
	JUMP ?L25
	.DEBUG-LINE 2,1214,1
?L14:	EQUAL? P-NUMBER,42 \?L15
	.DEBUG-LINE 2,1215,1
	PRINTI "the Answer to the Ultimate Question of Life, The Universe, and Everything"
	JUMP ?L25
	.DEBUG-LINE 2,1216,1
?L15:	EQUAL? P-NUMBER,1729 \?L16
	.DEBUG-LINE 2,1217,1
	PRINTI "a very interesting number; it is the smallest number expressible as the sum of two cubes in two different ways"
	JUMP ?L25
	.DEBUG-LINE 2,1219,1
?L16:	EQUAL? P-NUMBER,12345 \?L17
	.DEBUG-LINE 2,1220,1
	PRINTI "the combination on my luggage"
	JUMP ?L25
	.DEBUG-LINE 2,1221,1
?L17:	EQUAL? P-NUMBER,-32768,32767 \?L18
	.DEBUG-LINE 2,1222,1
	PRINTI "the "
	.DEBUG-LINE 2,1223,1
	LESS? P-NUMBER,0 \?L19
	.DEBUG-LINE 2,1223,1
	PRINTI "min"
	JUMP ?L21
	.DEBUG-LINE 2,1224,1
?L19:	PRINTI "max"
	.DEBUG-LINE 2,1225,1
?L21:	PRINTI "imum 16-bit signed integer"
	JUMP ?L25
	.DEBUG-LINE 2,1227,1
?L18:	PRINTI "the number between "
	.DEBUG-LINE 2,1228,1
	GRTR? P-NUMBER,0 \?L23
	.DEBUG-LINE 2,1229,1
	SUB P-NUMBER,1 >STACK
	PRINTN STACK
	PRINTI " and "
	ADD P-NUMBER,1 >STACK
	PRINTN STACK
	JUMP ?L25
	.DEBUG-LINE 2,1231,1
?L23:	ADD P-NUMBER,1 >STACK
	PRINTN STACK
	PRINTI " and "
	SUB P-NUMBER,1 >STACK
	PRINTN STACK
	.DEBUG-LINE 2,1232,1
?L25:	PRINTR ", but that's not important right now."
	.DEBUG-LINE 2,1233,1
?L1:	EQUAL? P-V-WORD,W?TAKE \FALSE
	EQUAL? P-NUMBER,5,10 \FALSE
	.DEBUG-LINE 2,1234,1
	CALL2 PERFORM,V?WAIT >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PARSE-NUMBER?","WN","I","MAX","V","C","NEG"
	.FUNCT PARSE-NUMBER?,WN,I,MAX,V,C,NEG
	.DEBUG-LINE 2,1250,1
	MUL WN,4 >STACK
	INC 'STACK
	GETB LEXBUF,STACK >I
	.DEBUG-LINE 2,1251,1
	MUL WN,4 >STACK
	GETB LEXBUF,STACK >STACK
	ADD I,STACK >STACK
	SUB STACK,1 >MAX
	.DEBUG-LINE 2,1252,1
	ZERO? MAX /FALSE
	.DEBUG-LINE 2,1253,1
	GETB READBUF,I >C
	EQUAL? C,45 \?L4
	.DEBUG-LINE 2,1254,1
	SET 'NEG,1
	.DEBUG-LINE 2,1255,1
	IGRTR? 'I,MAX /FALSE
	.DEBUG-LINE 2,1256,1
	GETB READBUF,I >C
	.DEBUG-LINE 2,1258,1
?L4:	LESS? C,48 /FALSE
	GRTR? C,57 /FALSE
	.DEBUG-LINE 2,1260,1
	EQUAL? V,3276 \?L13
	EQUAL? C,56 \?L13
	ZERO? NEG /?L13
	EQUAL? I,MAX \?L13
	.DEBUG-LINE 2,1264,1
	SET 'V,-32768
	.DEBUG-LINE 2,1265,1
	JUMP ?L24
	.DEBUG-LINE 2,1267,1
?L13:	LESS? V,3276 /?L16
	GRTR? V,3276 /FALSE
	GRTR? C,55 /FALSE
	.DEBUG-LINE 2,1271,1
?L16:	SUB C,48 >STACK
	MUL V,10 >STACK
	ADD STACK,STACK >V
	.DEBUG-LINE 2,1273,1
	IGRTR? 'I,MAX /?L21
	.DEBUG-LINE 2,1274,1
	GETB READBUF,I >C
	.DEBUG-LINE 2,1275,1
	JUMP ?L4
	.DEBUG-LINE 2,1276,1
?L21:	ZERO? NEG /?L24
	.DEBUG-LINE 2,1276,1
	SUB 0,V >V
	.DEBUG-LINE 2,1277,1
?L24:	SET 'P-NUMBER,V
	.DEBUG-LINE 2,1278,1
	MUL I,2 >STACK
	DEC 'STACK
	PUT LEXBUF,STACK,W?$002cNUMBER
	.DEBUG-LINE 2,1279,1
	RETURN NUMBER
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"STARTS-NOUN-PHRASE?","W"
	.FUNCT STARTS-NOUN-PHRASE?,W
	.DEBUG-LINE 2,1340,1
	EQUAL? W,W?A,W?AN,W?THE /TRUE
	EQUAL? W,W?ALL,W?EVERY,W?EVERYTHING /TRUE
	EQUAL? W,W?ANY,W?ONE /TRUE
	CALL CHKWORD?,W,PS?ADJECTIVE >STACK
	ZERO? STACK \TRUE
	CALL CHKWORD?,W,PS?OBJECT >STACK
	ZERO? STACK \TRUE
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PARSE-NOUN-PHRASE","WN","NP","SILENT?","SPEC","CNT","W","VAL","MODE?1","ADJ","NOUN","BUT","SPEC-WN","NW"
	.FUNCT PARSE-NOUN-PHRASE,WN,NP,SILENT?,SPEC,CNT,W,VAL,MODE?1,ADJ,NOUN,BUT,SPEC-WN,NW
	ASSIGNED? 'SILENT? /?L68
	SET 'SILENT?,0
	.DEBUG-LINE 2,1374,1
?L68:	GET NP,1 >SPEC
	.DEBUG-LINE 2,1375,1
	PUTB NP,1,0
	.DEBUG-LINE 2,1379,1
?L1:	GRTR? WN,P-LEN /?L2
	.DEBUG-LINE 2,1383,1
	CALL2 GETWORD?,WN >W
	ZERO? W \?L5
	CALL2 PARSE-NUMBER?,WN >STACK
	ZERO? STACK /?L6
	SET 'W,W?$002cNUMBER
	ZERO? W \?L5
	.DEBUG-LINE 2,1386,1
?L6:	ZERO? SILENT? \FALSE
	.DEBUG-LINE 2,1387,1
	ICALL2 STORE-OOPS,WN
	.DEBUG-LINE 2,1388,1
	PRINTI "I don't know the word """
	ICALL2 PRINT-WORD,WN
	PRINTI """."
	CRLF
	.DEBUG-LINE 2,1390,1
	RFALSE
	.DEBUG-LINE 2,1392,1
?L5:	EQUAL? W,W?THEN,W?$PERIOD /?L2
	.DEBUG-LINE 2,1396,1
	ZERO? BUT \?L11
	EQUAL? W,W?BUT,W?EXCEPT \?L11
	.DEBUG-LINE 2,1398,1
	ZERO? ADJ \?L14
	ZERO? NOUN /?L12
	.DEBUG-LINE 2,1399,1
?L14:	PUT SPEC,0,ADJ
	.DEBUG-LINE 2,1400,1
	PUT SPEC,1,NOUN
	.DEBUG-LINE 2,1401,1
	SET 'NOUN,0
	SET 'ADJ,NOUN
	.DEBUG-LINE 2,1402,1
	INC 'CNT
	.DEBUG-LINE 2,1404,1
?L12:	PUTB NP,0,CNT
	.DEBUG-LINE 2,1405,1
	SET 'BUT,1
	.DEBUG-LINE 2,1406,1
	GET NP,2 >SPEC
	.DEBUG-LINE 2,1407,1
	SET 'CNT,0
	JUMP ?L60
	.DEBUG-LINE 2,1409,1
?L11:	EQUAL? W,W?ALL,W?EVERY,W?EVERYTHING /?L17
	EQUAL? W,W?ANY,W?ONE \?L16
	.DEBUG-LINE 2,1410,1
?L17:	ZERO? MODE?1 \?L20
	ZERO? ADJ \?L20
	ZERO? NOUN /?L18
	.DEBUG-LINE 2,1412,1
?L20:	ZERO? SILENT? \FALSE
	.DEBUG-LINE 2,1413,1
	PRINTI "You can't use """
	PRINTB W
	PRINTI """ there."
	CRLF
	.DEBUG-LINE 2,1415,1
	RFALSE
	.DEBUG-LINE 2,1417,1
?L18:	EQUAL? W,W?ALL,W?EVERY,W?EVERYTHING \?L25
	.DEBUG-LINE 2,1417,1
	SET 'MODE?1,MCM-ALL
	JUMP ?L27
	.DEBUG-LINE 2,1418,1
?L25:	SET 'MODE?1,MCM-ANY
	.DEBUG-LINE 2,1420,1
?L27:	SET 'SPEC-WN,WN
	JUMP ?L60
	.DEBUG-LINE 2,1424,1
?L16:	SET 'VAL,W
	CALL CHKWORD?,VAL,PS?ADJECTIVE >STACK
	ZERO? STACK /?L28
	.DEBUG-LINE 2,1427,1
	ZERO? NOUN \?L2
	.DEBUG-LINE 2,1430,1
	SET 'SPEC-WN,WN
	.DEBUG-LINE 2,1434,1
	CALL CHKWORD?,W,PS?OBJECT >STACK
	ZERO? STACK /?L32
	EQUAL? WN,P-LEN /?L34
	ADD WN,1 >STACK
	CALL2 GETWORD?,STACK >NW
	.DEBUG-LINE 2,1439,1
	CALL CHKWORD?,NW,PS?ADJECTIVE >STACK
	ZERO? STACK \?L32
	CALL CHKWORD?,NW,PS?OBJECT >STACK
	ZERO? STACK \?L32
	.DEBUG-LINE 2,1442,1
?L34:	SET 'NOUN,W
	JUMP ?L60
	.DEBUG-LINE 2,1443,1
?L32:	EQUAL? CNT,P-MAX-OBJSPECS \?L39
	.DEBUG-LINE 2,1445,1
	ZERO? SILENT? \FALSE
	.DEBUG-LINE 2,1446,1
	PRINTI "That phrase mentions too many objects."
	CRLF
	.DEBUG-LINE 2,1448,1
	RFALSE
	.DEBUG-LINE 2,1449,1
?L39:	ZERO? ADJ \?L60
	.DEBUG-LINE 2,1450,1
	SET 'ADJ,VAL
	JUMP ?L60
	.DEBUG-LINE 2,1454,1
?L28:	CALL CHKWORD?,W,PS?OBJECT >STACK
	ZERO? STACK /?L45
	.DEBUG-LINE 2,1456,1
	ZERO? NOUN \?L2
	.DEBUG-LINE 2,1459,1
	EQUAL? CNT,P-MAX-OBJSPECS \?L48
	.DEBUG-LINE 2,1461,1
	ZERO? SILENT? \FALSE
	.DEBUG-LINE 2,1462,1
	PRINTI "That phrase mentions too many objects."
	CRLF
	.DEBUG-LINE 2,1464,1
	RFALSE
	.DEBUG-LINE 2,1466,1
?L48:	SET 'NOUN,W
	.DEBUG-LINE 2,1467,1
	SET 'SPEC-WN,WN
	JUMP ?L60
	.DEBUG-LINE 2,1469,1
?L45:	EQUAL? W,W?AND,W?$COMMA \?L53
	.DEBUG-LINE 2,1471,1
	ZERO? ADJ \?L56
	ZERO? NOUN /?L60
	.DEBUG-LINE 2,1472,1
?L56:	PUT SPEC,0,ADJ
	.DEBUG-LINE 2,1473,1
	PUT SPEC,1,NOUN
	.DEBUG-LINE 2,1474,1
	SET 'NOUN,0
	SET 'ADJ,NOUN
	.DEBUG-LINE 2,1475,1
	ADD SPEC,P-OBJSPEC-SIZE >SPEC
	.DEBUG-LINE 2,1476,1
	INC 'CNT
	JUMP ?L60
	.DEBUG-LINE 2,1479,1
?L53:	EQUAL? W,W?OF \?L58
	LESS? WN,P-LEN \?L58
	ADD WN,1 >STACK
	CALL2 GETWORD?,STACK >STACK
	CALL2 STARTS-NOUN-PHRASE?,STACK >STACK
	ZERO? STACK /?L58
	.DEBUG-LINE 2,1487,1
	SET 'NOUN,0
	JUMP ?L60
	.DEBUG-LINE 2,1489,1
?L58:	CALL CHKWORD?,W,PS?BUZZ-WORD >STACK
	ZERO? STACK /?L2
	.DEBUG-LINE 2,1491,1
	SET 'SPEC-WN,WN
	.DEBUG-LINE 2,1496,1
?L60:	INC 'WN
	JUMP ?L1
	.DEBUG-LINE 2,1498,1
?L2:	ZERO? ADJ \?L63
	ZERO? NOUN /?L61
	.DEBUG-LINE 2,1499,1
?L63:	PUT SPEC,0,ADJ
	.DEBUG-LINE 2,1500,1
	PUT SPEC,1,NOUN
	.DEBUG-LINE 2,1501,1
	INC 'CNT
	.DEBUG-LINE 2,1504,1
?L61:	ZERO? BUT /?L65
	.DEBUG-LINE 2,1504,1
	PUTB NP,1,CNT
	JUMP ?L67
	.DEBUG-LINE 2,1504,1
?L65:	PUTB NP,0,CNT
	.DEBUG-LINE 2,1505,1
?L67:	PUTB NP,6,MODE?1
	.DEBUG-LINE 2,1508,1
	ADD SPEC-WN,1 >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"MATCH-SYNTAX","PTR","CNT","S","BEST","BEST-SCORE"
	.FUNCT MATCH-SYNTAX,PTR,CNT,S,BEST,BEST-SCORE
	.DEBUG-LINE 2,1543,1
	SUB 255,P-V >STACK
	GET VERBS,STACK >PTR
	.DEBUG-LINE 2,1544,1
	GETB PTR,0 >CNT
	.DEBUG-LINE 2,1545,1
	INC 'PTR
	.DEBUG-LINE 2,1548,1
	SET 'BEST-SCORE,-999
	.DEBUG-LINE 2,1550,1
?L1:	DLESS? 'CNT,0 /?L2
	.DEBUG-LINE 2,1553,1
	CALL2 MATCH-SYNTAX-LINE?,PTR >S
	.DEBUG-LINE 2,1554,1
	ZERO? S /?L8
	GRTR? S,BEST-SCORE \?L8
	.DEBUG-LINE 2,1555,1
	SET 'BEST-SCORE,S
	.DEBUG-LINE 2,1556,1
	SET 'BEST,PTR
	.DEBUG-LINE 2,1557,1
	GRTR? S,0 /?L2
	.DEBUG-LINE 2,1558,1
?L8:	ADD PTR,SYN-REC-SIZE >PTR
	JUMP ?L1
	.DEBUG-LINE 2,1560,1
?L2:	ZERO? BEST /?L12
	.DEBUG-LINE 2,1561,1
	GETB BEST,SYN-ACTION >PRSA
	.DEBUG-LINE 2,1562,1
	SET 'P-SYNTAX,BEST
	.DEBUG-LINE 2,1565,1
	RTRUE
	.DEBUG-LINE 2,1567,1
?L12:	PRINTI "I don't understand that sentence."
	CRLF
	.DEBUG-LINE 2,1568,1
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"MATCH-SYNTAX-LINE?","PTR","NOBJ","PREP1","PREP2","R"
	.FUNCT MATCH-SYNTAX-LINE?,PTR,NOBJ,PREP1,PREP2,R
	.DEBUG-LINE 2,1597,1
	GETB PTR,SYN-NOBJ >NOBJ
	.DEBUG-LINE 2,1598,1
	GETB PTR,SYN-PREP1 >PREP1
	.DEBUG-LINE 2,1599,1
	GETB PTR,SYN-PREP2 >PREP2
	.DEBUG-LINE 2,1602,1
	EQUAL? P-NOBJ,NOBJ \?L1
	EQUAL? P-P1,PREP1 \?L1
	EQUAL? P-P2,PREP2 /TRUE
	.DEBUG-LINE 2,1607,1
?L1:	LESS? P-NOBJ,NOBJ \FALSE
	.DEBUG-LINE 2,1613,1
	EQUAL? P-P1,PREP1,0 \FALSE
	EQUAL? P-P2,PREP2,0 \FALSE
	.DEBUG-LINE 2,1620,1
	EQUAL? P-NOBJ,1 \?L6
	ZERO? PREP1 /?L6
	ZERO? P-P1 /FALSE
	.DEBUG-LINE 2,1626,1
?L6:	LESS? NOBJ,1 /?L9
	ZERO? P-NOBJ \?L9
	ZERO? P-P1 \?L9
	ZERO? PREP1 /?L9
	GETB PTR,SYN-FIND1 >STACK
	EQUAL? STACK,KLUDGEBIT /FALSE
?L9:	EQUAL? NOBJ,2 \?L7
	ZERO? P-P2 \?L7
	ZERO? PREP2 /?L7
	GETB PTR,SYN-FIND2 >STACK
	EQUAL? STACK,KLUDGEBIT /FALSE
	.DEBUG-LINE 2,1640,1
?L7:	SUB P-NOBJ,NOBJ >R
	.DEBUG-LINE 2,1643,1
	ZERO? P-P1 \?L11
	ZERO? PREP1 /?L11
	.DEBUG-LINE 2,1645,1
	SUB R,2 >R
	.DEBUG-LINE 2,1649,1
?L11:	EQUAL? NOBJ,2 \?L14
	ZERO? P-P2 \?L14
	ZERO? PREP2 \?L14
	.DEBUG-LINE 2,1651,1
	DEC 'R
	.DEBUG-LINE 2,1653,1
?L14:	RETURN R
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"INVENTORY-SCOPE-STAGE","INIT"
	.FUNCT INVENTORY-SCOPE-STAGE,INIT
	.DEBUG-LINE 6,77,1
	ZERO? INIT /?L1
	.DEBUG-LINE 6,37,1
	FIRST? WINNER >STACK /?L3
?L3:	PUT SCOPE-STATE,0,STACK
	.DEBUG-LINE 6,38,1
	PUT SCOPE-STATE,1,WINNER
	RTRUE
	.DEBUG-LINE 6,39,1
?L1:	CALL1 SCOPE-CRAWL >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"LOCATION-SCOPE-STAGE","INIT"
	.FUNCT LOCATION-SCOPE-STAGE,INIT
	.DEBUG-LINE 6,77,1
	ZERO? INIT /?L1
	.DEBUG-LINE 6,42,1
	FIRST? HERE >STACK /?L3
?L3:	PUT SCOPE-STATE,0,STACK
	.DEBUG-LINE 6,43,1
	PUT SCOPE-STATE,1,HERE
	RTRUE
	.DEBUG-LINE 6,44,1
?L1:	CALL1 SCOPE-CRAWL >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"LOCAL-GLOBALS-SCOPE-STAGE","INIT","N"
	.FUNCT LOCAL-GLOBALS-SCOPE-STAGE,INIT,N
	.DEBUG-LINE 6,77,1
	ZERO? INIT /?L1
	.DEBUG-LINE 6,49,1
	FIRST? LOCAL-GLOBALS >STACK /?L3
?L3:	PUT SCOPE-STATE,0,STACK
	.DEBUG-LINE 6,50,1
	PUT SCOPE-STATE,1,LOCAL-GLOBALS
	RTRUE
	.DEBUG-LINE 6,52,1
?L1:	CALL1 SCOPE-CRAWL >N
	.DEBUG-LINE 6,53,1
	ZERO? N /FALSE
	.DEBUG-LINE 6,54,1
	CALL GLOBAL-IN?,N,HERE >STACK
	ZERO? STACK /?L1
	.DEBUG-LINE 6,54,1
	RETURN N
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GLOBALS-SCOPE-STAGE","INIT"
	.FUNCT GLOBALS-SCOPE-STAGE,INIT
	.DEBUG-LINE 6,77,1
	ZERO? INIT /?L1
	.DEBUG-LINE 6,57,1
	FIRST? GLOBAL-OBJECTS >STACK /?L3
?L3:	PUT SCOPE-STATE,0,STACK
	.DEBUG-LINE 6,58,1
	PUT SCOPE-STATE,1,GLOBAL-OBJECTS
	RTRUE
	.DEBUG-LINE 6,59,1
?L1:	CALL1 SCOPE-CRAWL >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GENERIC-SCOPE-STAGE","INIT"
	.FUNCT GENERIC-SCOPE-STAGE,INIT
	.DEBUG-LINE 6,77,1
	ZERO? INIT /?L1
	.DEBUG-LINE 6,62,1
	FIRST? GENERIC-OBJECTS >STACK /?L3
?L3:	PUT SCOPE-STATE,0,STACK
	.DEBUG-LINE 6,63,1
	PUT SCOPE-STATE,1,GENERIC-OBJECTS
	RTRUE
	.DEBUG-LINE 6,64,1
?L1:	CALL1 SCOPE-CRAWL >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"MAP-SCOPE-INIT-STAGES-FROM-BITS","BITS","CNT"
	.FUNCT MAP-SCOPE-INIT-STAGES-FROM-BITS,BITS,CNT
	SET 'CNT,0
	.DEBUG-LINE 6,152,1
	EQUAL? -1,BITS \?L1
	.DEBUG-LINE 6,153,1
	PUT SCOPE-CURRENT-STAGES,0,SCOPE-CURRENT-STAGES-SIZE
	.DEBUG-LINE 6,157,1
	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,INVENTORY-SCOPE-STAGE
	.DEBUG-LINE 6,157,1
	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,LOCATION-SCOPE-STAGE
	.DEBUG-LINE 6,157,1
	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,LOCAL-GLOBALS-SCOPE-STAGE
	.DEBUG-LINE 6,157,1
	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,GLOBALS-SCOPE-STAGE
	.DEBUG-LINE 6,157,1
	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,GENERIC-SCOPE-STAGE
	.DEBUG-LINE 6,161,1
	RTRUE
	.DEBUG-LINE 6,163,1
?L1:	BTST BITS,SF-HELD /?L8
	BTST BITS,SF-CARRIED \?L6
	.DEBUG-LINE 6,165,1
?L8:	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,INVENTORY-SCOPE-STAGE
	.DEBUG-LINE 6,166,1
?L6:	BTST BITS,SF-ON-GROUND /?L12
	BTST BITS,SF-IN-ROOM \?L10
	.DEBUG-LINE 6,168,1
?L12:	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,LOCATION-SCOPE-STAGE
	.DEBUG-LINE 6,169,1
	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,GLOBALS-SCOPE-STAGE
	.DEBUG-LINE 6,170,1
	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,LOCAL-GLOBALS-SCOPE-STAGE
	.DEBUG-LINE 6,171,1
?L10:	PUT SCOPE-CURRENT-STAGES,0,CNT
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"MAP-SCOPE-START","V","LEN","NEED-LIGHT"
	.FUNCT MAP-SCOPE-START,V,LEN,NEED-LIGHT
	SET 'NEED-LIGHT,0
	GET SCOPE-CURRENT-STAGES,0 >LEN
	.DEBUG-LINE 6,174,1
	ZERO? HERE-LIT \?L1
	BTST MAP-SCOPE-OPTIONS,MSO-NEED-LIGHT \?L1
	.DEBUG-LINE 6,175,1
	SET 'NEED-LIGHT,1
	.DEBUG-LINE 6,176,1
?L1:	ZERO? NEED-LIGHT /?L4
	.DEBUG-LINE 6,176,1
	SET 'MAP-SCOPE-STATUS,MS-NO-LIGHT
	JUMP ?L6
	.DEBUG-LINE 6,177,1
?L4:	SET 'MAP-SCOPE-STATUS,MS-FINISHED
	.DEBUG-LINE 6,178,1
?L6:	SET 'SCOPE-CURRENT-STAGE,0
	.DEBUG-LINE 6,180,1
?L7:	IGRTR? 'SCOPE-CURRENT-STAGE,LEN /FALSE
	.DEBUG-LINE 6,183,1
	ZERO? NEED-LIGHT /?L11
	CALL2 DARKNESS-F,M-SCOPE? >STACK
	ZERO? STACK /?L7
	.DEBUG-LINE 6,185,1
?L11:	GET SCOPE-CURRENT-STAGES,SCOPE-CURRENT-STAGE >STACK
	CALL2 STACK,1 >V
	ZERO? V /?L7
	.DEBUG-LINE 6,186,1
	EQUAL? V,-1 \TRUE
	.DEBUG-LINE 6,188,1
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"MAP-SCOPE-NEXT","S","N","LEN","INIT","NEED-LIGHT"
	.FUNCT MAP-SCOPE-NEXT,S,N,LEN,INIT,NEED-LIGHT
	SET 'INIT,0
	SET 'NEED-LIGHT,0
	GET SCOPE-CURRENT-STAGES,0 >LEN
	.DEBUG-LINE 6,192,1
	ZERO? HERE-LIT \?L1
	BTST MAP-SCOPE-OPTIONS,MSO-NEED-LIGHT \?L1
	.DEBUG-LINE 6,193,1
	SET 'NEED-LIGHT,1
	.DEBUG-LINE 6,195,1
?L1:	GRTR? SCOPE-CURRENT-STAGE,LEN /FALSE
	.DEBUG-LINE 6,198,1
	ZERO? NEED-LIGHT /?L9
	CALL2 DARKNESS-F,M-SCOPE? >STACK
	ZERO? STACK /?L8
?L9:	GET SCOPE-CURRENT-STAGES,SCOPE-CURRENT-STAGE >S
	ZERO? S /?L8
	ZERO? INIT /?L10
	CALL2 S,1 >STACK
	ZERO? STACK /?L8
?L10:	CALL1 S >N
	ZERO? N /?L8
	.DEBUG-LINE 6,202,1
	EQUAL? N,-1 /FALSE
	.DEBUG-LINE 6,205,1
	RETURN N
	.DEBUG-LINE 6,207,1
?L8:	INC 'SCOPE-CURRENT-STAGE
	.DEBUG-LINE 6,208,1
	SET 'INIT,1
	JUMP ?L1
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"SCOPE-CRAWL","O","N","C","L"
	.FUNCT SCOPE-CRAWL,O,N,C,L
	.DEBUG-LINE 6,211,1
	GET SCOPE-STATE,0 >O
	.DEBUG-LINE 6,212,1
	ZERO? O /FALSE
	.DEBUG-LINE 6,213,1
	GET SCOPE-STATE,1 >C
	.DEBUG-LINE 6,214,1
	FIRST? O >N \?L3
	CALL2 SEE-INSIDE?,O >STACK
	ZERO? STACK \?L8
	.DEBUG-LINE 6,217,1
?L3:	NEXT? O >N /?L8
	.DEBUG-LINE 6,220,1
	LOC O >L
	.DEBUG-LINE 6,222,1
?L7:	EQUAL? L,C,0 \?L9
	.DEBUG-LINE 6,224,1
	SET 'N,0
	.DEBUG-LINE 6,225,1
	JUMP ?L8
	.DEBUG-LINE 6,226,1
?L9:	NEXT? L >N /?L8
	.DEBUG-LINE 6,230,1
	LOC L >L
	JUMP ?L7
	.DEBUG-LINE 6,231,1
?L8:	PUT SCOPE-STATE,0,N
	.DEBUG-LINE 6,232,1
	RETURN O
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"FIND-OBJECTS","KEEP","F","O","SNOBJ"
	.FUNCT FIND-OBJECTS,KEEP,F,O,SNOBJ
	GETB P-SYNTAX,SYN-NOBJ >SNOBJ
	.DEBUG-LINE 2,1687,1
	GETB P-SYNTAX,SYN-OPTS1 >O
	.DEBUG-LINE 2,1688,1
	LESS? SNOBJ,1 \?L1
	.DEBUG-LINE 2,1689,1
	SET 'PRSO,0
	JUMP ?L19
	.DEBUG-LINE 2,1690,1
?L1:	LESS? KEEP,1 \?L19
	.DEBUG-LINE 2,1691,1
	GETB P-SYNTAX,SYN-FIND1 >F
	.DEBUG-LINE 2,1692,1
	LESS? P-NOBJ,1 \?L4
	.DEBUG-LINE 2,1694,1
	GETB P-SYNTAX,SYN-PREP1 >STACK
	CALL GWIM,F,O,STACK >PRSO
	.DEBUG-LINE 2,1696,1
	ZERO? PRSO \?L6
	.DEBUG-LINE 2,1697,1
	ICALL1 WHAT-DO-YOU-WANT
	.DEBUG-LINE 2,1698,1
	SET 'P-O-REASON,49152
	.DEBUG-LINE 2,1698,1
	SET 'P-V-WORDN,0
	.DEBUG-LINE 2,1698,1
	SET 'P-O-CONT,P-CONT
	.DEBUG-LINE 2,1700,1
	RFALSE
	.DEBUG-LINE 2,1702,1
?L6:	SET 'P-NOBJ,1
	.DEBUG-LINE 2,1703,1
	PUT P-PRSOS,1,PRSO
	.DEBUG-LINE 2,1704,1
	PUTB P-PRSOS,0,1
	JUMP ?L16
	.DEBUG-LINE 2,1707,1
?L4:	GETB P-NP-DOBJ,0 >STACK
	EQUAL? STACK,1 /?L15
	SET 'PRSO,0
	JUMP ?L14
?L15:	GET P-NP-DOBJ,1 >STACK
	GET STACK,1 >STACK
	CALL EXPAND-PRONOUN,STACK,P-PRSOS >PRSO
?L14:	ZERO? PRSO \?L12
	MUL F,256 >STACK
	BOR STACK,O >STACK
	CALL MATCH-NOUN-PHRASE,P-NP-DOBJ,P-PRSOS,STACK >PRSO
	.DEBUG-LINE 2,1711,1
?L12:	EQUAL? PRSO,EXPAND-PRONOUN-FAILED /FALSE
	.DEBUG-LINE 2,1714,1
?L16:	ZERO? PRSO \?L53
	.DEBUG-LINE 2,1716,1
	RFALSE
	.DEBUG-LINE 2,1717,1
?L19:	ZERO? PRSO /?L23
?L53:	ZERO? PRSO-DIR \?L23
	CALL MANY-CHECK,PRSO,O,0 >STACK
	ZERO? STACK /FALSE
	CALL HAVE-TAKE-CHECK-TBL,P-PRSOS,O >STACK
	ZERO? STACK /FALSE
	.DEBUG-LINE 2,1725,1
?L23:	GETB P-SYNTAX,SYN-OPTS2 >O
	.DEBUG-LINE 2,1726,1
	LESS? SNOBJ,2 \?L27
	.DEBUG-LINE 2,1727,1
	SET 'PRSI,0
	JUMP ?L45
	.DEBUG-LINE 2,1728,1
?L27:	LESS? KEEP,2 \?L45
	.DEBUG-LINE 2,1729,1
	GETB P-SYNTAX,SYN-FIND2 >F
	.DEBUG-LINE 2,1730,1
	LESS? P-NOBJ,2 \?L30
	.DEBUG-LINE 2,1732,1
	GETB P-SYNTAX,SYN-PREP2 >STACK
	CALL GWIM,F,O,STACK >PRSI
	.DEBUG-LINE 2,1734,1
	ZERO? PRSI \?L32
	.DEBUG-LINE 2,1735,1
	ICALL1 WHAT-DO-YOU-WANT
	.DEBUG-LINE 2,1736,1
	SET 'P-O-REASON,57344
	.DEBUG-LINE 2,1736,1
	SET 'P-V-WORDN,0
	.DEBUG-LINE 2,1736,1
	SET 'P-O-CONT,P-CONT
	.DEBUG-LINE 2,1738,1
	RFALSE
	.DEBUG-LINE 2,1740,1
?L32:	SET 'P-NOBJ,2
	.DEBUG-LINE 2,1741,1
	PUT P-PRSIS,1,PRSI
	.DEBUG-LINE 2,1742,1
	PUTB P-PRSIS,0,1
	JUMP ?L42
	.DEBUG-LINE 2,1745,1
?L30:	GETB P-NP-IOBJ,0 >STACK
	EQUAL? STACK,1 /?L41
	SET 'PRSI,0
	JUMP ?L40
?L41:	GET P-NP-IOBJ,1 >STACK
	GET STACK,1 >STACK
	CALL EXPAND-PRONOUN,STACK,P-PRSIS >PRSI
?L40:	ZERO? PRSI \?L38
	MUL F,256 >STACK
	BOR STACK,O >STACK
	CALL MATCH-NOUN-PHRASE,P-NP-IOBJ,P-PRSIS,STACK >PRSI
	.DEBUG-LINE 2,1749,1
?L38:	EQUAL? PRSI,EXPAND-PRONOUN-FAILED /FALSE
	.DEBUG-LINE 2,1752,1
?L42:	ZERO? PRSI \?L54
	.DEBUG-LINE 2,1754,1
	RFALSE
	.DEBUG-LINE 2,1755,1
?L45:	ZERO? PRSI /TRUE
?L54:	CALL MANY-CHECK,PRSI,O,1 >STACK
	ZERO? STACK /FALSE
	CALL HAVE-TAKE-CHECK-TBL,P-PRSIS,O >STACK
	ZERO? STACK \TRUE
	.DEBUG-LINE 2,1759,1
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"WHAT-DO-YOU-WANT","SN","SP1","SP2","F"
	.FUNCT WHAT-DO-YOU-WANT,SN,SP1,SP2,F
	.DEBUG-LINE 2,1765,1
	GETB P-SYNTAX,SYN-NOBJ >SN
	.DEBUG-LINE 2,1766,1
	GETB P-SYNTAX,SYN-PREP1 >SP1
	.DEBUG-LINE 2,1767,1
	GETB P-SYNTAX,SYN-PREP2 >SP2
	.DEBUG-LINE 2,1769,1
	ZERO? PRSO /?L1
	ZERO? PRSO-DIR \?L1
	.DEBUG-LINE 2,1770,1
	GETB P-SYNTAX,SYN-FIND2 >F
	JUMP ?L3
	.DEBUG-LINE 2,1771,1
?L1:	GETB P-SYNTAX,SYN-FIND1 >F
	.DEBUG-LINE 2,1772,1
?L3:	EQUAL? PRSA,V?WALK \?L4
	ZERO? PRSO \?L4
	.DEBUG-LINE 2,1772,1
	PRINTI "Which way"
	JUMP ?L7
	.DEBUG-LINE 2,1773,1
?L4:	EQUAL? F,PERSONBIT \?L6
	.DEBUG-LINE 2,1773,1
	PRINTI "Whom"
	JUMP ?L7
	.DEBUG-LINE 2,1774,1
?L6:	PRINTI "What"
	.DEBUG-LINE 2,1775,1
?L7:	PRINTI " do you want"
	.DEBUG-LINE 2,1776,1
	EQUAL? WINNER,PLAYER /?L8
	.DEBUG-LINE 2,1776,1
	PRINTI " "
	ICALL2 PRINT-DEF,WINNER
	.DEBUG-LINE 2,1777,1
?L8:	PRINTI " to "
	.DEBUG-LINE 2,1778,1
	ICALL1 PRINT-VERB
	.DEBUG-LINE 2,1779,1
	ZERO? SP1 /?L11
	.DEBUG-LINE 2,1780,1
	PRINTI " "
	CALL2 GET-PREP-WORD,SP1 >STACK
	PRINTB STACK
	.DEBUG-LINE 2,1781,1
?L11:	ZERO? PRSO /?L16
	ZERO? PRSO-DIR \?L16
	.DEBUG-LINE 2,1782,1
	PRINTI " "
	ICALL2 PRINT-DEF,PRSO
	.DEBUG-LINE 2,1783,1
	ZERO? SP2 /?L16
	.DEBUG-LINE 2,1784,1
	PRINTI " "
	CALL2 GET-PREP-WORD,SP2 >STACK
	PRINTB STACK
	.DEBUG-LINE 2,1785,1
?L16:	PRINTR "?"
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRINT-VERB"
	.FUNCT PRINT-VERB
	.DEBUG-LINE 2,1788,1
	ZERO? P-V-WORDN /?L1
	.DEBUG-LINE 2,1788,1
	CALL2 PRINT-WORD,P-V-WORDN >STACK
	RSTACK
	.DEBUG-LINE 2,1789,1
?L1:	PRINTB P-V-WORD
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"MANY-CHECK","OBJ","OPTS","INDIRECT?"
	.FUNCT MANY-CHECK,OBJ,OPTS,INDIRECT?
	.DEBUG-LINE 2,1806,1
	EQUAL? OBJ,MANY-OBJECTS \TRUE
	BTST OPTS,SF-MANY /TRUE
	.DEBUG-LINE 2,1808,1
	EQUAL? PRSA,V?TELL \?L3
	.DEBUG-LINE 2,1809,1
	PRINTI "You can only address one person at a time."
	JUMP ?L5
	.DEBUG-LINE 2,1811,1
?L3:	PRINTI "You can't use multiple "
	.DEBUG-LINE 2,1812,1
	ZERO? INDIRECT? /?L6
	.DEBUG-LINE 2,1812,1
	PRINTI "in"
	.DEBUG-LINE 2,1813,1
?L6:	PRINTI "direct objects with """
	.DEBUG-LINE 2,1814,1
	ICALL1 PRINT-VERB
	.DEBUG-LINE 2,1815,1
	PRINTI """."
	.DEBUG-LINE 2,1816,1
?L5:	CRLF
	.DEBUG-LINE 2,1817,1
	SET 'P-CONT,0
	.DEBUG-LINE 2,1818,1
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"HAVE-TAKE-CHECK-TBL","TBL","OPTS","MAX","O","N","ORM","I"
	.FUNCT HAVE-TAKE-CHECK-TBL,TBL,OPTS,MAX,O,N,ORM,I
	.DEBUG-LINE 2,1834,1
	GETB TBL,0 >MAX
	.DEBUG-LINE 2,1836,1
	BTST OPTS,SF-TAKE \?L5
	.DEBUG-LINE 2,1837,1
	SET 'I,1
	.DEBUG-LINE 2,1838,1
?L3:	GET TBL,I >STACK
	CALL2 SHOULD-IMPLICIT-TAKE?,STACK >STACK
	ZERO? STACK /?L6
	.DEBUG-LINE 2,1839,1
	PRINTI "[taking "
	.DEBUG-LINE 2,1840,1
	CALL LIST-OBJECTS,TBL,SHOULD-IMPLICIT-TAKE?,24 >N
	.DEBUG-LINE 2,1841,1
	PRINTI "]"
	CRLF
	.DEBUG-LINE 2,1843,1
?L8:	GET TBL,I >O
	CALL2 SHOULD-IMPLICIT-TAKE?,O >STACK
	ZERO? STACK /?L12
	.DEBUG-LINE 2,1844,1
	CALL TRY-TAKE,O,1 >STACK
	ZERO? STACK \?L12
	.DEBUG-LINE 2,1845,1
	GRTR? N,1 \?L14
	.DEBUG-LINE 2,1846,1
	SET 'ORM,REPORT-MODE
	.DEBUG-LINE 2,1847,1
	SET 'REPORT-MODE,SHORT-REPORT
	.DEBUG-LINE 2,1848,1
	PRINTD O
	PRINTI ": "
	.DEBUG-LINE 2,1849,1
	ICALL2 TRY-TAKE,O
	.DEBUG-LINE 2,1850,1
	SET 'REPORT-MODE,ORM
	RFALSE
	.DEBUG-LINE 2,1852,1
?L14:	ICALL2 TRY-TAKE,O
	.DEBUG-LINE 2,1853,1
	RFALSE
	.DEBUG-LINE 2,1854,1
?L12:	IGRTR? 'I,MAX \?L8
	.DEBUG-LINE 2,1854,1
	JUMP ?L5
?L6:	IGRTR? 'I,MAX \?L3
	.DEBUG-LINE 2,1857,1
?L5:	BTST OPTS,SF-HAVE \TRUE
	.DEBUG-LINE 2,1858,1
	SET 'I,1
	.DEBUG-LINE 2,1859,1
?L26:	GET TBL,I >STACK
	CALL2 FAILS-HAVE-CHECK?,STACK >STACK
	ZERO? STACK /?L29
	.DEBUG-LINE 2,1860,1
	PRINTI "You aren't holding "
	.DEBUG-LINE 2,1861,1
	ICALL LIST-OBJECTS,TBL,FAILS-HAVE-CHECK?,56
	.DEBUG-LINE 2,1862,1
	PRINTI "."
	CRLF
	.DEBUG-LINE 2,1863,1
	SET 'P-CONT,0
	.DEBUG-LINE 2,1864,1
	RFALSE
?L29:	IGRTR? 'I,MAX \?L26
	.DEBUG-LINE 2,1865,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"HAVE-TAKE-CHECK","OBJ","OPTS"
	.FUNCT HAVE-TAKE-CHECK,OBJ,OPTS
	.DEBUG-LINE 2,1880,1
	BTST OPTS,SF-TAKE \?L5
	.DEBUG-LINE 2,1881,1
	CALL2 SHOULD-IMPLICIT-TAKE?,OBJ >STACK
	ZERO? STACK /?L5
	.DEBUG-LINE 2,1882,1
	PRINTI "[taking "
	ICALL2 PRINT-DEF,OBJ
	PRINTI "]"
	CRLF
	.DEBUG-LINE 2,1883,1
	CALL TRY-TAKE,OBJ,1 >STACK
	ZERO? STACK \?L5
	.DEBUG-LINE 2,1884,1
	ICALL2 TRY-TAKE,OBJ
	.DEBUG-LINE 2,1885,1
	RFALSE
	.DEBUG-LINE 2,1887,1
?L5:	BTST OPTS,SF-HAVE \TRUE
	.DEBUG-LINE 2,1888,1
	CALL2 FAILS-HAVE-CHECK?,OBJ >STACK
	ZERO? STACK /TRUE
	.DEBUG-LINE 2,1889,1
	PRINTI "You aren't holding "
	ICALL2 PRINT-DEF,OBJ
	PRINTI "."
	CRLF
	.DEBUG-LINE 2,1890,1
	SET 'P-CONT,0
	.DEBUG-LINE 2,1891,1
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"SHOULD-IMPLICIT-TAKE?","OBJ"
	.FUNCT SHOULD-IMPLICIT-TAKE?,OBJ
	.DEBUG-LINE 2,1897,1
	IN? OBJ,WINNER /FALSE
	FSET? OBJ,TAKEBIT \FALSE
	FSET? OBJ,TRYTAKEBIT \TRUE
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"FAILS-HAVE-CHECK?","OBJ"
	.FUNCT FAILS-HAVE-CHECK?,OBJ
	.DEBUG-LINE 2,1903,1
	CALL2 HELD?,OBJ >STACK
	ZERO? STACK /TRUE
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"STILL-VISIBLE-CHECK","TBL","CNT","I"
	.FUNCT STILL-VISIBLE-CHECK,TBL,CNT,I
	GETB TBL,0 >CNT
	.DEBUG-LINE 2,1916,1
	ZERO? CNT /TRUE
	.DEBUG-LINE 2,1918,1
	SET 'I,1
	.DEBUG-LINE 2,1920,1
?L3:	GET TBL,I >STACK
	CALL2 VISIBLE?,STACK >STACK
	ZERO? STACK \?L6
	.DEBUG-LINE 2,1921,1
	ICALL LIST-OBJECTS,TBL,NOT-VISIBLE?,90
	.DEBUG-LINE 2,1922,1
	PRINTI " no longer here."
	CRLF
	.DEBUG-LINE 2,1924,1
	SET 'P-CONT,0
	.DEBUG-LINE 2,1925,1
	RFALSE
?L6:	IGRTR? 'I,CNT \?L3
	.DEBUG-LINE 2,1927,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"NOT-VISIBLE?","O"
	.FUNCT NOT-VISIBLE?,O
	.DEBUG-LINE 2,1930,1
	CALL2 VISIBLE?,O >STACK
	ZERO? STACK /TRUE
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GWIM","BIT","OPTS","PREP","O","PW","I"
	.FUNCT GWIM,BIT,OPTS,PREP,O,PW,I
	.DEBUG-LINE 2,1946,1
	EQUAL? BIT,KLUDGEBIT \?L1
	.DEBUG-LINE 2,1948,1
	RETURN ROOMS
	.DEBUG-LINE 2,1949,1
?L1:	EQUAL? PRSA,V?WALK /FALSE
	.DEBUG-LINE 2,1955,1
	ICALL2 MAP-SCOPE-INIT-STAGES-FROM-BITS,OPTS
	.DEBUG-LINE 2,1955,1
	SET 'MAP-SCOPE-OPTIONS,MSO-NEED-LIGHT
	.DEBUG-LINE 6,142,1
	CALL1 MAP-SCOPE-START >STACK
	ZERO? STACK /?L11
	.DEBUG-LINE 2,1955,1
?L7:	CALL1 MAP-SCOPE-NEXT >I
	.DEBUG-LINE 6,146,1
	ZERO? I /?L11
	.DEBUG-LINE 2,1956,1
	EQUAL? I,WINNER /?L7
	ZERO? BIT /?L17
	FSET? I,BIT \?L7
	.DEBUG-LINE 2,1959,1
?L17:	ZERO? O \FALSE
	.DEBUG-LINE 2,1965,1
	SET 'O,I
	JUMP ?L7
	.DEBUG-LINE 2,1968,1
?L11:	ZERO? O /FALSE
	.DEBUG-LINE 2,1969,1
	PRINTI "["
	.DEBUG-LINE 2,1971,1
	CALL2 GET-PREP-WORD,PREP >PW
	ZERO? PW /?L24
	.DEBUG-LINE 2,1972,1
	PRINTB PW
	PRINTI " "
	.DEBUG-LINE 2,1973,1
?L24:	ICALL2 PRINT-DEF,O
	PRINTI "]"
	CRLF
	.DEBUG-LINE 2,1974,1
	RETURN O
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GET-PREP-WORD","PREP","MAX","I"
	.FUNCT GET-PREP-WORD,PREP,MAX,I
	.DEBUG-LINE 2,1978,1
	GET PREPOSITIONS,0 >STACK
	MUL STACK,2 >STACK
	SUB STACK,1 >MAX
	.DEBUG-LINE 2,1979,1
	SET 'I,1
	.DEBUG-LINE 2,1980,1
?L1:	ADD I,1 >STACK
	GET PREPOSITIONS,STACK >STACK
	EQUAL? STACK,PREP \?L4
	.DEBUG-LINE 2,1981,1
	GET PREPOSITIONS,I >STACK
	RSTACK
?L4:	ADD I,2 >I
	GRTR? I,MAX \?L1
	.DEBUG-LINE 2,1982,1
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"SEARCH-FOR-LIGHT","I"
	.FUNCT SEARCH-FOR-LIGHT,I
	.DEBUG-LINE 2,1995,1
	FSET? HERE,LIGHTBIT /TRUE
	.DEBUG-LINE 2,1996,1
	PUT SCOPE-CURRENT-STAGES,0,4
	.DEBUG-LINE 2,1996,1
	PUT SCOPE-CURRENT-STAGES,1,LOCATION-SCOPE-STAGE
	.DEBUG-LINE 2,1996,1
	PUT SCOPE-CURRENT-STAGES,2,INVENTORY-SCOPE-STAGE
	.DEBUG-LINE 2,1996,1
	PUT SCOPE-CURRENT-STAGES,3,GLOBALS-SCOPE-STAGE
	.DEBUG-LINE 2,1996,1
	PUT SCOPE-CURRENT-STAGES,4,LOCAL-GLOBALS-SCOPE-STAGE
	.DEBUG-LINE 2,1996,1
	SET 'MAP-SCOPE-OPTIONS,0
	.DEBUG-LINE 6,142,1
	CALL1 MAP-SCOPE-START >STACK
	ZERO? STACK /FALSE
	.DEBUG-LINE 2,1996,1
?L6:	CALL1 MAP-SCOPE-NEXT >I
	.DEBUG-LINE 6,146,1
	ZERO? I /FALSE
	.DEBUG-LINE 2,1997,1
	FSET? I,LIGHTBIT \?L6
	.DEBUG-LINE 2,1997,1
	RETURN I
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"SEE-INSIDE?","OBJ"
	.FUNCT SEE-INSIDE?,OBJ
	.DEBUG-LINE 2,2010,1
	FSET? OBJ,SURFACEBIT /TRUE
	FSET? OBJ,CONTBIT \FALSE
	FSET? OBJ,OPENBIT /TRUE
	FSET? OBJ,TRANSBIT /TRUE
	FSET? OBJ,OPENABLEBIT \TRUE
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"MATCH-NOUN-PHRASE","NP","OUT","BITS","F","NY","NN","SPEC","MODE?1","NOUT","OBITS","ONOUT","BEST","Q","I","I?1"
	.FUNCT MATCH-NOUN-PHRASE,NP,OUT,BITS,F,NY,NN,SPEC,MODE?1,NOUT,OBITS,ONOUT,BEST,Q,I,I?1
	.DEBUG-LINE 2,2043,1
	GETB NP,0 >NY
	.DEBUG-LINE 2,2044,1
	GETB NP,1 >NN
	.DEBUG-LINE 2,2045,1
	GETB NP,6 >MODE?1
	.DEBUG-LINE 2,2046,1
	SET 'OBITS,BITS
	.DEBUG-LINE 2,2047,1
	ZERO? MODE?1 \?L1
	.DEBUG-LINE 2,2048,1
	BOR BITS,SF-HELD >STACK
	BOR STACK,SF-CARRIED >STACK
	BOR STACK,SF-ON-GROUND >STACK
	BOR STACK,SF-IN-ROOM >BITS
	.DEBUG-LINE 2,2054,1
?L1:	SET 'NOUT,0
	.DEBUG-LINE 2,2055,1
	ZERO? NY \?L6
	.DEBUG-LINE 2,2059,1
	ICALL2 MAP-SCOPE-INIT-STAGES-FROM-BITS,BITS
	.DEBUG-LINE 2,2059,1
	SET 'MAP-SCOPE-OPTIONS,MSO-NEED-LIGHT
	.DEBUG-LINE 6,142,1
	CALL1 MAP-SCOPE-START >STACK
	ZERO? STACK /?L27
	.DEBUG-LINE 2,2059,1
?L10:	CALL1 MAP-SCOPE-NEXT >I
	.DEBUG-LINE 6,146,1
	ZERO? I /?L27
	.DEBUG-LINE 2,2060,1
	GET SCOPE-CURRENT-STAGES,SCOPE-CURRENT-STAGE >STACK
	EQUAL? STACK,GENERIC-SCOPE-STAGE,GLOBALS-SCOPE-STAGE /?L10
	.DEBUG-LINE 2,2061,1
	CALL2 ALL-INCLUDES?,I >STACK
	ZERO? STACK /?L10
	.DEBUG-LINE 2,2062,1
	ZERO? NN /?L21
	GETB NP,1 >STACK
	GET NP,2 >STACK
	CALL ANY-SPEC-REFERS?,STACK,STACK,I >STACK
	ZERO? STACK \?L10
	.DEBUG-LINE 2,2063,1
?L21:	LESS? NOUT,P-MAX-OBJECTS /?L22
	.DEBUG-LINE 2,2064,1
	PRINTI "[too many objects!]"
	CRLF
	.DEBUG-LINE 2,2066,1
	JUMP ?L27
	.DEBUG-LINE 2,2068,1
?L22:	INC 'NOUT
	.DEBUG-LINE 2,2069,1
	PUT OUT,NOUT,I
	JUMP ?L10
	.DEBUG-LINE 2,2075,1
?L6:	SET 'I,1
	.DEBUG-LINE 2,2076,1
?L25:	SUB I,1 >STACK
	MUL 4,STACK >STACK
	GET NP,1 >STACK
	ADD STACK,STACK >SPEC
	.DEBUG-LINE 2,2078,1
	SET 'F,0
	.DEBUG-LINE 2,2079,1
	SET 'ONOUT,NOUT
	.DEBUG-LINE 2,2080,1
	SET 'BEST,1
	.DEBUG-LINE 2,2081,1
	ICALL2 MAP-SCOPE-INIT-STAGES-FROM-BITS,BITS
	.DEBUG-LINE 2,2081,1
	SET 'MAP-SCOPE-OPTIONS,MSO-NEED-LIGHT
	.DEBUG-LINE 6,142,1
	CALL1 MAP-SCOPE-START >STACK
	ZERO? STACK /?L34
	.DEBUG-LINE 2,2081,1
?L30:	CALL1 MAP-SCOPE-NEXT >I?1
	.DEBUG-LINE 6,146,1
	ZERO? I?1 /?L34
	.DEBUG-LINE 2,2083,1
	FSET? I?1,INVISIBLE /?L30
	CALL REFERS?,SPEC,I?1 >Q
	ZERO? Q /?L30
	LESS? Q,BEST /?L30
	.DEBUG-LINE 2,2087,1
	SET 'F,1
	.DEBUG-LINE 2,2089,1
	GRTR? Q,BEST \?L40
	.DEBUG-LINE 2,2091,1
	SET 'NOUT,ONOUT
	.DEBUG-LINE 2,2092,1
	SET 'BEST,Q
	.DEBUG-LINE 2,2093,1
?L40:	ZERO? NN /?L43
	GETB NP,1 >STACK
	GET NP,2 >STACK
	CALL ANY-SPEC-REFERS?,STACK,STACK,I?1 >STACK
	ZERO? STACK \?L30
	.DEBUG-LINE 2,2095,1
?L43:	LESS? NOUT,P-MAX-OBJECTS /?L45
	.DEBUG-LINE 2,2096,1
	PRINTI "[too many objects!]"
	CRLF
	.DEBUG-LINE 2,2098,1
	JUMP ?L34
	.DEBUG-LINE 2,2101,1
?L45:	INC 'NOUT
	.DEBUG-LINE 2,2102,1
	PUT OUT,NOUT,I?1
	JUMP ?L30
	.DEBUG-LINE 2,2104,1
?L34:	ZERO? F \?L58
	BTST BITS,SF-ON-GROUND \?L55
	GETP HERE,P?THINGS >Q
	ZERO? Q /?L55
	.DEBUG-LINE 2,2108,1
	CALL MATCH-PSEUDO,SPEC,Q >F
	.DEBUG-LINE 2,2109,1
	ZERO? F /?L91
	.DEBUG-LINE 2,2110,1
	ZERO? NN /?L52
	GETB NP,1 >STACK
	GET NP,2 >STACK
	CALL ANY-SPEC-REFERS-PSEUDO?,STACK,STACK,F >STACK
	ZERO? STACK \?L55
	.DEBUG-LINE 2,2111,1
?L52:	LESS? NOUT,P-MAX-OBJECTS /?L54
	.DEBUG-LINE 2,2112,1
	PRINTI "[too many objects!]"
	CRLF
	.DEBUG-LINE 2,2114,1
	JUMP ?L27
	.DEBUG-LINE 2,2116,1
?L54:	INC 'NOUT
	.DEBUG-LINE 2,2117,1
	CALL2 MAKE-PSEUDO,F >STACK
	PUT OUT,NOUT,STACK
	.DEBUG-LINE 2,2118,1
?L55:	ZERO? F \?L58
	.DEBUG-LINE 2,2120,1
?L91:	EQUAL? BITS,-1 /?L60
	.DEBUG-LINE 2,2122,1
	SET 'BITS,-1
	.DEBUG-LINE 2,2123,1
	SET 'OBITS,-1
	.DEBUG-LINE 2,2124,1
	JUMP ?L1
	.DEBUG-LINE 2,2125,1
?L60:	EQUAL? MAP-SCOPE-STATUS,MS-NO-LIGHT \?L63
	.DEBUG-LINE 2,2126,1
	PRINTI "It's too dark to see anything here."
	CRLF
	RFALSE
	.DEBUG-LINE 2,2128,1
?L63:	PRINTI "You don't see that here."
	CRLF
	.DEBUG-LINE 2,2130,1
	RFALSE
	.DEBUG-LINE 2,2131,1
?L58:	LESS? NOUT,P-MAX-OBJECTS \?L27
	IGRTR? 'I,NY \?L25
	.DEBUG-LINE 2,2135,1
?L27:	PUTB OUT,0,NOUT
	.DEBUG-LINE 2,2136,1
	ZERO? NOUT \?L68
	.DEBUG-LINE 2,2139,1
	BOR BITS,SF-HELD >STACK
	BOR STACK,SF-CARRIED >STACK
	BOR STACK,SF-ON-GROUND >STACK
	BOR STACK,SF-IN-ROOM >F
	.DEBUG-LINE 2,2140,1
	EQUAL? BITS,F \?L70
	.DEBUG-LINE 2,2141,1
	PRINTI "There are none at all available!"
	CRLF
	.DEBUG-LINE 2,2143,1
	RFALSE
	.DEBUG-LINE 2,2145,1
?L70:	SET 'BITS,F
	.DEBUG-LINE 2,2146,1
	SET 'OBITS,F
	.DEBUG-LINE 2,2147,1
	JUMP ?L1
	.DEBUG-LINE 2,2148,1
?L68:	EQUAL? NOUT,1 \?L73
	.DEBUG-LINE 2,2150,1
	GET OUT,1 >STACK
	RSTACK
	.DEBUG-LINE 2,2151,1
?L73:	EQUAL? MODE?1,MCM-ALL /?L75
	GRTR? NY,1 \?L74
	.DEBUG-LINE 2,2153,1
?L75:	RETURN MANY-OBJECTS
	.DEBUG-LINE 2,2154,1
?L74:	EQUAL? MODE?1,MCM-ANY \?L76
	.DEBUG-LINE 2,2156,1
	RANDOM NOUT >STACK
	GET OUT,STACK >F
	PUT OUT,1,F
	.DEBUG-LINE 2,2157,1
	PUTB OUT,0,1
	.DEBUG-LINE 2,2158,1
	PRINTI "["
	ICALL2 PRINT-DEF,F
	PRINTI "]"
	CRLF
	.DEBUG-LINE 2,2160,1
	RETURN F
	.DEBUG-LINE 2,2165,1
?L76:	EQUAL? BITS,OBITS /?L78
	.DEBUG-LINE 2,2167,1
	SET 'BITS,OBITS
	.DEBUG-LINE 2,2168,1
	JUMP ?L1
	.DEBUG-LINE 2,2169,1
?L78:	CALL2 APPLY-GENERIC-FCN,OUT >F
	ZERO? F /?L81
	.DEBUG-LINE 2,2171,1
	PUT OUT,1,F
	.DEBUG-LINE 2,2172,1
	PUTB OUT,0,1
	.DEBUG-LINE 2,2174,1
	RETURN F
	.DEBUG-LINE 2,2175,1
?L81:	ICALL2 WHICH-DO-YOU-MEAN,OUT
	.DEBUG-LINE 2,2176,1
	EQUAL? NP,P-NP-DOBJ \?L84
	.DEBUG-LINE 2,2176,1
	SET 'P-O-REASON,32768
	.DEBUG-LINE 2,2176,1
	SET 'P-V-WORDN,0
	.DEBUG-LINE 2,2176,1
	SET 'P-O-CONT,P-CONT
	RFALSE
	.DEBUG-LINE 2,2177,1
?L84:	SET 'P-O-REASON,40960
	.DEBUG-LINE 2,2177,1
	SET 'P-V-WORDN,0
	.DEBUG-LINE 2,2177,1
	SET 'P-O-CONT,P-CONT
	.DEBUG-LINE 2,2179,1
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"ALL-INCLUDES?","OBJ"
	.FUNCT ALL-INCLUDES?,OBJ
	.DEBUG-LINE 2,2182,1
	FSET? OBJ,INVISIBLE /FALSE
	EQUAL? OBJ,WINNER /FALSE
	EQUAL? PRSA,V?TAKE,V?DROP \TRUE
	FSET? OBJ,TAKEBIT /TRUE
	FSET? OBJ,TRYTAKEBIT /TRUE
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"APPLY-GENERIC-FCN","TBL","MAX","F","R","I"
	.FUNCT APPLY-GENERIC-FCN,TBL,MAX,F,R,I
	GETB TBL,0 >MAX
	.DEBUG-LINE 2,2189,1
	SET 'I,1
	.DEBUG-LINE 2,2190,1
?L1:	GET TBL,I >STACK
	GETP STACK,P?GENERIC >F
	.DEBUG-LINE 2,2191,1
	CALL2 F,TBL >R
	ZERO? R /?L4
	.DEBUG-LINE 2,2192,1
	RETURN R
?L4:	IGRTR? 'I,MAX \?L1
	.DEBUG-LINE 2,2189,1
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"WHICH-DO-YOU-MEAN","TBL"
	.FUNCT WHICH-DO-YOU-MEAN,TBL
	.DEBUG-LINE 2,2195,1
	PRINTI "Which do you mean, "
	.DEBUG-LINE 2,2196,1
	ICALL LIST-OBJECTS,TBL,0,56
	.DEBUG-LINE 2,2197,1
	PRINTR "?"
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"ANY-SPEC-REFERS?","TBL","N","O","I"
	.FUNCT ANY-SPEC-REFERS?,TBL,N,O,I
	.DEBUG-LINE 2,2208,1
	ZERO? N /FALSE
	.DEBUG-LINE 2,2209,1
	SET 'I,1
	.DEBUG-LINE 2,2210,1
?L4:	CALL REFERS?,TBL,O >STACK
	ZERO? STACK \TRUE
	.DEBUG-LINE 2,2211,1
	ADD TBL,P-OBJSPEC-SIZE >TBL
	IGRTR? 'I,N \?L4
	.DEBUG-LINE 2,2212,1
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"ANY-SPEC-REFERS-PSEUDO?","TBL","N","PDO","I"
	.FUNCT ANY-SPEC-REFERS-PSEUDO?,TBL,N,PDO,I
	.DEBUG-LINE 2,2215,1
	ZERO? N /FALSE
	.DEBUG-LINE 2,2216,1
	SET 'I,1
	.DEBUG-LINE 2,2217,1
?L4:	CALL REFERS-PSEUDO?,TBL,PDO >STACK
	ZERO? STACK \TRUE
	.DEBUG-LINE 2,2218,1
	ADD TBL,P-OBJSPEC-SIZE >TBL
	IGRTR? 'I,N \?L4
	.DEBUG-LINE 2,2219,1
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GLOBAL-IN?","O","R"
	.FUNCT GLOBAL-IN?,O,R
	.DEBUG-LINE 2,2239,1
	FSET? O,INVISIBLE /FALSE
	CALL IN-PWTBL?,R,P?GLOBAL,O >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"REFERS?","SPEC","O","A","N"
	.FUNCT REFERS?,SPEC,O,A,N
	GET SPEC,0 >A
	GET SPEC,1 >N
	.DEBUG-LINE 2,2254,1
	ZERO? A /?L1
	ZERO? N /?L6
	.DEBUG-LINE 2,2255,1
	CALL IN-PWTBL?,O,P?ADJECTIVE,A >STACK
	ZERO? STACK /FALSE
	CALL IN-PWTBL?,O,P?SYNONYM,N >STACK
	ZERO? STACK /FALSE
	.DEBUG-LINE 2,2257,1
	RETURN 3
	.DEBUG-LINE 2,2258,1
?L1:	ZERO? N /?L6
	.DEBUG-LINE 2,2259,1
	CALL IN-PWTBL?,O,P?SYNONYM,N >STACK
	ZERO? STACK /?L7
	.DEBUG-LINE 2,2259,1
	RETURN 2
	.DEBUG-LINE 2,2262,1
?L7:	CALL CHKWORD?,N,PS?ADJECTIVE >STACK
	ZERO? STACK /FALSE
	SET 'A,N
	PUSH A
	ZERO? STACK /FALSE
	.DEBUG-LINE 2,2263,1
	CALL IN-PWTBL?,O,P?ADJECTIVE,A >STACK
	ZERO? STACK /FALSE
	.DEBUG-LINE 2,2263,1
	RTRUE
	.DEBUG-LINE 2,2264,1
?L6:	ZERO? A /FALSE
	.DEBUG-LINE 2,2265,1
	CALL IN-PWTBL?,O,P?ADJECTIVE,A >STACK
	ZERO? STACK /FALSE
	.DEBUG-LINE 2,2265,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"IN-PWTBL?","O","P","V","PT"
	.FUNCT IN-PWTBL?,O,P,V,PT
	.DEBUG-LINE 2,2278,1
	GETPT O,P >PT
	ZERO? PT /FALSE
	PTSIZE PT >STACK
	DIV STACK,2 >STACK
	CALL IN-WTBL?,PT,STACK,V >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"IN-PBTBL?","O","P","V","PT"
	.FUNCT IN-PBTBL?,O,P,V,PT
	.DEBUG-LINE 2,2291,1
	GETPT O,P >PT
	ZERO? PT /FALSE
	PTSIZE PT >STACK
	CALL IN-BTBL?,PT,STACK,V >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"IN-WTBL?","TBL","CNT","V"
	.FUNCT IN-WTBL?,TBL,CNT,V
	.DEBUG-LINE 2,2324,1
	INTBL? V,TBL,CNT >STACK /TRUE
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"IN-BTBL?","TBL","CNT","V"
	.FUNCT IN-BTBL?,TBL,CNT,V
	.DEBUG-LINE 2,2327,1
	INTBL? V,TBL,CNT,1 >STACK /TRUE
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"COPY-LEXBUF","SRC","DEST","WDS"
	.FUNCT COPY-LEXBUF,SRC,DEST,WDS
	GETB SRC,1 >WDS
	.DEBUG-LINE 2,2385,1
	PUTB DEST,1,WDS
	.DEBUG-LINE 2,2386,1
	MUL 2,WDS >STACK
	MUL STACK,2 >STACK
	ADD DEST,2 >STACK
	ADD SRC,2 >STACK
	COPYT STACK,STACK,STACK
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"COPY-READBUF","SRC","DEST"
	.FUNCT COPY-READBUF,SRC,DEST
	.DEBUG-LINE 2,2390,1
	COPYT SRC,DEST,100
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"READBUF-LENGTH","TBL"
	.FUNCT READBUF-LENGTH,TBL
	.DEBUG-LINE 2,2403,1
	GETB TBL,1 >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"READLINE","PROMPT?"
	.FUNCT READLINE,PROMPT?
	.DEBUG-LINE 2,2415,1
	ZERO? PROMPT? /?L1
	.DEBUG-LINE 2,2415,1
	CRLF
	PRINTI "> "
	.DEBUG-LINE 2,2416,1
?L1:	SET 'READBUF,KBD-READBUF
	.DEBUG-LINE 2,2417,1
	SET 'LEXBUF,KBD-LEXBUF
	.DEBUG-LINE 2,2418,1
	PUTB READBUF,0,98
	.DEBUG-LINE 2,2422,1
	PUTB READBUF,1,0
	.DEBUG-LINE 2,2423,1
	ICALL1 UPDATE-STATUS-LINE
	.DEBUG-LINE 2,2424,1
	READ READBUF,LEXBUF >STACK
	.DEBUG-LINE 2,2425,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PERFORM","ACT","DOBJ","IOBJ","PRTN","RTN","OA","OD","ODD","OI","WON","CNT","ORM","I"
	.FUNCT PERFORM,ACT,DOBJ,IOBJ,PRTN,RTN,OA,OD,ODD,OI,WON,CNT,ORM,I
	.DEBUG-LINE 2,2503,1
	GET PREACTIONS,ACT >PRTN
	.DEBUG-LINE 2,2504,1
	GET ACTIONS,ACT >RTN
	.DEBUG-LINE 2,2505,1
	SET 'OA,PRSA
	.DEBUG-LINE 2,2506,1
	SET 'OD,PRSO
	.DEBUG-LINE 2,2507,1
	SET 'ODD,PRSO-DIR
	.DEBUG-LINE 2,2508,1
	SET 'OI,PRSI
	.DEBUG-LINE 2,2509,1
	SET 'ORM,REPORT-MODE
	.DEBUG-LINE 2,2510,1
	SET 'PRSA,ACT
	.DEBUG-LINE 2,2511,1
	SET 'PRSO,DOBJ
	.DEBUG-LINE 2,2512,1
	EQUAL? ACT,V?WALK /?L1
	.DEBUG-LINE 2,2512,1
	SET 'PRSO-DIR,0
	.DEBUG-LINE 2,2513,1
?L1:	SET 'PRSI,IOBJ
	.DEBUG-LINE 2,2516,1
	CALL2 COUNT-PRS-APPEARANCES,NUMBER >STACK
	GRTR? STACK,1 \?L3
	.DEBUG-LINE 2,2517,1
	PRINTI "You can't use more than one number in a command."
	CRLF
	.DEBUG-LINE 2,2518,1
	SET 'WON,0
	JUMP ?L16
	.DEBUG-LINE 2,2519,1
?L3:	ZERO? PRSO-DIR \?L5
	EQUAL? PRSO,MANY-OBJECTS \?L5
	.DEBUG-LINE 2,2520,1
	EQUAL? PRSI,MANY-OBJECTS \?L6
	.DEBUG-LINE 2,2521,1
	PRINTI "You can't use multiple direct and indirect objects together."
	CRLF
	.DEBUG-LINE 2,2522,1
	SET 'WON,0
	JUMP ?L16
	.DEBUG-LINE 2,2524,1
?L6:	SET 'REPORT-MODE,SHORT-REPORT
	.DEBUG-LINE 2,2525,1
	GETB P-PRSOS,0 >CNT
	.DEBUG-LINE 2,2526,1
	SET 'I,1
	.DEBUG-LINE 2,2527,1
?L9:	GET P-PRSOS,I >PRSO
	.DEBUG-LINE 2,2528,1
	PRINTD PRSO
	PRINTI ": "
	.DEBUG-LINE 2,2529,1
	CALL PERFORM-CALL-HANDLERS,PRTN,RTN >WON
	IGRTR? 'I,CNT \?L9
	JUMP ?L16
	.DEBUG-LINE 2,2530,1
?L5:	EQUAL? PRSI,MANY-OBJECTS \?L12
	.DEBUG-LINE 2,2531,1
	SET 'REPORT-MODE,SHORT-REPORT
	.DEBUG-LINE 2,2532,1
	GETB P-PRSIS,0 >CNT
	.DEBUG-LINE 2,2533,1
	SET 'I,1
	.DEBUG-LINE 2,2534,1
?L13:	GET P-PRSIS,I >PRSI
	.DEBUG-LINE 2,2535,1
	PRINTD PRSI
	PRINTI ": "
	.DEBUG-LINE 2,2536,1
	CALL PERFORM-CALL-HANDLERS,PRTN,RTN >WON
	IGRTR? 'I,CNT \?L13
	JUMP ?L16
	.DEBUG-LINE 2,2537,1
?L12:	CALL PERFORM-CALL-HANDLERS,PRTN,RTN >WON
	.DEBUG-LINE 2,2539,1
?L16:	SET 'PRSA,OA
	.DEBUG-LINE 2,2540,1
	SET 'PRSO,OD
	.DEBUG-LINE 2,2541,1
	SET 'PRSO-DIR,ODD
	.DEBUG-LINE 2,2542,1
	SET 'PRSI,OI
	.DEBUG-LINE 2,2543,1
	SET 'REPORT-MODE,ORM
	.DEBUG-LINE 2,2544,1
	RETURN WON
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"COUNT-PRS-APPEARANCES","O","R","MAX","I"
	.FUNCT COUNT-PRS-APPEARANCES,O,R,MAX,I
	.DEBUG-LINE 2,2547,1
	EQUAL? PRSO,O \?L1
	.DEBUG-LINE 2,2547,1
	INC 'R
	JUMP ?L6
	.DEBUG-LINE 2,2548,1
?L1:	EQUAL? PRSO,MANY-OBJECTS \?L6
	.DEBUG-LINE 2,2549,1
	GETB P-PRSOS,0 >MAX
	.DEBUG-LINE 2,2550,1
	SET 'I,1
	.DEBUG-LINE 2,2551,1
?L4:	GET P-PRSOS,I >STACK
	EQUAL? STACK,O \?L7
	.DEBUG-LINE 2,2551,1
	INC 'R
?L7:	IGRTR? 'I,MAX \?L4
	.DEBUG-LINE 2,2552,1
?L6:	EQUAL? PRSI,O \?L11
	.DEBUG-LINE 2,2552,1
	INC 'R
	JUMP ?L16
	.DEBUG-LINE 2,2553,1
?L11:	EQUAL? PRSI,MANY-OBJECTS \?L16
	.DEBUG-LINE 2,2554,1
	GETB P-PRSIS,0 >MAX
	.DEBUG-LINE 2,2555,1
	SET 'I,1
	.DEBUG-LINE 2,2556,1
?L14:	GET P-PRSIS,I >STACK
	EQUAL? STACK,O \?L17
	.DEBUG-LINE 2,2556,1
	INC 'R
?L17:	IGRTR? 'I,MAX \?L14
	.DEBUG-LINE 2,2557,1
?L16:	RETURN R
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PERFORM-CALL-HANDLERS","PRTN","RTN","AC","RM"
	.FUNCT PERFORM-CALL-HANDLERS,PRTN,RTN,AC,RM
	.DEBUG-LINE 2,2587,1
	GETP WINNER,P?ACTION >AC
	ZERO? AC /?L1
	CALL2 AC,M-WINNER >STACK
	ZERO? STACK \TRUE
	.DEBUG-LINE 2,2591,1
?L1:	LOC WINNER >RM
	ZERO? RM /?L3
	GETP RM,P?ACTION >AC
	ZERO? AC /?L3
	CALL2 AC,M-BEG >STACK
	ZERO? STACK \TRUE
	.DEBUG-LINE 2,2596,1
?L3:	ZERO? PRTN /?L4
	CALL1 PRTN >STACK
	ZERO? STACK \TRUE
	.DEBUG-LINE 2,2600,1
?L4:	ZERO? PRSI /?L6
	LOC PRSI >RM
	ZERO? RM /?L5
	GETP RM,P?CONTFCN >AC
	ZERO? AC /?L5
	CALL1 AC >STACK
	ZERO? STACK \TRUE
	.DEBUG-LINE 2,2606,1
?L5:	ZERO? PRSI /?L6
	GETP PRSI,P?ACTION >AC
	ZERO? AC /?L6
	CALL1 AC >STACK
	ZERO? STACK \TRUE
	.DEBUG-LINE 2,2611,1
?L6:	ZERO? PRSO /?L8
	ZERO? PRSO-DIR \?L7
	LOC PRSO >RM
	ZERO? RM /?L7
	GETP RM,P?CONTFCN >AC
	ZERO? AC /?L7
	CALL1 AC >STACK
	ZERO? STACK \TRUE
	.DEBUG-LINE 2,2618,1
?L7:	ZERO? PRSO /?L8
	ZERO? PRSO-DIR \?L8
	GETP PRSO,P?ACTION >AC
	ZERO? AC /?L8
	CALL1 AC >STACK
	ZERO? STACK \TRUE
	.DEBUG-LINE 2,2626,1
?L8:	CALL1 RTN >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GOTO","RM","WAS-LIT","F","OWINNER"
	.FUNCT GOTO,RM,WAS-LIT,F,OWINNER
	SET 'OWINNER,0
	.DEBUG-LINE 2,2643,1
	EQUAL? WINNER,PLAYER /?L1
	.DEBUG-LINE 2,2644,1
	SET 'OWINNER,WINNER
	.DEBUG-LINE 2,2645,1
	SET 'WINNER,PLAYER
	.DEBUG-LINE 2,2646,1
?L1:	SET 'WAS-LIT,HERE-LIT
	.DEBUG-LINE 2,2647,1
	SET 'HERE,RM
	.DEBUG-LINE 2,2648,1
	MOVE WINNER,HERE
	.DEBUG-LINE 2,2649,1
	GETP RM,P?ACTION >STACK
	ICALL2 STACK,M-ENTER
	.DEBUG-LINE 2,2651,1
	CALL1 SEARCH-FOR-LIGHT >HERE-LIT
	.DEBUG-LINE 2,2653,1
	ZERO? WAS-LIT \?L4
	.DEBUG-LINE 2,2654,1
	ZERO? HERE-LIT /?L6
	.DEBUG-LINE 2,2655,1
	CALL2 DARKNESS-F,M-DARK-TO-LIT >F
	JUMP ?L12
	.DEBUG-LINE 2,2656,1
?L6:	CALL2 DARKNESS-F,M-DARK-TO-DARK >STACK
	ZERO? STACK \?L9
	CALL2 DARKNESS-F,M-LOOK >STACK
	ZERO? STACK /?L12
	.DEBUG-LINE 2,2658,1
?L9:	SET 'F,1
	JUMP ?L12
	.DEBUG-LINE 2,2659,1
?L4:	ZERO? HERE-LIT \?L12
	.DEBUG-LINE 2,2660,1
	CALL2 DARKNESS-F,M-LIT-TO-DARK >STACK
	ZERO? STACK \?L13
	CALL2 DARKNESS-F,M-LOOK >STACK
	ZERO? STACK /?L12
	.DEBUG-LINE 2,2662,1
?L13:	SET 'F,1
	.DEBUG-LINE 2,2663,1
?L12:	ZERO? F \?L15
	CALL2 DESCRIBE-ROOM,HERE >STACK
	ZERO? STACK /?L15
	.DEBUG-LINE 2,2664,1
	ICALL2 DESCRIBE-OBJECTS,HERE
	.DEBUG-LINE 2,2665,1
?L15:	ZERO? HERE-LIT /?L18
	.DEBUG-LINE 2,2665,1
	FSET HERE,TOUCHBIT
	.DEBUG-LINE 2,2666,1
?L18:	ZERO? OWINNER /TRUE
	.DEBUG-LINE 2,2666,1
	SET 'WINNER,OWINNER
	.DEBUG-LINE 2,2667,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"FIND-IN","C","BIT","WORD","N","W","PT","MAX","I","I?1"
	.FUNCT FIND-IN,C,BIT,WORD,N,W,PT,MAX,I,I?1
	.DEBUG-LINE 2,2689,1
	FIRST? C >I \?L3
	.DEBUG-LINE 2,2691,1
?L1:	FSET? I,BIT \?L4
	.DEBUG-LINE 2,2693,1
	INC 'N
	.DEBUG-LINE 2,2694,1
	SET 'W,I
?L4:	NEXT? I >I /?L1
	.DEBUG-LINE 2,2697,1
?L3:	ZERO? N \?L11
	GETPT C,P?GLOBAL >PT
	ZERO? PT /?L11
	.DEBUG-LINE 2,2702,1
	PTSIZE PT >MAX
	.DEBUG-LINE 2,2703,1
	DIV MAX,2 >MAX
	.DEBUG-LINE 2,2704,1
	DEC 'MAX
	.DEBUG-LINE 2,2705,1
	SET 'I,0
	.DEBUG-LINE 2,2706,1
?L9:	GET PT,I >I?1
	.DEBUG-LINE 2,2708,1
	FSET? I?1,BIT \?L14
	.DEBUG-LINE 2,2710,1
	INC 'N
	.DEBUG-LINE 2,2711,1
	SET 'W,I?1
?L14:	IGRTR? 'I,MAX \?L9
	.DEBUG-LINE 2,2717,1
?L11:	EQUAL? N,1 \FALSE
	.DEBUG-LINE 2,2720,1
	ZERO? WORD /?L20
	.DEBUG-LINE 2,2721,1
	PRINTI "["
	PRINT WORD
	PRINTI " "
	ICALL2 PRINT-DEF,W
	PRINTI "]"
	CRLF
	.DEBUG-LINE 2,2722,1
?L20:	RETURN W
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"ITALICIZE","STR"
	.FUNCT ITALICIZE,STR
	.DEBUG-LINE 2,2738,1
	HLIGHT H-ITALIC
	.DEBUG-LINE 2,2739,1
	PRINT STR
	.DEBUG-LINE 2,2741,1
	HLIGHT H-NORMAL
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PICK-ONE","TABL","LENGTH","CNT","OCNT","RND","MSG"
	.FUNCT PICK-ONE,TABL,LENGTH,CNT,OCNT,RND,MSG
	GET TABL,0 >LENGTH
	GET TABL,1 >CNT
	.DEBUG-LINE 2,2755,1
	SUB LENGTH,CNT >STACK
	INC 'STACK
	RANDOM STACK >STACK
	ADD CNT,STACK >STACK
	SUB STACK,1 >RND
	.DEBUG-LINE 2,2756,1
	GET TABL,RND >MSG
	.DEBUG-LINE 2,2758,1
	SET 'OCNT,CNT
	.DEBUG-LINE 2,2759,1
	.DEBUG-LINE 2,2761,1
	IGRTR? 'CNT,LENGTH \?L1
	.DEBUG-LINE 2,2762,1
	PUT TABL,1,2
	.DEBUG-LINE 2,2763,1
	RETURN MSG
	.DEBUG-LINE 2,2765,1
?L1:	EQUAL? RND,OCNT /?L4
	.DEBUG-LINE 2,2766,1
	GET TABL,OCNT >STACK
	PUT TABL,RND,STACK
	.DEBUG-LINE 2,2767,1
	PUT TABL,OCNT,MSG
	.DEBUG-LINE 2,2768,1
?L4:	PUT TABL,1,CNT
	.DEBUG-LINE 2,2769,1
	RETURN MSG
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PICK-ONE-R","TABL","RND"
	.FUNCT PICK-ONE-R,TABL,RND
	.DEBUG-LINE 2,2787,1
	GET TABL,0 >STACK
	DEC 'STACK
	INC 'STACK
	RANDOM STACK >STACK
	INC 'STACK
	SUB STACK,1 >RND
	.DEBUG-LINE 2,2788,1
	GET TABL,RND >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"INIT-STATUS-LINE"
	.FUNCT INIT-STATUS-LINE
	.DEBUG-LINE 2,2806,1
	SPLIT 1
	.DEBUG-LINE 2,2807,1
	CLEAR 1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"UPDATE-STATUS-LINE","WIDTH"
	.FUNCT UPDATE-STATUS-LINE,WIDTH
	.DEBUG-LINE 2,2817,1
	SCREEN 1
	.DEBUG-LINE 2,2818,1
	HLIGHT H-INVERSE
	.DEBUG-LINE 2,2819,1
	ICALL1 FAKE-ERASE
	.DEBUG-LINE 2,2820,1
	PRINTC 32
	.DEBUG-LINE 2,2821,1
	ZERO? HERE-LIT /?L1
	.DEBUG-LINE 2,2821,1
	PRINTD HERE
	JUMP ?L3
	.DEBUG-LINE 2,2822,1
?L1:	PRINTI "Darkness"
	.DEBUG-LINE 2,2823,1
?L3:	GETB 0,33 >WIDTH
	.DEBUG-LINE 2,2824,1
	SUB WIDTH,22 >STACK
	CURSET 1,STACK
	.DEBUG-LINE 2,2825,1
	PRINTI "Score: "
	.DEBUG-LINE 2,2826,1
	PRINTN SCORE
	.DEBUG-LINE 2,2827,1
	SUB WIDTH,10 >STACK
	CURSET 1,STACK
	.DEBUG-LINE 2,2828,1
	PRINTI "Moves: "
	.DEBUG-LINE 2,2829,1
	PRINTN MOVES
	.DEBUG-LINE 2,2830,1
	SCREEN 0
	.DEBUG-LINE 2,2831,1
	HLIGHT H-NORMAL
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"FAKE-ERASE","I"
	.FUNCT FAKE-ERASE,I
	.DEBUG-LINE 2,2835,1
	CURSET 1,1
	.DEBUG-LINE 2,2836,1
	GETB 0,33 >I
	.DEBUG-LINE 2,2836,1
?L1:	PRINTC 32
	DLESS? 'I,1 \?L1
	.DEBUG-LINE 2,2837,1
	CURSET 1,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"JIGS-UP","TEXT","W"
	.FUNCT JIGS-UP,TEXT,W
	.DEBUG-LINE 2,2850,1
	SET 'P-CONT,0
	.DEBUG-LINE 2,2851,1
	PRINT TEXT
	CRLF
	CRLF
	.DEBUG-LINE 2,2852,1
	ICALL1 PRINT-GAME-OVER
	.DEBUG-LINE 2,2853,1
	CRLF
	.DEBUG-LINE 2,2857,1
?L2:	PRINTI "Would you like to RESTART, UNDO, RESTORE, or QUIT? > "
	.DEBUG-LINE 2,2861,1
?L5:	ICALL1 READLINE
	.DEBUG-LINE 2,2862,1
	GETB LEXBUF,1 >STACK
	ZERO? STACK \?L8
	SET 'W,0
	JUMP ?L7
?L8:	GET LEXBUF,1 >W
	.DEBUG-LINE 2,2863,1
?L7:	EQUAL? W,W?RESTART \?L9
	.DEBUG-LINE 2,2864,1
	RESTART
	.DEBUG-LINE 2,2865,1
?L9:	EQUAL? W,W?RESTORE \?L11
	.DEBUG-LINE 2,2866,1
	RESTORE >STACK
	.DEBUG-LINE 2,2867,1
	PRINTI "Restore failed."
	CRLF
	.DEBUG-LINE 2,2868,1
	JUMP ?L2
	.DEBUG-LINE 2,2869,1
?L11:	EQUAL? W,W?QUIT \?L12
	.DEBUG-LINE 2,2870,1
	CRLF
	PRINTI "Thanks for playing."
	CRLF
	.DEBUG-LINE 2,2871,1
	QUIT
	.DEBUG-LINE 2,2872,1
?L12:	EQUAL? W,W?UNDO \?L13
	.DEBUG-LINE 2,2873,1
	ICALL1 V-UNDO
	.DEBUG-LINE 2,2874,1
	PRINTI "Undo failed."
	CRLF
	.DEBUG-LINE 2,2875,1
	JUMP ?L2
	.DEBUG-LINE 2,2878,1
?L13:	CRLF
	PRINTI "(Please type RESTART, UNDO, RESTORE or QUIT) >"
	JUMP ?L5
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRINT-GAME-OVER"
	.FUNCT PRINT-GAME-OVER
	.DEBUG-LINE 2,2888,1
	PRINTR "    ****  The game is over  ****"
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"ROB","VICTIM","DEST","DEST-IS-PERSON","I","N"
	.FUNCT ROB,VICTIM,DEST,DEST-IS-PERSON,I,N
	.DEBUG-LINE 2,2911,1
	ZERO? DEST /?L1
	FSET? DEST,PERSONBIT \?L1
	.DEBUG-LINE 2,2912,1
	SET 'DEST-IS-PERSON,1
	.DEBUG-LINE 2,2913,1
?L1:	FIRST? VICTIM >I \TRUE
?L4:	NEXT? I >N /?L7
	.DEBUG-LINE 2,2914,1
?L7:	ZERO? DEST-IS-PERSON \?L8
	.DEBUG-LINE 2,2914,1
	FCLEAR I,WORNBIT
	.DEBUG-LINE 2,2915,1
?L8:	ZERO? DEST \?L11
	.DEBUG-LINE 2,2915,1
	REMOVE I
	JUMP ?L13
	.DEBUG-LINE 2,2916,1
?L11:	MOVE I,DEST
?L13:	SET 'I,N
	ZERO? I \?L4
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"YES?","RESP"
	.FUNCT YES?,RESP
	.DEBUG-LINE 2,2926,1
	PRINTI " (y/n) >"
	.DEBUG-LINE 2,2928,1
?L1:	ICALL1 READLINE
	.DEBUG-LINE 2,2933,1
	GETB READBUF,1 >STACK
	ZERO? STACK /?L3
	.DEBUG-LINE 2,2934,1
	GETB READBUF,2 >RESP
	JUMP ?L5
	.DEBUG-LINE 2,2936,1
?L3:	SET 'RESP,0
	.DEBUG-LINE 2,2937,1
?L5:	EQUAL? RESP,89,121 /TRUE
	.DEBUG-LINE 2,2939,1
	EQUAL? RESP,78,110 /FALSE
	.DEBUG-LINE 2,2943,1
	PRINTI "(Please type y or n) >"
	JUMP ?L1
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"VISIBLE?","OBJ","P","M"
	.FUNCT VISIBLE?,OBJ,P,M
	.DEBUG-LINE 2,2979,1
	EQUAL? OBJ,PSEUDO-OBJECT \?L1
	.DEBUG-LINE 2,2980,1
	EQUAL? HERE,PSEUDO-LOC \FALSE
	RTRUE
	.DEBUG-LINE 2,2981,1
?L1:	LOC OBJ >P
	.DEBUG-LINE 2,2982,1
	ZERO? P /FALSE
	.DEBUG-LINE 2,2983,1
	CALL2 META-LOC,OBJ >M
	.DEBUG-LINE 2,2984,1
	EQUAL? M,HERE /?L15
	.DEBUG-LINE 2,2985,1
	EQUAL? P,LOCAL-GLOBALS \?L14
	CALL GLOBAL-IN?,OBJ,HERE >STACK
	ZERO? STACK \TRUE
?L14:	EQUAL? P,GLOBAL-OBJECTS,GENERIC-OBJECTS \FALSE
	.DEBUG-LINE 2,2988,1
	RTRUE
	.DEBUG-LINE 2,2991,1
?L15:	EQUAL? P,HERE,WINNER /TRUE
	.DEBUG-LINE 2,2993,1
	CALL2 SEE-INSIDE?,P >STACK
	ZERO? STACK /FALSE
	.DEBUG-LINE 2,2995,1
	LOC P >P
	JUMP ?L15
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"ACCESSIBLE?","OBJ","L"
	.FUNCT ACCESSIBLE?,OBJ,L
	.DEBUG-LINE 2,3010,1
	LOC OBJ >L
	.DEBUG-LINE 2,3011,1
	CALL2 META-LOC,OBJ >STACK
	EQUAL? STACK,HERE \FALSE
	.DEBUG-LINE 2,3016,1
?L1:	FSET? L,CONTBIT \?L6
	FSET? L,OPENBIT /?L6
	FSET? L,SURFACEBIT \FALSE
	.DEBUG-LINE 2,3021,1
?L6:	EQUAL? L,HERE,WINNER /TRUE
	.DEBUG-LINE 2,3025,1
	LOC L >L
	JUMP ?L1
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"HELD?","OBJ","HLDR"
	.FUNCT HELD?,OBJ,HLDR
	ASSIGNED? 'HLDR /?L9
	SET 'HLDR,0
	.DEBUG-LINE 2,3039,1
?L9:	ZERO? HLDR \?L1
	.DEBUG-LINE 2,3039,1
	SET 'HLDR,WINNER
	.DEBUG-LINE 2,3041,1
?L1:	ZERO? OBJ /FALSE
	.DEBUG-LINE 2,3043,1
	LOC OBJ >STACK
	EQUAL? STACK,HLDR /TRUE
	.DEBUG-LINE 2,3046,1
	LOC OBJ >OBJ
	JUMP ?L1
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"META-LOC","OBJ"
	.FUNCT META-LOC,OBJ
	.DEBUG-LINE 2,3057,1
?L1:	LOC OBJ >OBJ
	.DEBUG-LINE 2,3058,1
	ZERO? OBJ /FALSE
	.DEBUG-LINE 2,3059,1
	IN? OBJ,ROOMS \?L1
	.DEBUG-LINE 2,3060,1
	RETURN OBJ
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"NOW-DARK?"
	.FUNCT NOW-DARK?
	.DEBUG-LINE 2,3067,1
	ZERO? HERE-LIT /FALSE
	CALL1 SEARCH-FOR-LIGHT >STACK
	ZERO? STACK \FALSE
	.DEBUG-LINE 2,3069,1
	SET 'HERE-LIT,0
	.DEBUG-LINE 2,3070,1
	CALL2 DARKNESS-F,M-NOW-DARK >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"NOW-LIT?","?TMP"
	.FUNCT NOW-LIT?,?TMP
	.DEBUG-LINE 2,3077,1
	ZERO? HERE-LIT \FALSE
	CALL1 SEARCH-FOR-LIGHT >STACK
	ZERO? STACK /FALSE
	.DEBUG-LINE 2,3079,1
	SET 'HERE-LIT,1
	.DEBUG-LINE 2,3080,1
	FSET HERE,TOUCHBIT
	.DEBUG-LINE 2,3081,1
	CALL2 DARKNESS-F,M-NOW-LIT >?TMP
	ZERO? ?TMP /?L4
	RETURN ?TMP
?L4:	CALL1 V-LOOK >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"QUEUE","IRTN","TURNZ"
	.FUNCT QUEUE,IRTN,TURNZ
	.DEBUG-LINE 7,18,1
	ADD IQ-LENGTH,2 >IQ-LENGTH
	.DEBUG-LINE 7,19,1
	SUB IQ-LENGTH,1 >STACK
	PUT IQUEUE,STACK,IRTN
	.DEBUG-LINE 7,20,1
	PUT IQUEUE,IQ-LENGTH,TURNZ
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"DEQUEUE","IRTN","S"
	.FUNCT DEQUEUE,IRTN,S
	.DEBUG-LINE 7,34,1
?L1:	ADD S,2 >S
	.DEBUG-LINE 7,35,1
	GRTR? S,IQ-LENGTH /TRUE
	.DEBUG-LINE 7,36,1
	SUB S,1 >STACK
	GET IQUEUE,STACK >STACK
	EQUAL? STACK,IRTN \?L1
	.DEBUG-LINE 7,37,1
	ICALL2 DEL-EVENT,S
	.DEBUG-LINE 7,38,1
	ICALL1 IQUEUE-CLEANUP
	.DEBUG-LINE 7,39,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"DEL-EVENT","IQPOS"
	.FUNCT DEL-EVENT,IQPOS
	.DEBUG-LINE 7,49,1
	PUT IQUEUE,IQPOS,-9
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"IQUEUE-CLEANUP","S","Z"
	.FUNCT IQUEUE-CLEANUP,S,Z
	.DEBUG-LINE 7,58,1
?L1:	ADD S,2 >S
	.DEBUG-LINE 7,59,1
	GRTR? S,IQ-LENGTH /TRUE
	.DEBUG-LINE 7,60,1
	GET IQUEUE,S >STACK
	EQUAL? STACK,-9 \?L1
	.DEBUG-LINE 7,61,1
	SET 'Z,S
	.DEBUG-LINE 7,63,1
?L6:	ADD Z,1 >STACK
	GET IQUEUE,STACK >STACK
	SUB Z,1 >STACK
	PUT IQUEUE,STACK,STACK
	.DEBUG-LINE 7,64,1
	ADD Z,2 >STACK
	GET IQUEUE,STACK >STACK
	PUT IQUEUE,Z,STACK
	.DEBUG-LINE 7,65,1
	EQUAL? Z,IQ-LENGTH \?L8
	.DEBUG-LINE 7,66,1
	SUB Z,1 >STACK
	PUT IQUEUE,STACK,0
	.DEBUG-LINE 7,67,1
	PUT IQUEUE,Z,0
	.DEBUG-LINE 7,68,1
	SUB IQ-LENGTH,2 >IQ-LENGTH
	.DEBUG-LINE 7,69,1
	SUB S,2 >S
	.DEBUG-LINE 7,70,1
	JUMP ?L1
	.DEBUG-LINE 7,71,1
?L8:	ADD Z,2 >Z
	JUMP ?L6
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"RUNNING?","E","S"
	.FUNCT RUNNING?,E,S
	.DEBUG-LINE 7,88,1
?L1:	ADD S,2 >S
	.DEBUG-LINE 7,89,1
	GRTR? S,IQ-LENGTH /FALSE
	.DEBUG-LINE 7,91,1
	SUB S,1 >STACK
	GET IQUEUE,STACK >STACK
	EQUAL? STACK,E \?L1
	.DEBUG-LINE 7,92,1
	GET IQUEUE,S >STACK
	EQUAL? STACK,1,-1 \?L1
	.DEBUG-LINE 7,93,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"CLOCKER","S","C","FIRED"
	.FUNCT CLOCKER,S,C,FIRED
	.DEBUG-LINE 7,113,1
	INC 'MOVES
	.DEBUG-LINE 7,115,1
?L1:	ADD S,2 >S
	.DEBUG-LINE 7,116,1
	GRTR? S,IQ-LENGTH \?L3
	.DEBUG-LINE 7,117,1
	EQUAL? C,1 \?L2
	.DEBUG-LINE 7,117,1
	ICALL1 IQUEUE-CLEANUP
	.DEBUG-LINE 7,118,1
	JUMP ?L2
	.DEBUG-LINE 7,120,1
?L3:	GET IQUEUE,S >STACK
	EQUAL? STACK,-1 \?L9
	.DEBUG-LINE 7,121,1
	SUB S,1 >STACK
	GET IQUEUE,STACK >STACK
	CALL1 STACK >STACK
	BOR FIRED,STACK >FIRED
	.DEBUG-LINE 7,123,1
?L9:	GET IQUEUE,S >STACK
	GRTR? STACK,0 \?L1
	.DEBUG-LINE 7,124,1
	GET IQUEUE,S >STACK
	DEC 'STACK
	PUT IQUEUE,S,STACK
	.DEBUG-LINE 7,125,1
	GET IQUEUE,S >STACK
	ZERO? STACK \?L1
	.DEBUG-LINE 7,126,1
	SUB S,1 >STACK
	GET IQUEUE,STACK >STACK
	CALL1 STACK >STACK
	BOR FIRED,STACK >FIRED
	.DEBUG-LINE 7,127,1
	ICALL2 DEL-EVENT,S
	.DEBUG-LINE 7,128,1
	SET 'C,1
	JUMP ?L1
	.DEBUG-LINE 7,129,1
?L2:	RETURN FIRED
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"WAIT-TURNS","TURNS","T","INTERRUPT","ENDACT","BACKUP-WAIT"
	.FUNCT WAIT-TURNS,TURNS,T,INTERRUPT,ENDACT,BACKUP-WAIT
	.DEBUG-LINE 7,137,1
	SET 'BACKUP-WAIT,STANDARD-WAIT
	.DEBUG-LINE 7,138,1
	SET 'STANDARD-WAIT,TURNS
	.DEBUG-LINE 7,139,1
	SET 'T,1
	.DEBUG-LINE 7,141,1
?L1:	GETP HERE,P?ACTION >STACK
	CALL2 STACK,M-END >ENDACT
	.DEBUG-LINE 7,142,1
	CALL1 CLOCKER >INTERRUPT
	.DEBUG-LINE 7,143,1
	.DEBUG-LINE 7,144,1
	IGRTR? 'T,STANDARD-WAIT /?L5
	ZERO? ENDACT \?L5
	ZERO? INTERRUPT /?L1
	.DEBUG-LINE 7,147,1
?L5:	SET 'STANDARD-WAIT,BACKUP-WAIT
	.DEBUG-LINE 7,148,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"YOU-MASHER","WHOM"
	.FUNCT YOU-MASHER,WHOM
	.DEBUG-LINE 8,231,1
	PRINTI "I don't think "
	ZERO? WHOM /?L2
	PUSH WHOM
	JUMP ?L1
?L2:	PUSH PRSO
?L1:	ICALL2 PRINT-DEF,STACK
	PRINTR " would appreciate that."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"POINTLESS","VING","PREP","REV?","F","S"
	.FUNCT POINTLESS,VING,PREP,REV?,F,S
	.DEBUG-LINE 8,234,1
	ZERO? REV? /?L1
	.DEBUG-LINE 8,234,1
	SET 'F,PRSI
	.DEBUG-LINE 8,234,1
	SET 'S,PRSO
	JUMP ?L3
	.DEBUG-LINE 8,235,1
?L1:	SET 'F,PRSO
	.DEBUG-LINE 8,235,1
	SET 'S,PRSI
	.DEBUG-LINE 8,236,1
?L3:	PRINT VING
	.DEBUG-LINE 8,237,1
	ZERO? F /?L8
	.DEBUG-LINE 8,238,1
	PRINTC 32
	ICALL2 PRINT-DEF,F
	.DEBUG-LINE 8,239,1
	ZERO? PREP /?L8
	.DEBUG-LINE 8,240,1
	PRINTC 32
	PRINT PREP
	.DEBUG-LINE 8,241,1
	ZERO? S /?L8
	.DEBUG-LINE 8,241,1
	PRINTC 32
	ICALL2 PRINT-DEF,S
	.DEBUG-LINE 8,242,1
?L8:	PRINTR " doesn't seem like it will help."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"NOT-POSSIBLE","V"
	.FUNCT NOT-POSSIBLE,V
	.DEBUG-LINE 8,245,1
	SET 'P-CONT,0
	.DEBUG-LINE 8,246,1
	PRINTI "That's not something you can "
	PRINT V
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"RHETORICAL"
	.FUNCT RHETORICAL
	.DEBUG-LINE 8,249,1
	PRINTR "That was a rhetorical question."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"BE-SPECIFIC"
	.FUNCT BE-SPECIFIC
	.DEBUG-LINE 8,252,1
	SET 'P-CONT,0
	.DEBUG-LINE 8,253,1
	PRINTR "You'll have to be more specific."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"SILLY"
	.FUNCT SILLY
	.DEBUG-LINE 8,256,1
	SET 'P-CONT,0
	.DEBUG-LINE 8,257,1
	PRINTR "You must be joking."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"TSD"
	.FUNCT TSD
	.DEBUG-LINE 8,260,1
	SET 'P-CONT,0
	.DEBUG-LINE 8,261,1
	PRINTR "Not here, not now."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRE-REQUIRES-LIGHT"
	.FUNCT PRE-REQUIRES-LIGHT
	.DEBUG-LINE 8,267,1
	ZERO? HERE-LIT \FALSE
	.DEBUG-LINE 8,268,1
	SET 'P-CONT,0
	.DEBUG-LINE 8,269,1
	PRINTR "It's too dark to see anything here."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-LOOK"
	.FUNCT V-LOOK
	.DEBUG-LINE 8,274,1
	CALL DESCRIBE-ROOM,HERE,1 >STACK
	ZERO? STACK /FALSE
	.DEBUG-LINE 8,275,1
	CALL2 DESCRIBE-OBJECTS,HERE >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"DESCRIBE-ROOM","RM","LONG","P"
	.FUNCT DESCRIBE-ROOM,RM,LONG,P
	.DEBUG-LINE 8,297,1
	EQUAL? RM,HERE \?L1
	ZERO? HERE-LIT \?L1
	.DEBUG-LINE 8,298,1
	ICALL2 DARKNESS-F,M-LOOK
	.DEBUG-LINE 8,299,1
	RFALSE
	.DEBUG-LINE 8,301,1
?L1:	HLIGHT H-BOLD
	.DEBUG-LINE 8,302,1
	PRINTD RM
	CRLF
	.DEBUG-LINE 8,303,1
	HLIGHT H-NORMAL
	.DEBUG-LINE 8,305,1
	ZERO? LONG \?L8
	.DEBUG-LINE 8,306,1
	EQUAL? MODE,SUPERBRIEF /FALSE
	.DEBUG-LINE 8,308,1
	FSET? RM,TOUCHBIT \?L8
	EQUAL? MODE,VERBOSE /?L8
	.DEBUG-LINE 8,311,1
	GETP RM,P?ACTION >STACK
	ICALL2 STACK,M-FLASH
	.DEBUG-LINE 8,312,1
	RTRUE
	.DEBUG-LINE 8,315,1
?L8:	GETP RM,P?ACTION >STACK
	CALL2 STACK,M-LOOK >STACK
	ZERO? STACK \?L13
	.DEBUG-LINE 8,316,1
	GETP RM,P?LDESC >P
	ZERO? P /?L13
	.DEBUG-LINE 8,317,1
	PRINT P
	CRLF
	.DEBUG-LINE 8,319,1
?L13:	GETP RM,P?ACTION >STACK
	ICALL2 STACK,M-FLASH
	.DEBUG-LINE 8,321,1
	FSET RM,TOUCHBIT
	.DEBUG-LINE 8,322,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"DARKNESS-F","ARG"
	.FUNCT DARKNESS-F,ARG
	.DEBUG-LINE 8,327,1
	EQUAL? ARG,M-LOOK \?L1
	.DEBUG-LINE 8,328,1
	PRINTR "It is pitch black. You can't see a thing."
	.DEBUG-LINE 8,329,1
?L1:	EQUAL? ARG,M-SCOPE? \?L3
	.DEBUG-LINE 8,330,1
	GET SCOPE-CURRENT-STAGES,SCOPE-CURRENT-STAGE >STACK
	EQUAL? STACK,GENERIC-SCOPE-STAGE,INVENTORY-SCOPE-STAGE,GLOBALS-SCOPE-STAGE \FALSE
	RTRUE
	.DEBUG-LINE 8,331,1
?L3:	EQUAL? ARG,M-NOW-DARK \?L6
	.DEBUG-LINE 8,332,1
	PRINTR "You are plunged into darkness."
	.DEBUG-LINE 8,333,1
?L6:	EQUAL? ARG,M-NOW-LIT \FALSE
	.DEBUG-LINE 8,334,1
	PRINTI "You can see your surroundings now."
	CRLF
	CRLF
	.DEBUG-LINE 8,335,1
	.DEBUG-LINE 8,336,1
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"DESCRIBE-OBJECTS","RM","P","N","I"
	.FUNCT DESCRIBE-OBJECTS,RM,P,N,I
	.DEBUG-LINE 8,356,1
	FIRST? RM >I \?L16
	.DEBUG-LINE 8,358,1
?L1:	FSET? I,NDESCBIT /?L10
	.DEBUG-LINE 8,360,1
	GETP I,P?DESCFCN >P
	ZERO? P /?L6
	.DEBUG-LINE 8,361,1
	CRLF
	.DEBUG-LINE 8,363,1
	ICALL2 P,M-OBJDESC
	.DEBUG-LINE 8,364,1
	ICALL2 THIS-IS-IT,I
	JUMP ?L10
	.DEBUG-LINE 8,366,1
?L6:	FSET? I,TOUCHBIT /?L9
	GETP I,P?FDESC >P
	ZERO? P \?L8
?L9:	GETP I,P?LDESC >P
	ZERO? P /?L10
	.DEBUG-LINE 8,369,1
?L8:	CRLF
	PRINT P
	CRLF
	.DEBUG-LINE 8,370,1
	ICALL2 THIS-IS-IT,I
	.DEBUG-LINE 8,372,1
	CALL2 SEE-INSIDE?,I >STACK
	ZERO? STACK /?L10
	FIRST? I >STACK \?L10
	.DEBUG-LINE 8,373,1
	ICALL2 DESCRIBE-CONTENTS,I
?L10:	NEXT? I >I /?L1
	.DEBUG-LINE 8,375,1
	FIRST? RM >I \?L16
	.DEBUG-LINE 8,376,1
?L14:	CALL2 GENERIC-DESC?,I >STACK
	ZERO? STACK /?L17
	.DEBUG-LINE 8,377,1
	SET 'N,1
	.DEBUG-LINE 8,378,1
	JUMP ?L16
?L17:	NEXT? I >I /?L14
	.DEBUG-LINE 8,380,1
?L16:	ZERO? N /?L20
	.DEBUG-LINE 8,381,1
	CRLF
	PRINTI "There "
	.DEBUG-LINE 8,382,1
	ICALL LIST-OBJECTS,RM,GENERIC-DESC?,L-ISMANY
	.DEBUG-LINE 8,383,1
	PRINTI " here."
	CRLF
	.DEBUG-LINE 8,384,1
	ICALL CONTENTS-ARE-IT,RM,GENERIC-DESC?
	.DEBUG-LINE 8,386,1
?L20:	FIRST? RM >I \?L25
	.DEBUG-LINE 8,387,1
?L23:	CALL2 SEE-INSIDE?,I >STACK
	ZERO? STACK /?L26
	CALL2 GENERIC-DESC?,I >STACK
	ZERO? STACK /?L26
	FIRST? I >STACK \?L26
	.DEBUG-LINE 8,390,1
	ICALL2 DESCRIBE-CONTENTS,I
?L26:	NEXT? I >I /?L23
	.DEBUG-LINE 8,392,1
?L25:	SET 'N,0
	.DEBUG-LINE 8,393,1
	FIRST? RM >I \?L31
	.DEBUG-LINE 8,394,1
?L29:	CALL2 NPC-DESC?,I >STACK
	ZERO? STACK /?L32
	.DEBUG-LINE 8,395,1
	SET 'N,1
	.DEBUG-LINE 8,396,1
	JUMP ?L31
?L32:	NEXT? I >I /?L29
	.DEBUG-LINE 8,398,1
?L31:	ZERO? N /FALSE
	.DEBUG-LINE 8,399,1
	CRLF
	.DEBUG-LINE 8,400,1
	ICALL LIST-OBJECTS,RM,NPC-DESC?,66
	.DEBUG-LINE 8,401,1
	PRINTI " here."
	CRLF
	.DEBUG-LINE 8,402,1
	CALL CONTENTS-ARE-IT,RM,NPC-DESC? >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GENERIC-DESC?","OBJ","P"
	.FUNCT GENERIC-DESC?,OBJ,P
	.DEBUG-LINE 8,405,1
	EQUAL? OBJ,WINNER /FALSE
	FSET? OBJ,NDESCBIT /FALSE
	FSET? OBJ,PERSONBIT /FALSE
	FSET? OBJ,TOUCHBIT /?L3
	GETP OBJ,P?FDESC >STACK
	ZERO? STACK \FALSE
?L3:	GETP OBJ,P?LDESC >STACK
	ZERO? STACK \FALSE
	GETP OBJ,P?DESCFCN >P
	ZERO? P /TRUE
	CALL2 P,M-OBJDESC? >STACK
	ZERO? STACK /TRUE
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"NPC-DESC?","OBJ","P"
	.FUNCT NPC-DESC?,OBJ,P
	.DEBUG-LINE 8,414,1
	FSET? OBJ,PERSONBIT \FALSE
	EQUAL? OBJ,WINNER /FALSE
	FSET? OBJ,NDESCBIT /FALSE
	FSET? OBJ,TOUCHBIT /?L3
	GETP OBJ,P?FDESC >STACK
	ZERO? STACK \FALSE
?L3:	GETP OBJ,P?LDESC >STACK
	ZERO? STACK \FALSE
	GETP OBJ,P?DESCFCN >P
	ZERO? P /TRUE
	CALL2 P,M-OBJDESC? >STACK
	ZERO? STACK /TRUE
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRINT-CAP-STR","S","MAX","C","I","?TMP"
	.FUNCT PRINT-CAP-STR,S,MAX,C,I,?TMP
	.DEBUG-LINE 8,432,1
	DIROUT 3,TEMPTABLE
	.DEBUG-LINE 8,433,1
	PRINT S
	.DEBUG-LINE 8,434,1
	DIROUT -3
	.DEBUG-LINE 8,435,1
	GET TEMPTABLE,0 >MAX
	.DEBUG-LINE 8,436,1
	ZERO? MAX /FALSE
	.DEBUG-LINE 8,437,1
	INC 'MAX
	.DEBUG-LINE 8,438,1
	SET 'I,2
	.DEBUG-LINE 8,439,1
?L3:	GETB TEMPTABLE,I >C
	.DEBUG-LINE 8,440,1
	EQUAL? I,2 \?L12
	.DEBUG-LINE 8,440,1
	SET '?TMP,C
	.DEBUG-LINE 8,426,1
	LESS? ?TMP,97 /?L10
	GRTR? ?TMP,122 /?L10
	.DEBUG-LINE 8,427,1
	SUB ?TMP,32 >C
	JUMP ?L12
	.DEBUG-LINE 8,428,1
?L10:	SET 'C,?TMP
	.DEBUG-LINE 8,441,1
?L12:	PRINTC C
	IGRTR? 'I,MAX \?L3
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRINT-CAP-OBJ","OBJ","MAX","C","I","?TMP"
	.FUNCT PRINT-CAP-OBJ,OBJ,MAX,C,I,?TMP
	.DEBUG-LINE 8,445,1
	DIROUT 3,TEMPTABLE
	.DEBUG-LINE 8,446,1
	PRINTD OBJ
	.DEBUG-LINE 8,447,1
	DIROUT -3
	.DEBUG-LINE 8,448,1
	GET TEMPTABLE,0 >MAX
	.DEBUG-LINE 8,449,1
	ZERO? MAX /FALSE
	.DEBUG-LINE 8,450,1
	INC 'MAX
	.DEBUG-LINE 8,451,1
	SET 'I,2
	.DEBUG-LINE 8,452,1
?L3:	GETB TEMPTABLE,I >C
	.DEBUG-LINE 8,453,1
	EQUAL? I,2 \?L12
	.DEBUG-LINE 8,453,1
	SET '?TMP,C
	.DEBUG-LINE 8,426,1
	LESS? ?TMP,97 /?L10
	GRTR? ?TMP,122 /?L10
	.DEBUG-LINE 8,427,1
	SUB ?TMP,32 >C
	JUMP ?L12
	.DEBUG-LINE 8,428,1
?L10:	SET 'C,?TMP
	.DEBUG-LINE 8,454,1
?L12:	PRINTC C
	IGRTR? 'I,MAX \?L3
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRINT-INDEF","OBJ","A"
	.FUNCT PRINT-INDEF,OBJ,A
	.DEBUG-LINE 8,458,1
	FSET? OBJ,NARTICLEBIT /?L6
	.DEBUG-LINE 8,459,1
	GETP OBJ,P?ARTICLE >A
	ZERO? A /?L3
	.DEBUG-LINE 8,459,1
	PRINT A
	.DEBUG-LINE 8,459,1
	PRINTC 32
	JUMP ?L6
	.DEBUG-LINE 8,460,1
?L3:	FSET? OBJ,PLURALBIT \?L4
	.DEBUG-LINE 8,460,1
	PRINTI "some "
	JUMP ?L6
	.DEBUG-LINE 8,461,1
?L4:	FSET? OBJ,VOWELBIT \?L5
	.DEBUG-LINE 8,461,1
	PRINTI "an "
	JUMP ?L6
	.DEBUG-LINE 8,462,1
?L5:	PRINTI "a "
	.DEBUG-LINE 8,463,1
?L6:	PRINTD OBJ
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRINT-DEF","OBJ"
	.FUNCT PRINT-DEF,OBJ
	.DEBUG-LINE 8,467,1
	FSET? OBJ,NARTICLEBIT /?L1
	.DEBUG-LINE 8,467,1
	PRINTI "the "
	.DEBUG-LINE 8,468,1
?L1:	PRINTD OBJ
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRINT-CINDEF","OBJ","A"
	.FUNCT PRINT-CINDEF,OBJ,A
	.DEBUG-LINE 8,472,1
	FSET? OBJ,NARTICLEBIT \?L1
	.DEBUG-LINE 8,473,1
	ICALL2 PRINT-CAP-OBJ,OBJ
	.DEBUG-LINE 8,474,1
	RTRUE
	.DEBUG-LINE 8,475,1
?L1:	GETP OBJ,P?ARTICLE >A
	ZERO? A /?L4
	.DEBUG-LINE 8,475,1
	ICALL2 PRINT-CAP-STR,A
	.DEBUG-LINE 8,475,1
	PRINTC 32
	JUMP ?L8
	.DEBUG-LINE 8,476,1
?L4:	FSET? OBJ,PLURALBIT \?L6
	.DEBUG-LINE 8,476,1
	PRINTI "Some "
	JUMP ?L8
	.DEBUG-LINE 8,477,1
?L6:	FSET? OBJ,VOWELBIT \?L7
	.DEBUG-LINE 8,477,1
	PRINTI "An "
	JUMP ?L8
	.DEBUG-LINE 8,478,1
?L7:	PRINTI "A "
	.DEBUG-LINE 8,479,1
?L8:	PRINTD OBJ
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRINT-CDEF","OBJ"
	.FUNCT PRINT-CDEF,OBJ
	.DEBUG-LINE 8,483,1
	FSET? OBJ,NARTICLEBIT \?L1
	.DEBUG-LINE 8,484,1
	ICALL2 PRINT-CAP-OBJ,OBJ
	.DEBUG-LINE 8,485,1
	RTRUE
	.DEBUG-LINE 8,486,1
?L1:	PRINTI "The "
	PRINTD OBJ
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"DESCRIBE-CONTENTS","OBJ"
	.FUNCT DESCRIBE-CONTENTS,OBJ
	.DEBUG-LINE 8,490,1
	FSET? OBJ,SURFACEBIT \?L1
	.DEBUG-LINE 8,490,1
	PRINTI "On"
	JUMP ?L3
	.DEBUG-LINE 8,491,1
?L1:	PRINTI "In"
	.DEBUG-LINE 8,492,1
?L3:	PRINTI " "
	ICALL2 PRINT-DEF,OBJ
	PRINTI " "
	.DEBUG-LINE 8,493,1
	ICALL LIST-OBJECTS,OBJ,0,L-ISARE
	.DEBUG-LINE 8,494,1
	PRINTI "."
	CRLF
	.DEBUG-LINE 8,495,1
	CALL2 CONTENTS-ARE-IT,OBJ >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"INV-DESCRIBE-CONTENTS","OBJ","N","F","I"
	.FUNCT INV-DESCRIBE-CONTENTS,OBJ,N,F,I
	.DEBUG-LINE 8,500,1
	FSET? OBJ,SURFACEBIT \?L1
	.DEBUG-LINE 8,500,1
	PRINTI " (holding "
	JUMP ?L3
	.DEBUG-LINE 8,501,1
?L1:	PRINTI " (containing "
	.DEBUG-LINE 8,502,1
?L3:	FIRST? OBJ >F /?L5
	.DEBUG-LINE 8,504,1
	PRINTI "nothing)"
	.DEBUG-LINE 8,505,1
	RTRUE
	.DEBUG-LINE 8,506,1
?L5:	FIRST? OBJ >I \?L10
	.DEBUG-LINE 8,507,1
?L8:	INC 'N
	NEXT? I >I /?L8
	.DEBUG-LINE 8,508,1
?L10:	EQUAL? N,1 \?L11
	.DEBUG-LINE 8,509,1
	ICALL2 PRINT-INDEF,F
	JUMP ?L18
	.DEBUG-LINE 8,510,1
?L11:	EQUAL? N,2 \?L13
	.DEBUG-LINE 8,511,1
	ICALL2 PRINT-INDEF,F
	PRINTI " and "
	NEXT? F >STACK /?L14
?L14:	ICALL2 PRINT-INDEF,STACK
	JUMP ?L18
	.DEBUG-LINE 8,513,1
?L13:	FIRST? OBJ >I \?L18
	.DEBUG-LINE 8,514,1
?L16:	ICALL2 PRINT-INDEF,I
	.DEBUG-LINE 8,515,1
	DEC 'N
	.DEBUG-LINE 8,516,1
	ZERO? N /?L22
	.DEBUG-LINE 8,517,1
	EQUAL? N,1 \?L21
	.DEBUG-LINE 8,517,1
	PRINTI ", and "
	JUMP ?L22
	.DEBUG-LINE 8,518,1
?L21:	PRINTI ", "
?L22:	NEXT? I >I /?L16
	.DEBUG-LINE 8,519,1
?L18:	PRINTI ")"
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"LIST-OBJECTS","O","FILTER","FLAGS","N","F","S","MAX","J","I"
	.FUNCT LIST-OBJECTS,O,FILTER,FLAGS,N,F,S,MAX,J,I
	.DEBUG-LINE 8,569,1
	BTST FLAGS,L-CAP \?L1
	.DEBUG-LINE 8,570,1
	BOR FLAGS,L-SUFFIX >FLAGS
	.DEBUG-LINE 8,571,1
?L1:	BTST FLAGS,L-SUFFIX /?L6
	BTST FLAGS,L-ISMANY \?L4
	.DEBUG-LINE 8,572,1
?L6:	BOR FLAGS,L-ISARE >FLAGS
	.DEBUG-LINE 8,573,1
?L4:	BTST FLAGS,L-PRSTABLE \?L8
	.DEBUG-LINE 8,574,1
	GETB O,0 >MAX
	ZERO? MAX /?L27
	.DEBUG-LINE 8,575,1
	SET 'I,1
	.DEBUG-LINE 8,576,1
?L12:	GET O,I >J
	.DEBUG-LINE 8,577,1
	ZERO? FILTER /?L17
	CALL2 FILTER,J >STACK
	ZERO? STACK /?L15
	.DEBUG-LINE 8,578,1
?L17:	ZERO? F \?L18
	.DEBUG-LINE 8,578,1
	SET 'F,J
	JUMP ?L20
	.DEBUG-LINE 8,579,1
?L18:	ZERO? S \?L20
	.DEBUG-LINE 8,579,1
	SET 'S,J
	.DEBUG-LINE 8,580,1
?L20:	INC 'N
?L15:	IGRTR? 'I,MAX \?L12
	JUMP ?L27
	.DEBUG-LINE 8,582,1
?L8:	FIRST? O >I \?L27
	.DEBUG-LINE 8,583,1
?L25:	ZERO? FILTER /?L30
	CALL2 FILTER,I >STACK
	ZERO? STACK /?L28
	.DEBUG-LINE 8,584,1
?L30:	ZERO? F \?L31
	.DEBUG-LINE 8,584,1
	SET 'F,I
	JUMP ?L33
	.DEBUG-LINE 8,585,1
?L31:	ZERO? S \?L33
	.DEBUG-LINE 8,585,1
	SET 'S,I
	.DEBUG-LINE 8,586,1
?L33:	INC 'N
?L28:	NEXT? I >I /?L25
	.DEBUG-LINE 8,587,1
?L27:	ZERO? N \?L36
	.DEBUG-LINE 8,588,1
	BTST FLAGS,L-CAP \?L38
	.DEBUG-LINE 8,589,1
	PRINTI "Nothing is"
	JUMP ?L117
	.DEBUG-LINE 8,590,1
?L38:	BTST FLAGS,L-SUFFIX \?L40
	.DEBUG-LINE 8,591,1
	PRINTI "nothing is"
	JUMP ?L117
	.DEBUG-LINE 8,592,1
?L40:	BTST FLAGS,L-ISARE \?L41
	.DEBUG-LINE 8,593,1
	PRINTI "is nothing"
	JUMP ?L117
	.DEBUG-LINE 8,594,1
?L41:	PRINTI "nothing"
	JUMP ?L117
	.DEBUG-LINE 8,595,1
?L36:	EQUAL? N,1 \?L43
	.DEBUG-LINE 8,596,1
	BTST FLAGS,L-CAP \?L44
	.DEBUG-LINE 8,597,1
	ICALL LIST-OBJECTS-PRINT,F,FLAGS,1
	.DEBUG-LINE 8,264,1
	FSET? F,PLURALBIT \?L46
	.DEBUG-LINE 8,598,1
	PRINTI " are"
	JUMP ?L117
	.DEBUG-LINE 8,598,1
?L46:	PRINTI " is"
	JUMP ?L117
	.DEBUG-LINE 8,599,1
?L44:	BTST FLAGS,L-SUFFIX \?L49
	.DEBUG-LINE 8,600,1
	ICALL LIST-OBJECTS-PRINT,F,FLAGS,0
	.DEBUG-LINE 8,264,1
	FSET? F,PLURALBIT \?L50
	.DEBUG-LINE 8,601,1
	PRINTI " are"
	JUMP ?L117
	.DEBUG-LINE 8,601,1
?L50:	PRINTI " is"
	JUMP ?L117
	.DEBUG-LINE 8,603,1
?L49:	BTST FLAGS,L-ISARE \?L58
	.DEBUG-LINE 8,264,1
	FSET? F,PLURALBIT \?L56
	.DEBUG-LINE 8,604,1
	PRINTI "are "
	JUMP ?L58
	.DEBUG-LINE 8,604,1
?L56:	PRINTI "is "
	.DEBUG-LINE 8,605,1
?L58:	ICALL LIST-OBJECTS-PRINT,F,FLAGS,0
	JUMP ?L117
	.DEBUG-LINE 8,606,1
?L43:	EQUAL? N,2 \?L59
	.DEBUG-LINE 8,607,1
	BTST FLAGS,L-ISARE \?L65
	BTST FLAGS,L-SUFFIX /?L65
	.DEBUG-LINE 8,609,1
	BTST FLAGS,L-ISMANY \?L64
	FSET? F,PLURALBIT \?L62
	.DEBUG-LINE 8,611,1
?L64:	PRINTI "are "
	JUMP ?L65
	.DEBUG-LINE 8,612,1
?L62:	PRINTI "is "
	.DEBUG-LINE 8,613,1
?L65:	BAND FLAGS,L-CAP >STACK
	ICALL LIST-OBJECTS-PRINT,F,FLAGS,STACK
	.DEBUG-LINE 8,614,1
	BTST FLAGS,L-OR \?L67
	.DEBUG-LINE 8,614,1
	PRINTI " or "
	JUMP ?L69
	.DEBUG-LINE 8,614,1
?L67:	PRINTI " and "
	.DEBUG-LINE 8,615,1
?L69:	ICALL LIST-OBJECTS-PRINT,S,FLAGS,0
	.DEBUG-LINE 8,616,1
	BTST FLAGS,L-SUFFIX \?L117
	.DEBUG-LINE 8,616,1
	PRINTI " are"
	JUMP ?L117
	.DEBUG-LINE 8,618,1
?L59:	BTST FLAGS,L-ISARE \?L78
	BTST FLAGS,L-SUFFIX /?L78
	.DEBUG-LINE 8,620,1
	BTST FLAGS,L-ISMANY \?L77
	FSET? F,PLURALBIT \?L75
	.DEBUG-LINE 8,622,1
?L77:	PRINTI "are "
	JUMP ?L78
	.DEBUG-LINE 8,623,1
?L75:	PRINTI "is "
	.DEBUG-LINE 8,624,1
?L78:	BTST FLAGS,L-PRSTABLE \?L80
	.DEBUG-LINE 8,625,1
	SET 'I,1
	.DEBUG-LINE 8,626,1
?L82:	GET O,I >J
	.DEBUG-LINE 8,627,1
	ZERO? FILTER /?L87
	CALL2 FILTER,J >STACK
	ZERO? STACK /?L97
	.DEBUG-LINE 8,628,1
?L87:	BTST FLAGS,L-CAP \?L88
	EQUAL? I,1 \?L88
	.DEBUG-LINE 8,629,1
	ICALL LIST-OBJECTS-PRINT,J,FLAGS,1
	JUMP ?L90
	.DEBUG-LINE 8,631,1
?L88:	ICALL LIST-OBJECTS-PRINT,J,FLAGS,0
	.DEBUG-LINE 8,632,1
?L90:	DEC 'N
	.DEBUG-LINE 8,633,1
	ZERO? N /?L97
	.DEBUG-LINE 8,634,1
	EQUAL? N,1 \?L93
	.DEBUG-LINE 8,635,1
	BTST FLAGS,L-OR \?L94
	.DEBUG-LINE 8,635,1
	PRINTI ", or "
	JUMP ?L97
	.DEBUG-LINE 8,636,1
?L94:	PRINTI ", and "
	JUMP ?L97
	.DEBUG-LINE 8,637,1
?L93:	PRINTI ", "
?L97:	IGRTR? 'I,MAX \?L82
	JUMP ?L102
	.DEBUG-LINE 8,639,1
?L80:	FIRST? O >I \?L102
	.DEBUG-LINE 8,640,1
?L100:	ZERO? FILTER /?L105
	CALL2 FILTER,I >STACK
	ZERO? STACK /?L115
	.DEBUG-LINE 8,641,1
?L105:	BTST FLAGS,L-CAP \?L106
	EQUAL? I,F \?L106
	.DEBUG-LINE 8,642,1
	ICALL LIST-OBJECTS-PRINT,I,FLAGS,1
	JUMP ?L108
	.DEBUG-LINE 8,644,1
?L106:	ICALL LIST-OBJECTS-PRINT,I,FLAGS,0
	.DEBUG-LINE 8,645,1
?L108:	DEC 'N
	.DEBUG-LINE 8,646,1
	ZERO? N /?L115
	.DEBUG-LINE 8,647,1
	EQUAL? N,1 \?L111
	.DEBUG-LINE 8,648,1
	BTST FLAGS,L-OR \?L112
	.DEBUG-LINE 8,648,1
	PRINTI ", or "
	JUMP ?L115
	.DEBUG-LINE 8,649,1
?L112:	PRINTI ", and "
	JUMP ?L115
	.DEBUG-LINE 8,650,1
?L111:	PRINTI ", "
?L115:	NEXT? I >I /?L100
	.DEBUG-LINE 8,651,1
?L102:	BTST FLAGS,L-SUFFIX \?L117
	.DEBUG-LINE 8,651,1
	PRINTI " are"
	.DEBUG-LINE 8,652,1
?L117:	RETURN N
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"LIST-OBJECTS-PRINT","O","FLAGS","CAP?"
	.FUNCT LIST-OBJECTS-PRINT,O,FLAGS,CAP?
	.DEBUG-LINE 8,655,1
	EQUAL? O,PSEUDO-OBJECT \?L1
	BTST FLAGS,L-SCENERY \?L1
	.DEBUG-LINE 8,657,1
	ZERO? CAP? /?L3
	.DEBUG-LINE 8,657,1
	PRINTC 83
	JUMP ?L5
	.DEBUG-LINE 8,657,1
?L3:	PRINTC 115
	.DEBUG-LINE 8,658,1
?L5:	PRINTI "ome scenery"
	.DEBUG-LINE 8,659,1
	EQUAL? PSEUDO-LOC,HERE /TRUE
	.DEBUG-LINE 8,660,1
	PRINTI " in "
	PRINTD PSEUDO-LOC
	.DEBUG-LINE 8,661,1
	RTRUE
	.DEBUG-LINE 8,662,1
?L1:	ZERO? CAP? /?L9
	.DEBUG-LINE 8,663,1
	BTST FLAGS,L-THE \?L10
	.DEBUG-LINE 8,663,1
	ICALL2 PRINT-CDEF,O
	RTRUE
	.DEBUG-LINE 8,664,1
?L10:	ICALL2 PRINT-CINDEF,O
	RTRUE
	.DEBUG-LINE 8,666,1
?L9:	BTST FLAGS,L-THE \?L14
	.DEBUG-LINE 8,666,1
	ICALL2 PRINT-DEF,O
	RTRUE
	.DEBUG-LINE 8,667,1
?L14:	ICALL2 PRINT-INDEF,O
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-WALK","PT","PTS","RM","D"
	.FUNCT V-WALK,PT,PTS,RM,D
	.DEBUG-LINE 8,717,1
	ZERO? PRSO-DIR \?L1
	.DEBUG-LINE 8,718,1
	PRINTR "You must give a direction to walk in."
	.DEBUG-LINE 8,719,1
?L1:	GETPT HERE,PRSO >PT
	ZERO? PT \?L3
	.DEBUG-LINE 8,720,1
	ZERO? HERE-LIT \?L6
	CALL2 DARKNESS-F,M-DARK-CANT-GO >STACK
	ZERO? STACK \?L4
	.DEBUG-LINE 8,721,1
?L6:	PRINT CANT-GO-THAT-WAY
	CRLF
	.DEBUG-LINE 8,722,1
?L4:	SET 'P-CONT,0
	.DEBUG-LINE 8,723,1
	RTRUE
	.DEBUG-LINE 8,724,1
?L3:	PTSIZE PT >PTS
	EQUAL? PTS,UEXIT \?L8
	.DEBUG-LINE 8,725,1
	GET PT,EXIT-RM >RM
	JUMP ?L27
	.DEBUG-LINE 8,726,1
?L8:	EQUAL? PTS,NEXIT \?L9
	.DEBUG-LINE 8,727,1
	GET PT,NEXIT-MSG >STACK
	PRINT STACK
	CRLF
	.DEBUG-LINE 8,728,1
	SET 'P-CONT,0
	.DEBUG-LINE 8,729,1
	RTRUE
	.DEBUG-LINE 8,730,1
?L9:	EQUAL? PTS,FEXIT \?L10
	.DEBUG-LINE 8,731,1
	GET PT,FEXIT-RTN >STACK
	CALL1 STACK >RM
	ZERO? RM \?L27
	.DEBUG-LINE 8,732,1
	SET 'P-CONT,0
	.DEBUG-LINE 8,733,1
	RTRUE
	.DEBUG-LINE 8,734,1
?L10:	EQUAL? PTS,CEXIT \?L14
	.DEBUG-LINE 8,735,1
	GETB PT,CEXIT-VAR >STACK
	VALUE STACK >STACK
	ZERO? STACK /?L15
	.DEBUG-LINE 8,736,1
	GET PT,EXIT-RM >RM
	JUMP ?L27
	.DEBUG-LINE 8,738,1
?L15:	GET PT,CEXIT-MSG >RM
	ZERO? RM /?L18
	.DEBUG-LINE 8,739,1
	PRINT RM
	CRLF
	JUMP ?L21
	.DEBUG-LINE 8,740,1
?L18:	ZERO? HERE-LIT \?L20
	CALL2 DARKNESS-F,M-DARK-CANT-GO >STACK
	ZERO? STACK \?L21
	.DEBUG-LINE 8,743,1
?L20:	PRINT CANT-GO-THAT-WAY
	CRLF
	.DEBUG-LINE 8,744,1
?L21:	SET 'P-CONT,0
	.DEBUG-LINE 8,745,1
	RTRUE
	.DEBUG-LINE 8,746,1
?L14:	EQUAL? PTS,DEXIT \?L22
	.DEBUG-LINE 8,747,1
	GET PT,DEXIT-OBJ >D
	FSET? D,OPENBIT \?L23
	.DEBUG-LINE 8,748,1
	GET PT,EXIT-RM >RM
	JUMP ?L27
	.DEBUG-LINE 8,749,1
?L23:	GET PT,DEXIT-MSG >RM
	ZERO? RM /?L25
	.DEBUG-LINE 8,750,1
	PRINT RM
	CRLF
	.DEBUG-LINE 8,751,1
	SET 'P-CONT,0
	.DEBUG-LINE 8,752,1
	RTRUE
	.DEBUG-LINE 8,754,1
?L25:	ICALL2 THIS-IS-IT,D
	.DEBUG-LINE 8,755,1
	PRINTI "You'll have to open "
	ICALL2 PRINT-DEF,D
	PRINTI " first."
	CRLF
	.DEBUG-LINE 8,757,1
	SET 'P-CONT,0
	.DEBUG-LINE 8,758,1
	RTRUE
	.DEBUG-LINE 8,760,1
?L22:	PRINTI "Broken exit ("
	PRINTN PTS
	PRINTI ")."
	CRLF
	.DEBUG-LINE 8,761,1
	SET 'P-CONT,0
	.DEBUG-LINE 8,762,1
	RTRUE
	.DEBUG-LINE 8,763,1
?L27:	CALL2 GOTO,RM >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-ENTER"
	.FUNCT V-ENTER
	.DEBUG-LINE 8,766,1
	FSET? PRSO,DOORBIT \?L1
	.DEBUG-LINE 8,767,1
	CALL2 DOOR-DIR,PRSO >STACK
	ICALL2 DO-WALK,STACK
	.DEBUG-LINE 8,768,1
	RTRUE
	.DEBUG-LINE 8,770,1
?L1:	ICALL2 NOT-POSSIBLE,STR?6
	.DEBUG-LINE 8,770,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"DO-WALK","DIR","ORIG?PRSO-DIR","?RESULT"
	.FUNCT DO-WALK,DIR,ORIG?PRSO-DIR,?RESULT
	.DEBUG-LINE 8,774,1
	SET 'ORIG?PRSO-DIR,PRSO-DIR
	.DEBUG-LINE 8,774,1
	SET 'PRSO-DIR,1
	.DEBUG-LINE 8,774,1
	CALL PERFORM,V?WALK,DIR >?RESULT
	.DEBUG-LINE 8,774,1
	SET 'PRSO-DIR,ORIG?PRSO-DIR
	.DEBUG-LINE 8,774,1
	RETURN ?RESULT
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"DOOR-DIR","DOOR","D","PT"
	.FUNCT DOOR-DIR,DOOR,D,PT
	.DEBUG-LINE 8,781,1
	SET 'D,64
?L1:	DLESS? 'D,P?DOWN /FALSE
	GETPT HERE,D >PT
	ZERO? PT /?L1
	.DEBUG-LINE 8,782,1
	PTSIZE PT >STACK
	EQUAL? STACK,DEXIT \?L1
	GET PT,DEXIT-OBJ >STACK
	EQUAL? STACK,DOOR \?L1
	.DEBUG-LINE 8,784,1
	RETURN D
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"OTHER-SIDE","DOOR","D"
	.FUNCT OTHER-SIDE,DOOR,D
	.DEBUG-LINE 8,792,1
	CALL2 DOOR-DIR,DOOR >D
	ZERO? D /FALSE
	.DEBUG-LINE 8,793,1
	GETPT HERE,D >STACK
	GET STACK,EXIT-RM >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-QUIT"
	.FUNCT V-QUIT
	.DEBUG-LINE 8,797,1
	PRINTI "Are you sure you want to quit?"
	.DEBUG-LINE 8,798,1
	CALL1 YES? >STACK
	ZERO? STACK /?L1
	.DEBUG-LINE 8,799,1
	CRLF
	PRINTI "Thanks for playing."
	CRLF
	.DEBUG-LINE 8,800,1
	QUIT
	.DEBUG-LINE 8,802,1
?L1:	CRLF
	PRINTR "OK - not quitting."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-EXAMINE","P","N"
	.FUNCT V-EXAMINE,P,N
	SET 'N,0
	.DEBUG-LINE 8,805,1
	GETP PRSO,P?TEXT >P
	ZERO? P \?L3
	GETP PRSO,P?LDESC >P
	ZERO? P /?L1
	.DEBUG-LINE 8,807,1
?L3:	PRINT P
	CRLF
	.DEBUG-LINE 8,808,1
	SET 'N,1
	.DEBUG-LINE 8,809,1
?L1:	FSET? PRSO,OPENABLEBIT \?L5
	.DEBUG-LINE 8,810,1
	ICALL2 PRINT-CDEF,PRSO
	PRINTI " is "
	.DEBUG-LINE 8,811,1
	FSET? PRSO,OPENBIT \?L7
	.DEBUG-LINE 8,811,1
	PRINTI "open."
	JUMP ?L9
	.DEBUG-LINE 8,812,1
?L7:	PRINTI "closed."
	.DEBUG-LINE 8,813,1
?L9:	CRLF
	.DEBUG-LINE 8,814,1
	SET 'N,1
	.DEBUG-LINE 8,815,1
?L5:	FIRST? PRSO >STACK \?L11
	CALL2 SEE-INSIDE?,PRSO >STACK
	ZERO? STACK /?L11
	.DEBUG-LINE 8,816,1
	ICALL2 DESCRIBE-CONTENTS,PRSO
	.DEBUG-LINE 8,817,1
	SET 'N,1
	.DEBUG-LINE 8,818,1
?L11:	ZERO? N \FALSE
	.DEBUG-LINE 8,819,1
	PRINTI "You see nothing special about "
	ICALL2 PRINT-DEF,PRSO
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-LOOK-UNDER"
	.FUNCT V-LOOK-UNDER
	.DEBUG-LINE 8,822,1
	EQUAL? PRSO,WINNER /?L1
	FSET? PRSO,PERSONBIT \?L1
	.DEBUG-LINE 8,823,1
	ICALL1 YOU-MASHER
	.DEBUG-LINE 8,824,1
	RTRUE
	.DEBUG-LINE 8,825,1
?L1:	ZERO? HERE-LIT \?L3
	.DEBUG-LINE 8,825,1
	PRINTR "It's too dark."
	.DEBUG-LINE 8,826,1
?L3:	PRINTR "You can't see anything of interest."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-SEARCH"
	.FUNCT V-SEARCH
	.DEBUG-LINE 8,829,1
	EQUAL? PRSO,WINNER \?L1
	.DEBUG-LINE 8,829,1
	CALL2 PERFORM,V?INVENTORY >STACK
	RSTACK
	.DEBUG-LINE 8,830,1
?L1:	FSET? PRSO,PERSONBIT \?L3
	.DEBUG-LINE 8,830,1
	CALL1 YOU-MASHER >STACK
	RSTACK
	.DEBUG-LINE 8,831,1
?L3:	FSET? PRSO,CONTBIT /?L4
	.DEBUG-LINE 8,831,1
	CALL2 NOT-POSSIBLE,STR?7 >STACK
	RSTACK
	.DEBUG-LINE 8,832,1
?L4:	FSET? PRSO,OPENABLEBIT \?L5
	CALL2 SEE-INSIDE?,PRSO >STACK
	ZERO? STACK \?L5
	.DEBUG-LINE 8,833,1
	ICALL2 PRINT-CDEF,PRSO
	.DEBUG-LINE 8,264,1
	FSET? PRSO,PLURALBIT \?L6
	PUSH STR?8
	JUMP ?L8
?L6:	PUSH STR?9
?L8:	PRINT STACK
	PRINTR " closed."
	.DEBUG-LINE 8,834,1
?L5:	FIRST? PRSO >STACK /?L9
	.DEBUG-LINE 8,835,1
	ICALL2 PRINT-CDEF,PRSO
	.DEBUG-LINE 8,264,1
	FSET? PRSO,PLURALBIT \?L10
	PUSH STR?8
	JUMP ?L12
?L10:	PUSH STR?9
?L12:	PRINT STACK
	PRINTR " empty."
	.DEBUG-LINE 8,836,1
?L9:	CALL2 DESCRIBE-CONTENTS,PRSO >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-INVENTORY","I"
	.FUNCT V-INVENTORY,I
	.DEBUG-LINE 8,840,1
	ZERO? HERE-LIT /?L1
	.DEBUG-LINE 8,841,1
	FIRST? WINNER >STACK \?L3
	.DEBUG-LINE 8,842,1
	PRINTI "You are carrying:"
	CRLF
	.DEBUG-LINE 8,843,1
	FIRST? WINNER >I \TRUE
	.DEBUG-LINE 8,844,1
?L5:	PRINTI "   "
	ICALL2 PRINT-INDEF,I
	.DEBUG-LINE 8,845,1
	FSET? I,WORNBIT \?L8
	.DEBUG-LINE 8,845,1
	PRINTI " (worn)"
	.DEBUG-LINE 8,846,1
?L8:	FSET? I,LIGHTBIT \?L10
	.DEBUG-LINE 8,846,1
	PRINTI " (providing light)"
	.DEBUG-LINE 8,847,1
?L10:	FSET? I,CONTBIT \?L20
	.DEBUG-LINE 8,848,1
	FSET? I,OPENABLEBIT \?L18
	.DEBUG-LINE 8,849,1
	FSET? I,OPENBIT \?L16
	.DEBUG-LINE 8,849,1
	PRINTI " (open)"
	JUMP ?L18
	.DEBUG-LINE 8,850,1
?L16:	PRINTI " (closed)"
	.DEBUG-LINE 8,851,1
?L18:	CALL2 SEE-INSIDE?,I >STACK
	ZERO? STACK /?L20
	.DEBUG-LINE 8,851,1
	ICALL2 INV-DESCRIBE-CONTENTS,I
	.DEBUG-LINE 8,852,1
?L20:	CRLF
	NEXT? I >I /?L5
	RTRUE
	.DEBUG-LINE 8,854,1
?L3:	PRINTR "You are empty-handed."
	.DEBUG-LINE 8,856,1
?L1:	PRINTR "It's too dark to see what you're carrying."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-TAKE"
	.FUNCT V-TAKE
	.DEBUG-LINE 8,859,1
	ICALL2 TRY-TAKE,PRSO
	.DEBUG-LINE 8,860,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"TRY-TAKE","OBJ","SILENT","HOLDER"
	.FUNCT TRY-TAKE,OBJ,SILENT,HOLDER
	.DEBUG-LINE 8,872,1
	EQUAL? OBJ,WINNER \?L1
	.DEBUG-LINE 8,873,1
	ZERO? SILENT \FALSE
	.DEBUG-LINE 8,874,1
	EQUAL? P-V-WORD,W?GET \?L5
	.DEBUG-LINE 8,874,1
	PRINTI "Not quite."
	CRLF
	RFALSE
	.DEBUG-LINE 8,875,1
?L5:	EQUAL? P-V-WORD,W?TAKE,W?GRAB \?L6
	.DEBUG-LINE 8,875,1
	ICALL1 TSD
	RFALSE
	.DEBUG-LINE 8,876,1
?L6:	EQUAL? P-V-WORD,W?PICK \?L7
	.DEBUG-LINE 8,876,1
	PRINTI "You aren't my type."
	CRLF
	RFALSE
	.DEBUG-LINE 8,877,1
?L7:	ICALL1 SILLY
	.DEBUG-LINE 8,878,1
	RFALSE
	.DEBUG-LINE 8,879,1
?L1:	FSET? OBJ,PERSONBIT \?L9
	.DEBUG-LINE 8,880,1
	ZERO? SILENT \FALSE
	.DEBUG-LINE 8,880,1
	ICALL1 YOU-MASHER
	.DEBUG-LINE 8,881,1
	RFALSE
	.DEBUG-LINE 8,882,1
?L9:	FSET? OBJ,TAKEBIT /?L12
	.DEBUG-LINE 8,883,1
	ZERO? SILENT \FALSE
	.DEBUG-LINE 8,883,1
	ICALL2 NOT-POSSIBLE,STR?10
	.DEBUG-LINE 8,884,1
	RFALSE
	.DEBUG-LINE 8,885,1
?L12:	IN? OBJ,WINNER \?L15
	.DEBUG-LINE 8,886,1
	ZERO? SILENT \FALSE
	.DEBUG-LINE 8,886,1
	PRINTI "You already have that."
	CRLF
	.DEBUG-LINE 8,887,1
	RFALSE
	.DEBUG-LINE 8,889,1
?L15:	CALL TAKE-HOLDER,OBJ,WINNER >HOLDER
	ZERO? HOLDER /?L29
	.DEBUG-LINE 8,890,1
	FSET? HOLDER,PERSONBIT \?L21
	.DEBUG-LINE 8,891,1
	ZERO? SILENT \FALSE
	.DEBUG-LINE 8,891,1
	PRINTI "That seems to belong to "
	ICALL2 PRINT-DEF,HOLDER
	PRINTI "."
	CRLF
	.DEBUG-LINE 8,892,1
	RFALSE
	.DEBUG-LINE 8,893,1
?L21:	CALL2 BLOCKS-TAKE?,HOLDER >STACK
	ZERO? STACK /?L25
	.DEBUG-LINE 8,894,1
	ICALL2 THIS-IS-IT,HOLDER
	.DEBUG-LINE 8,895,1
	ZERO? SILENT \FALSE
	.DEBUG-LINE 8,895,1
	ICALL2 PRINT-CDEF,HOLDER
	PRINTI " is in the way."
	CRLF
	.DEBUG-LINE 8,896,1
	RFALSE
	.DEBUG-LINE 8,897,1
?L25:	CALL TAKE-CAPACITY-CHECK,OBJ,SILENT >STACK
	ZERO? STACK /?L29
	.DEBUG-LINE 8,898,1
	FSET? HOLDER,CONTBIT \?L29
	CALL HELD?,OBJ,HOLDER >STACK
	ZERO? STACK /?L29
	CALL HELD?,WINNER,HOLDER >STACK
	ZERO? STACK \?L29
	.DEBUG-LINE 8,901,1
	FSET OBJ,TOUCHBIT
	.DEBUG-LINE 8,902,1
	MOVE OBJ,WINNER
	.DEBUG-LINE 8,903,1
	ZERO? SILENT \TRUE
	.DEBUG-LINE 8,904,1
	EQUAL? REPORT-MODE,SHORT-REPORT \?L32
	.DEBUG-LINE 8,904,1
	PRINTR "Taken."
	.DEBUG-LINE 8,906,1
?L32:	PRINTI "You reach "
	.DEBUG-LINE 8,907,1
	CALL HELD?,WINNER,HOLDER >STACK
	ZERO? STACK /?L34
	.DEBUG-LINE 8,908,1
	PRINTI "out of "
	JUMP ?L36
	.DEBUG-LINE 8,909,1
?L34:	PRINTI "in "
	.DEBUG-LINE 8,910,1
?L36:	ICALL2 PRINT-DEF,HOLDER
	PRINTI " and "
	.DEBUG-LINE 8,911,1
	FSET? OBJ,WEARBIT \?L37
	.DEBUG-LINE 8,912,1
	PRINTI "wear "
	.DEBUG-LINE 8,913,1
	FSET OBJ,WORNBIT
	JUMP ?L39
	.DEBUG-LINE 8,914,1
?L37:	PRINTI "take "
	.DEBUG-LINE 8,915,1
?L39:	ICALL2 PRINT-DEF,OBJ
	.DEBUG-LINE 8,916,1
	PRINTR "."
	.DEBUG-LINE 8,917,1
?L29:	CALL TAKE-CAPACITY-CHECK,OBJ,SILENT >STACK
	ZERO? STACK /FALSE
	.DEBUG-LINE 8,919,1
	FSET? OBJ,WEARBIT \?L44
	.DEBUG-LINE 8,920,1
	FSET OBJ,WORNBIT
	.DEBUG-LINE 8,921,1
	MOVE OBJ,WINNER
	.DEBUG-LINE 8,922,1
	FSET OBJ,TOUCHBIT
	.DEBUG-LINE 8,923,1
	ZERO? SILENT \TRUE
	.DEBUG-LINE 8,924,1
	EQUAL? REPORT-MODE,SHORT-REPORT \?L47
	.DEBUG-LINE 8,924,1
	PRINTR "Taken (and worn)."
	.DEBUG-LINE 8,925,1
?L47:	PRINTI "You wear "
	ICALL2 PRINT-DEF,OBJ
	.DEBUG-LINE 8,926,1
	PRINTR "."
	.DEBUG-LINE 8,928,1
?L44:	FSET OBJ,TOUCHBIT
	.DEBUG-LINE 8,929,1
	MOVE OBJ,WINNER
	.DEBUG-LINE 8,930,1
	ZERO? SILENT \TRUE
	.DEBUG-LINE 8,931,1
	EQUAL? REPORT-MODE,SHORT-REPORT \?L52
	.DEBUG-LINE 8,931,1
	PRINTR "Taken."
	.DEBUG-LINE 8,932,1
?L52:	PRINTI "You pick up "
	ICALL2 PRINT-DEF,OBJ
	.DEBUG-LINE 8,933,1
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"TAKE-HOLDER","OBJ","TAKER","CEIL","BLOCKER","ALLOWER","HAD-ALLOWER?","L"
	.FUNCT TAKE-HOLDER,OBJ,TAKER,CEIL,BLOCKER,ALLOWER,HAD-ALLOWER?,L
	.DEBUG-LINE 8,951,1
	CALL COMMON-PARENT-R,OBJ,TAKER,HERE >CEIL
	.DEBUG-LINE 8,952,1
	ZERO? CEIL \?L1
	.DEBUG-LINE 8,952,1
	RETURN ROOMS
	.DEBUG-LINE 8,954,1
?L1:	EQUAL? OBJ,CEIL /?L8
	.DEBUG-LINE 8,955,1
	LOC OBJ >L
	.DEBUG-LINE 8,956,1
?L6:	EQUAL? L,0,CEIL /?L8
	.DEBUG-LINE 8,958,1
	CALL2 BLOCKS-TAKE?,L >STACK
	ZERO? STACK /?L11
	.DEBUG-LINE 8,960,1
	SET 'BLOCKER,L
	JUMP ?L15
	.DEBUG-LINE 8,961,1
?L11:	FSET? L,CONTBIT \?L14
	FSET? L,SURFACEBIT \?L13
?L14:	IN? L,ROOMS \?L15
	.DEBUG-LINE 8,965,1
?L13:	ZERO? ALLOWER \?L15
	.DEBUG-LINE 8,965,1
	SET 'ALLOWER,L
?L15:	LOC L >L
	JUMP ?L6
	.DEBUG-LINE 8,967,1
?L8:	SET 'HAD-ALLOWER?,ALLOWER
	.DEBUG-LINE 8,968,1
	EQUAL? TAKER,CEIL /?L23
	.DEBUG-LINE 8,969,1
	LOC TAKER >L
	.DEBUG-LINE 8,970,1
?L21:	EQUAL? L,0,CEIL /?L23
	.DEBUG-LINE 8,972,1
	CALL2 BLOCKS-TAKE?,L >STACK
	ZERO? STACK /?L26
	.DEBUG-LINE 8,974,1
	ZERO? BLOCKER \?L32
	.DEBUG-LINE 8,974,1
	SET 'BLOCKER,L
	JUMP ?L32
	.DEBUG-LINE 8,975,1
?L26:	FSET? L,CONTBIT \?L31
	FSET? L,SURFACEBIT \?L30
?L31:	IN? L,ROOMS \?L32
	.DEBUG-LINE 8,980,1
?L30:	ZERO? HAD-ALLOWER? \?L32
	.DEBUG-LINE 8,980,1
	SET 'ALLOWER,L
?L32:	LOC L >L
	JUMP ?L21
	.DEBUG-LINE 8,981,1
?L23:	ZERO? BLOCKER /?L37
	RETURN BLOCKER
?L37:	RETURN ALLOWER
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"BLOCKS-TAKE?","OBJ"
	.FUNCT BLOCKS-TAKE?,OBJ
	.DEBUG-LINE 8,984,1
	FSET? OBJ,PERSONBIT /TRUE
	FSET? OBJ,CONTBIT \FALSE
	FSET? OBJ,OPENABLEBIT \FALSE
	FSET? OBJ,OPENBIT \TRUE
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"COMMON-PARENT-R","A","B","ROOT","N","F","R","I"
	.FUNCT COMMON-PARENT-R,A,B,ROOT,N,F,R,I
	.DEBUG-LINE 8,993,1
	ZERO? ROOT /FALSE
	.DEBUG-LINE 8,995,1
	EQUAL? ROOT,A,B \?L3
	.DEBUG-LINE 8,995,1
	RETURN ROOT
	.DEBUG-LINE 8,998,1
?L3:	FIRST? ROOT >I \?L8
	.DEBUG-LINE 8,999,1
?L6:	CALL COMMON-PARENT-R,A,B,I >R
	ZERO? R /?L11
	.DEBUG-LINE 8,1000,1
	SET 'F,R
	.DEBUG-LINE 8,1001,1
	.DEBUG-LINE 8,1004,1
	IGRTR? 'N,1 \?L11
	.DEBUG-LINE 8,1004,1
	RETURN ROOT
?L11:	NEXT? I >I /?L6
	.DEBUG-LINE 8,1007,1
?L8:	RETURN F
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"TAKE-CAPACITY-CHECK","O","SILENT","CAP","CWT","NWT","?TMP"
	.FUNCT TAKE-CAPACITY-CHECK,O,SILENT,CAP,CWT,NWT,?TMP
	GETP WINNER,P?CAPACITY >CAP
	.DEBUG-LINE 8,1012,1
	LESS? CAP,0 /TRUE
	.DEBUG-LINE 8,1013,1
	CALL2 WEIGHT,WINNER >?TMP
	GETP WINNER,P?SIZE >STACK
	SUB ?TMP,STACK >CWT
	.DEBUG-LINE 8,1014,1
	CALL2 WEIGHT,O >NWT
	.DEBUG-LINE 8,1015,1
	ADD CWT,NWT >STACK
	GRTR? STACK,CAP \TRUE
	.DEBUG-LINE 8,1016,1
	ZERO? SILENT \FALSE
	.DEBUG-LINE 8,1017,1
	EQUAL? REPORT-MODE,SHORT-REPORT \?L8
	.DEBUG-LINE 8,1018,1
	PRINTI "You're carrying too much."
	CRLF
	RFALSE
	.DEBUG-LINE 8,1020,1
?L8:	PRINTI "You're carrying too much to pick up "
	ICALL2 PRINT-DEF,O
	PRINTI "."
	CRLF
	.DEBUG-LINE 8,1021,1
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRE-DROP"
	.FUNCT PRE-DROP
	.DEBUG-LINE 8,1026,1
	IN? PRSO,WINNER /FALSE
	.DEBUG-LINE 8,1027,1
	SET 'P-CONT,0
	.DEBUG-LINE 8,1028,1
	PRINTR "You don't have that."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-DROP"
	.FUNCT V-DROP
	.DEBUG-LINE 8,1031,1
	MOVE PRSO,HERE
	.DEBUG-LINE 8,1032,1
	FSET PRSO,TOUCHBIT
	.DEBUG-LINE 8,1033,1
	FCLEAR PRSO,WORNBIT
	.DEBUG-LINE 8,1034,1
	EQUAL? REPORT-MODE,SHORT-REPORT \?L1
	.DEBUG-LINE 8,1034,1
	PRINTR "Dropped."
	.DEBUG-LINE 8,1035,1
?L1:	PRINTI "You drop "
	ICALL2 PRINT-DEF,PRSO
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRE-PUT-ON"
	.FUNCT PRE-PUT-ON
	.DEBUG-LINE 8,1038,1
	EQUAL? PRSI,WINNER \?L1
	.DEBUG-LINE 8,1038,1
	ICALL PERFORM,V?WEAR,PRSO
	.DEBUG-LINE 8,1038,1
	RTRUE
	.DEBUG-LINE 8,1039,1
?L1:	EQUAL? PRSO,WINNER \?L3
	.DEBUG-LINE 8,1039,1
	ICALL PERFORM,V?ENTER,PRSI
	.DEBUG-LINE 8,1039,1
	RTRUE
	.DEBUG-LINE 8,1040,1
?L3:	CALL HAVE-TAKE-CHECK,PRSO,SF-HAVE >STACK
	ZERO? STACK /TRUE
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-PUT-ON","S","CCAP","CSIZE","X","W","B"
	.FUNCT V-PUT-ON,S,CCAP,CSIZE,X,W,B
	.DEBUG-LINE 8,1043,1
	FSET? PRSI,PERSONBIT \?L1
	.DEBUG-LINE 8,1043,1
	ICALL2 YOU-MASHER,PRSI
	.DEBUG-LINE 8,1043,1
	RTRUE
	.DEBUG-LINE 8,1044,1
?L1:	FSET? PRSI,CONTBIT \?L4
	FSET? PRSI,SURFACEBIT /?L3
	.DEBUG-LINE 8,1046,1
?L4:	ICALL2 NOT-POSSIBLE,STR?11
	.DEBUG-LINE 8,1047,1
	RTRUE
	.DEBUG-LINE 8,1048,1
?L3:	IN? PRSO,WINNER /?L5
	.DEBUG-LINE 8,1049,1
	PRINTR "You don't have that."
	.DEBUG-LINE 8,1050,1
?L5:	EQUAL? PRSO,PRSI /?L7
	CALL HELD?,PRSI,PRSO >STACK
	ZERO? STACK /?L6
	.DEBUG-LINE 8,1051,1
?L7:	PRINTR "You can't put something on itself."
	.DEBUG-LINE 8,1053,1
?L6:	GETP PRSO,P?SIZE >S
	.DEBUG-LINE 8,1054,1
	GETP PRSI,P?CAPACITY >CCAP
	LESS? CCAP,0 \?L11
	.DEBUG-LINE 8,1056,1
	SET 'CCAP,5
	.DEBUG-LINE 8,1058,1
	SET 'B,1
	.DEBUG-LINE 8,1059,1
?L11:	GETP PRSI,P?SIZE >CSIZE
	.DEBUG-LINE 8,1060,1
	GRTR? S,CCAP /?L14
	GRTR? S,CSIZE \?L12
	.DEBUG-LINE 8,1061,1
?L14:	PRINTI "That won't fit on "
	ICALL2 PRINT-DEF,PRSI
	.DEBUG-LINE 8,1062,1
	PRINTR "."
	.DEBUG-LINE 8,1063,1
?L12:	ZERO? B \?L18
	.DEBUG-LINE 8,1065,1
	CALL2 CONTENTS-WEIGHT,PRSI >W
	.DEBUG-LINE 8,1066,1
	ADD W,S >X
	.DEBUG-LINE 8,1067,1
	GRTR? X,CCAP \?L18
	.DEBUG-LINE 8,1068,1
	PRINTI "There's not enough room on "
	ICALL2 PRINT-DEF,PRSI
	.DEBUG-LINE 8,1069,1
	PRINTR "."
	.DEBUG-LINE 8,1071,1
?L18:	MOVE PRSO,PRSI
	.DEBUG-LINE 8,1072,1
	FSET PRSO,TOUCHBIT
	.DEBUG-LINE 8,1073,1
	FCLEAR PRSO,WORNBIT
	.DEBUG-LINE 8,1074,1
	EQUAL? REPORT-MODE,SHORT-REPORT \?L22
	.DEBUG-LINE 8,1074,1
	PRINTR "Done."
	.DEBUG-LINE 8,1075,1
?L22:	PRINTI "You put "
	ICALL2 PRINT-DEF,PRSO
	PRINTI " on "
	ICALL2 PRINT-DEF,PRSI
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRE-PUT-IN"
	.FUNCT PRE-PUT-IN
	.DEBUG-LINE 8,1078,1
	EQUAL? PRSI,WINNER \?L1
	.DEBUG-LINE 8,1078,1
	ICALL1 TSD
	.DEBUG-LINE 8,1078,1
	RTRUE
	.DEBUG-LINE 8,1079,1
?L1:	EQUAL? PRSO,WINNER \?L3
	.DEBUG-LINE 8,1079,1
	ICALL PERFORM,V?ENTER,PRSI
	.DEBUG-LINE 8,1079,1
	RTRUE
	.DEBUG-LINE 8,1080,1
?L3:	CALL HAVE-TAKE-CHECK,PRSO,SF-HAVE >STACK
	ZERO? STACK /TRUE
	RFALSE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-PUT-IN","S","CCAP","CSIZE","X","W","B"
	.FUNCT V-PUT-IN,S,CCAP,CSIZE,X,W,B
	.DEBUG-LINE 8,1083,1
	FSET? PRSI,PERSONBIT \?L1
	.DEBUG-LINE 8,1083,1
	ICALL2 YOU-MASHER,PRSI
	.DEBUG-LINE 8,1083,1
	RTRUE
	.DEBUG-LINE 8,1084,1
?L1:	FSET? PRSI,CONTBIT \?L4
	FSET? PRSI,SURFACEBIT \?L3
	.DEBUG-LINE 8,1086,1
?L4:	ICALL2 NOT-POSSIBLE,STR?12
	.DEBUG-LINE 8,1087,1
	RTRUE
	.DEBUG-LINE 8,1088,1
?L3:	FSET? PRSI,OPENBIT /?L6
	FSET? PRSI,OPENABLEBIT \?L5
	.DEBUG-LINE 8,1090,1
	ICALL2 PRINT-CDEF,PRSI
	PRINTR " is closed."
	.DEBUG-LINE 8,1092,1
?L5:	FSET? PRSI,OPENBIT /?L6
	FSET? PRSI,CONTBIT \?L6
	.DEBUG-LINE 8,1094,1
	PRINTI "You see no way to put things into "
	ICALL2 PRINT-DEF,PRSI
	PRINTR "."
	.DEBUG-LINE 8,1095,1
?L6:	IN? PRSO,WINNER /?L7
	.DEBUG-LINE 8,1096,1
	PRINTR "You aren't holding that."
	.DEBUG-LINE 8,1097,1
?L7:	EQUAL? PRSO,PRSI /?L9
	CALL HELD?,PRSI,PRSO >STACK
	ZERO? STACK /?L8
	.DEBUG-LINE 8,1098,1
?L9:	PRINTR "You can't put something in itself."
	.DEBUG-LINE 8,1100,1
?L8:	GETP PRSO,P?SIZE >S
	.DEBUG-LINE 8,1101,1
	GETP PRSI,P?CAPACITY >CCAP
	LESS? CCAP,0 \?L13
	.DEBUG-LINE 8,1103,1
	SET 'CCAP,5
	.DEBUG-LINE 8,1105,1
	SET 'B,1
	.DEBUG-LINE 8,1106,1
?L13:	GETP PRSI,P?SIZE >CSIZE
	.DEBUG-LINE 8,1107,1
	GRTR? S,CCAP /?L16
	GRTR? S,CSIZE \?L14
	.DEBUG-LINE 8,1109,1
?L16:	PRINTI "That won't fit in "
	ICALL2 PRINT-DEF,PRSI
	.DEBUG-LINE 8,1110,1
	PRINTR "."
	.DEBUG-LINE 8,1111,1
?L14:	ZERO? B \?L20
	.DEBUG-LINE 8,1113,1
	CALL2 CONTENTS-WEIGHT,PRSI >W
	.DEBUG-LINE 8,1115,1
	ADD W,S >X
	.DEBUG-LINE 8,1116,1
	GRTR? X,CCAP \?L20
	.DEBUG-LINE 8,1117,1
	PRINTI "There's not enough room in "
	ICALL2 PRINT-DEF,PRSI
	.DEBUG-LINE 8,1118,1
	PRINTR "."
	.DEBUG-LINE 8,1119,1
?L20:	MOVE PRSO,PRSI
	.DEBUG-LINE 8,1120,1
	FSET PRSO,TOUCHBIT
	.DEBUG-LINE 8,1121,1
	FCLEAR PRSO,WORNBIT
	.DEBUG-LINE 8,1122,1
	EQUAL? REPORT-MODE,SHORT-REPORT \?L24
	.DEBUG-LINE 8,1122,1
	PRINTR "Done."
	.DEBUG-LINE 8,1123,1
?L24:	PRINTI "You put "
	ICALL2 PRINT-DEF,PRSO
	PRINTI " in "
	ICALL2 PRINT-DEF,PRSI
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"CONTENTS-WEIGHT","O","W","I"
	.FUNCT CONTENTS-WEIGHT,O,W,I
	.DEBUG-LINE 8,1129,1
	FIRST? O >I \?L3
	.DEBUG-LINE 8,1130,1
?L1:	GETP I,P?SIZE >STACK
	ADD W,STACK >W
	NEXT? I >I /?L1
	.DEBUG-LINE 8,1131,1
?L3:	RETURN W
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"WEIGHT","O","X","W","I"
	.FUNCT WEIGHT,O,X,W,I
	.DEBUG-LINE 8,1137,1
	GETP O,P?SIZE >W
	.DEBUG-LINE 8,1139,1
	FIRST? O >I \?L3
	.DEBUG-LINE 8,1140,1
?L1:	FSET? I,CONTBIT /?L6
	FSET? I,PERSONBIT \?L4
	.DEBUG-LINE 8,1142,1
?L6:	CALL2 WEIGHT,I >X
	.DEBUG-LINE 8,1143,1
	ADD W,X >W
	JUMP ?L7
	.DEBUG-LINE 8,1145,1
?L4:	GETP I,P?SIZE >STACK
	ADD W,STACK >W
?L7:	NEXT? I >I /?L1
	.DEBUG-LINE 8,1146,1
?L3:	RETURN W
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-WEAR"
	.FUNCT V-WEAR
	.DEBUG-LINE 8,1149,1
	FSET? PRSO,WEARBIT \?L1
	.DEBUG-LINE 8,1150,1
	ICALL PERFORM,V?TAKE,PRSO
	RTRUE
	.DEBUG-LINE 8,1151,1
?L1:	ICALL2 NOT-POSSIBLE,STR?13
	.DEBUG-LINE 8,1152,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-UNWEAR"
	.FUNCT V-UNWEAR
	.DEBUG-LINE 8,1155,1
	FSET? PRSO,WORNBIT \?L1
	IN? PRSO,WINNER \?L1
	.DEBUG-LINE 8,1157,1
	CALL PERFORM,V?DROP,PRSO >STACK
	RSTACK
	.DEBUG-LINE 8,1158,1
?L1:	PRINTR "You aren't wearing that."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-EAT"
	.FUNCT V-EAT
	.DEBUG-LINE 8,1161,1
	EQUAL? PRSO,WINNER \?L1
	.DEBUG-LINE 8,1161,1
	ICALL1 TSD
	.DEBUG-LINE 8,1161,1
	RTRUE
	.DEBUG-LINE 8,1162,1
?L1:	FSET? PRSO,PERSONBIT \?L3
	.DEBUG-LINE 8,1162,1
	ICALL1 YOU-MASHER
	.DEBUG-LINE 8,1162,1
	RTRUE
	.DEBUG-LINE 8,1163,1
?L3:	FSET? PRSO,EDIBLEBIT \?L4
	.DEBUG-LINE 8,1164,1
	REMOVE PRSO
	.DEBUG-LINE 8,1165,1
	EQUAL? REPORT-MODE,SHORT-REPORT \?L5
	.DEBUG-LINE 8,1165,1
	PRINTR "Eaten."
	.DEBUG-LINE 8,1166,1
?L5:	PRINTI "You devour "
	ICALL2 PRINT-DEF,PRSO
	PRINTR "."
	.DEBUG-LINE 8,1167,1
?L4:	PRINTR "That's hardly edible."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-VERSION","?TMP"
	.FUNCT V-VERSION,?TMP
	.DEBUG-LINE 8,1178,1
	PRINT GAME-BANNER
	CRLF
	.DEBUG-LINE 8,1179,1
	PRINTI "Release "
	.DEBUG-LINE 8,1180,1
	GET 0,1 >STACK
	BAND STACK,2047 >STACK
	PRINTN STACK
	.DEBUG-LINE 8,1181,1
	PRINTI " / Serial number "
	.DEBUG-LINE 8,1182,1
	SET '?TMP,18
?L1:	GETB 0,?TMP >STACK
	PRINTC STACK
	IGRTR? '?TMP,23 \?L1
	.DEBUG-LINE 8,1183,1
	.DEBUG-LINE 8,1184,1
	PRINTR " / ZILF 0.9 lib J5"
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-THINK-ABOUT"
	.FUNCT V-THINK-ABOUT
	.DEBUG-LINE 8,1187,1
	EQUAL? PRSO,WINNER \?L1
	.DEBUG-LINE 8,1188,1
	PRINTR "Yes, yes, you're very important."
	.DEBUG-LINE 8,1190,1
?L1:	PRINTI "You contemplate "
	ICALL2 PRINT-DEF,PRSO
	PRINTR " for a bit, but nothing fruitful comes to mind."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-OPEN"
	.FUNCT V-OPEN
	.DEBUG-LINE 8,1193,1
	FSET? PRSO,PERSONBIT \?L1
	.DEBUG-LINE 8,1193,1
	ICALL1 YOU-MASHER
	.DEBUG-LINE 8,1193,1
	RTRUE
	.DEBUG-LINE 8,1194,1
?L1:	FSET? PRSO,OPENABLEBIT /?L3
	.DEBUG-LINE 8,1194,1
	ICALL2 NOT-POSSIBLE,STR?14
	.DEBUG-LINE 8,1194,1
	RTRUE
	.DEBUG-LINE 8,1195,1
?L3:	FSET? PRSO,OPENBIT \?L4
	.DEBUG-LINE 8,1196,1
	PRINTR "It's already open."
	.DEBUG-LINE 8,1197,1
?L4:	FSET? PRSO,LOCKEDBIT \?L5
	.DEBUG-LINE 8,1198,1
	PRINTR "You'll have to unlock it first."
	.DEBUG-LINE 8,1200,1
?L5:	FSET PRSO,TOUCHBIT
	.DEBUG-LINE 8,1201,1
	FSET PRSO,OPENBIT
	.DEBUG-LINE 8,1202,1
	EQUAL? REPORT-MODE,SHORT-REPORT \?L7
	.DEBUG-LINE 8,1202,1
	PRINTI "Opened."
	CRLF
	JUMP ?L10
	.DEBUG-LINE 8,1204,1
?L7:	PRINTI "You open "
	ICALL2 PRINT-DEF,PRSO
	PRINTI "."
	CRLF
	.DEBUG-LINE 8,1205,1
	ZERO? HERE-LIT /?L10
	FSET? PRSO,CONTBIT \?L10
	FSET? PRSO,TRANSBIT /?L10
	.DEBUG-LINE 8,1208,1
	ICALL2 DESCRIBE-CONTENTS,PRSO
	.DEBUG-LINE 8,1209,1
?L10:	CALL1 NOW-LIT? >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-CLOSE"
	.FUNCT V-CLOSE
	.DEBUG-LINE 8,1212,1
	FSET? PRSO,PERSONBIT \?L1
	.DEBUG-LINE 8,1212,1
	ICALL1 YOU-MASHER
	.DEBUG-LINE 8,1212,1
	RTRUE
	.DEBUG-LINE 8,1213,1
?L1:	FSET? PRSO,OPENABLEBIT /?L3
	.DEBUG-LINE 8,1213,1
	ICALL2 NOT-POSSIBLE,STR?15
	.DEBUG-LINE 8,1213,1
	RTRUE
	.DEBUG-LINE 8,1215,1
?L3:	FSET? PRSO,OPENBIT /?L4
	.DEBUG-LINE 8,1216,1
	PRINTR "It's already closed."
	.DEBUG-LINE 8,1218,1
?L4:	FSET PRSO,TOUCHBIT
	.DEBUG-LINE 8,1219,1
	FCLEAR PRSO,OPENBIT
	.DEBUG-LINE 8,1220,1
	EQUAL? REPORT-MODE,SHORT-REPORT \?L6
	.DEBUG-LINE 8,1220,1
	PRINTI "Closed."
	CRLF
	JUMP ?L8
	.DEBUG-LINE 8,1221,1
?L6:	PRINTI "You close "
	ICALL2 PRINT-DEF,PRSO
	PRINTI "."
	CRLF
	.DEBUG-LINE 8,1222,1
?L8:	CALL1 NOW-DARK? >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-LOCK"
	.FUNCT V-LOCK
	.DEBUG-LINE 8,1225,1
	ICALL2 NOT-POSSIBLE,STR?16
	.DEBUG-LINE 8,1226,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-UNLOCK"
	.FUNCT V-UNLOCK
	.DEBUG-LINE 8,1229,1
	ICALL2 NOT-POSSIBLE,STR?17
	.DEBUG-LINE 8,1230,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-WAIT","T","INTERRUPT","ENDACT"
	.FUNCT V-WAIT,T,INTERRUPT,ENDACT
	.DEBUG-LINE 8,1233,1
	SET 'T,1
	.DEBUG-LINE 8,1234,1
	PRINTI "Time passes."
	CRLF
	.DEBUG-LINE 8,1237,1
?L1:	GETP HERE,P?ACTION >STACK
	CALL2 STACK,M-END >ENDACT
	.DEBUG-LINE 8,1240,1
	CALL1 CLOCKER >INTERRUPT
	.DEBUG-LINE 8,1242,1
	.DEBUG-LINE 8,1243,1
	IGRTR? 'T,STANDARD-WAIT /TRUE
	ZERO? ENDACT \TRUE
	ZERO? INTERRUPT /?L1
	.DEBUG-LINE 8,1246,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-AGAIN"
	.FUNCT V-AGAIN
	.DEBUG-LINE 8,1249,1
	GETB AGAIN-STORAGE,25 >STACK
	ZERO? STACK \?L1
	.DEBUG-LINE 8,1250,1
	.DEBUG-LINE 8,1251,1
	PRINTR "Nothing to repeat."
	.DEBUG-LINE 8,1252,1
?L1:	ICALL2 SAVE-PARSER-RESULT,TEMP-PARSER-RESULT
	.DEBUG-LINE 8,1253,1
	ICALL2 RESTORE-PARSER-RESULT,AGAIN-STORAGE
	.DEBUG-LINE 8,1256,1
	ZERO? PRSO /?L6
	ZERO? PRSO-DIR \?L6
	CALL2 STILL-VISIBLE-CHECK,P-PRSOS >STACK
	ZERO? STACK /?L5
	GETB P-SYNTAX,SYN-OPTS1 >STACK
	CALL HAVE-TAKE-CHECK-TBL,P-PRSOS,STACK >STACK
	ZERO? STACK /?L5
	.DEBUG-LINE 8,1261,1
?L6:	ZERO? PRSI /?L9
	CALL2 STILL-VISIBLE-CHECK,P-PRSIS >STACK
	ZERO? STACK /?L5
	GETB P-SYNTAX,SYN-OPTS2 >STACK
	CALL HAVE-TAKE-CHECK-TBL,P-PRSIS,STACK >STACK
	ZERO? STACK /?L5
	.DEBUG-LINE 8,1266,1
?L9:	ICALL PERFORM,PRSA,PRSO,PRSI
	.DEBUG-LINE 2,636,1
	EQUAL? PRSA,V?QUIT,V?VERSION,V?WAIT /?L16
	EQUAL? PRSA,V?SAVE,V?RESTORE,V?RESTART /?L16
	EQUAL? PRSA,V?INVENTORY,V?UNDO,V?SUPERBRIEF /?L16
	EQUAL? PRSA,V?BRIEF,V?VERBOSE,V?AGAIN /?L16
	EQUAL? PRSA,V?SCRIPT,V?UNSCRIPT,V?PRONOUNS /?L16
	EQUAL? PRSA,V?TELL /?L16
	.DEBUG-LINE 2,637,1
	GETP HERE,P?ACTION >STACK
	ICALL2 STACK,M-END
	.DEBUG-LINE 2,638,1
	ICALL1 CLOCKER
	.DEBUG-LINE 8,1266,1
?L16:	LOC WINNER >HERE
	.DEBUG-LINE 8,1267,1
?L5:	ICALL2 RESTORE-PARSER-RESULT,TEMP-PARSER-RESULT
	.DEBUG-LINE 8,1268,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-READ","T"
	.FUNCT V-READ,T
	.DEBUG-LINE 8,1271,1
	FSET? PRSO,READBIT /?L1
	.DEBUG-LINE 8,1271,1
	ICALL2 NOT-POSSIBLE,STR?18
	.DEBUG-LINE 8,1271,1
	RTRUE
	.DEBUG-LINE 8,1272,1
?L1:	GETP PRSO,P?TEXT >T
	ZERO? T /?L3
	.DEBUG-LINE 8,1273,1
	PRINT T
	CRLF
	RTRUE
	.DEBUG-LINE 8,1274,1
?L3:	GETP PRSO,P?TEXT-HELD >T
	ZERO? T /?L4
	.DEBUG-LINE 8,1275,1
	IN? PRSO,WINNER \?L5
	.DEBUG-LINE 8,1276,1
	PRINT T
	CRLF
	RTRUE
	.DEBUG-LINE 8,1278,1
?L5:	PRINTR "You must be holding that to be able to read it."
	.DEBUG-LINE 8,1280,1
?L4:	CALL PERFORM,V?EXAMINE,PRSO >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-TURN-ON"
	.FUNCT V-TURN-ON
	.DEBUG-LINE 8,1283,1
	EQUAL? PRSO,WINNER \?L1
	.DEBUG-LINE 8,1283,1
	ICALL1 TSD
	.DEBUG-LINE 8,1283,1
	RTRUE
	.DEBUG-LINE 8,1284,1
?L1:	FSET? PRSO,DEVICEBIT /?L3
	.DEBUG-LINE 8,1284,1
	ICALL2 NOT-POSSIBLE,STR?19
	.DEBUG-LINE 8,1284,1
	RTRUE
	.DEBUG-LINE 8,1285,1
?L3:	FSET? PRSO,ONBIT \?L4
	.DEBUG-LINE 8,1286,1
	PRINTR "It's already on."
	.DEBUG-LINE 8,1288,1
?L4:	FSET PRSO,ONBIT
	.DEBUG-LINE 8,1289,1
	EQUAL? REPORT-MODE,SHORT-REPORT \?L6
	.DEBUG-LINE 8,1289,1
	PRINTR "Switched on."
	.DEBUG-LINE 8,1290,1
?L6:	PRINTI "You switch on "
	ICALL2 PRINT-DEF,PRSO
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-TURN-OFF"
	.FUNCT V-TURN-OFF
	.DEBUG-LINE 8,1293,1
	EQUAL? PRSO,WINNER \?L1
	.DEBUG-LINE 8,1294,1
	CALL2 PICK-ONE-R,T?108 >STACK
	PRINT STACK
	CRLF
	RTRUE
	.DEBUG-LINE 8,1295,1
?L1:	FSET? PRSO,DEVICEBIT /?L3
	.DEBUG-LINE 8,1296,1
	ICALL2 NOT-POSSIBLE,STR?19
	.DEBUG-LINE 8,1296,1
	RTRUE
	.DEBUG-LINE 8,1297,1
?L3:	FSET? PRSO,ONBIT /?L4
	.DEBUG-LINE 8,1298,1
	PRINTR "It's already off."
	.DEBUG-LINE 8,1300,1
?L4:	FCLEAR PRSO,ONBIT
	.DEBUG-LINE 8,1301,1
	EQUAL? REPORT-MODE,SHORT-REPORT \?L6
	.DEBUG-LINE 8,1301,1
	PRINTR "Switched off."
	.DEBUG-LINE 8,1302,1
?L6:	PRINTI "You switch off "
	ICALL2 PRINT-DEF,PRSO
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-FLIP"
	.FUNCT V-FLIP
	.DEBUG-LINE 8,1305,1
	FSET? PRSO,DEVICEBIT /?L1
	.DEBUG-LINE 8,1306,1
	FSET? PRSO,SURFACEBIT \?L3
	.DEBUG-LINE 8,1307,1
	ICALL2 POINTLESS,STR?20
	RTRUE
	.DEBUG-LINE 8,1308,1
?L3:	ICALL2 NOT-POSSIBLE,STR?19
	RTRUE
	.DEBUG-LINE 8,1309,1
?L1:	FSET? PRSO,ONBIT \?L6
	.DEBUG-LINE 8,1310,1
	ICALL PERFORM,V?TURN-OFF,PRSO
	RTRUE
	.DEBUG-LINE 8,1312,1
?L6:	ICALL PERFORM,V?TURN-ON,PRSO
	.DEBUG-LINE 8,1313,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-PUSH"
	.FUNCT V-PUSH
	.DEBUG-LINE 8,1316,1
	EQUAL? PRSO,WINNER \?L1
	.DEBUG-LINE 8,1316,1
	PRINTR "No, you seem close to the edge."
	.DEBUG-LINE 8,1317,1
?L1:	FSET? PRSO,PERSONBIT \?L3
	.DEBUG-LINE 8,1317,1
	ICALL1 YOU-MASHER
	RTRUE
	.DEBUG-LINE 8,1318,1
?L3:	ICALL2 POINTLESS,STR?21
	.DEBUG-LINE 8,1319,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-PULL"
	.FUNCT V-PULL
	.DEBUG-LINE 8,1322,1
	EQUAL? PRSO,WINNER \?L1
	.DEBUG-LINE 8,1322,1
	PRINTR "That would demean both of us."
	.DEBUG-LINE 8,1323,1
?L1:	FSET? PRSO,PERSONBIT \?L3
	.DEBUG-LINE 8,1323,1
	ICALL1 YOU-MASHER
	RTRUE
	.DEBUG-LINE 8,1324,1
?L3:	ICALL2 POINTLESS,STR?22
	.DEBUG-LINE 8,1325,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-YES"
	.FUNCT V-YES
	.DEBUG-LINE 8,1328,1
	ICALL1 RHETORICAL
	.DEBUG-LINE 8,1329,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-NO"
	.FUNCT V-NO
	.DEBUG-LINE 8,1332,1
	ICALL1 RHETORICAL
	.DEBUG-LINE 8,1333,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-DRINK"
	.FUNCT V-DRINK
	.DEBUG-LINE 8,1336,1
	PRINTI "You aren't "
	.DEBUG-LINE 8,1337,1
	ICALL2 ITALICIZE,STR?23
	.DEBUG-LINE 8,1338,1
	PRINTR " thirsty."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-FILL"
	.FUNCT V-FILL
	.DEBUG-LINE 8,1341,1
	ICALL1 BE-SPECIFIC
	.DEBUG-LINE 8,1342,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-EMPTY"
	.FUNCT V-EMPTY
	.DEBUG-LINE 8,1345,1
	ICALL1 BE-SPECIFIC
	.DEBUG-LINE 8,1346,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-SMELL"
	.FUNCT V-SMELL
	.DEBUG-LINE 8,1349,1
	PRINTR "You smell nothing unexpected."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-ATTACK"
	.FUNCT V-ATTACK
	.DEBUG-LINE 8,1352,1
	EQUAL? PRSO,WINNER \?L1
	.DEBUG-LINE 8,1352,1
	PRINTR "Let's hope it doesn't come to that."
	.DEBUG-LINE 8,1353,1
?L1:	FSET? PRSO,PERSONBIT \?L3
	.DEBUG-LINE 8,1353,1
	ICALL1 YOU-MASHER
	RTRUE
	.DEBUG-LINE 8,1354,1
?L3:	ICALL2 POINTLESS,STR?20
	.DEBUG-LINE 8,1355,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-THROW-AT"
	.FUNCT V-THROW-AT
	.DEBUG-LINE 8,1358,1
	EQUAL? PRSO,WINNER \?L1
	.DEBUG-LINE 8,1358,1
	PRINTI "Get "
	.DEBUG-LINE 8,264,1
	FSET? PRSO,PLURALBIT \?L3
	PUSH STR?24
	JUMP ?L5
?L3:	PUSH STR?25
?L5:	PRINT STACK
	PRINTR " yourself."
	.DEBUG-LINE 8,1359,1
?L1:	FSET? PRSI,PERSONBIT \?L6
	.DEBUG-LINE 8,1359,1
	ICALL2 YOU-MASHER,PRSI
	RTRUE
	.DEBUG-LINE 8,1360,1
?L6:	ICALL POINTLESS,STR?20,0,1
	.DEBUG-LINE 8,1361,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-GIVE"
	.FUNCT V-GIVE
	.DEBUG-LINE 8,1364,1
	EQUAL? PRSI,WINNER \?L1
	.DEBUG-LINE 8,1365,1
	CALL2 HELD?,PRSO >STACK
	ZERO? STACK /?L3
	.DEBUG-LINE 8,1365,1
	PRINTR "You already have that."
	.DEBUG-LINE 8,1366,1
?L3:	PRINTI "Get "
	.DEBUG-LINE 8,264,1
	FSET? PRSO,PLURALBIT \?L6
	PUSH STR?24
	JUMP ?L8
?L6:	PUSH STR?25
?L8:	PRINT STACK
	PRINTR " yourself."
	.DEBUG-LINE 8,1367,1
?L1:	EQUAL? PRSO,WINNER \?L9
	.DEBUG-LINE 8,1367,1
	CALL1 SILLY >STACK
	RSTACK
	.DEBUG-LINE 8,1368,1
?L9:	FSET? PRSO,PERSONBIT \?L10
	.DEBUG-LINE 8,1368,1
	CALL1 YOU-MASHER >STACK
	RSTACK
	.DEBUG-LINE 8,1369,1
?L10:	FSET? PRSI,PERSONBIT /?L11
	.DEBUG-LINE 8,1369,1
	CALL2 NOT-POSSIBLE,STR?26 >STACK
	RSTACK
	.DEBUG-LINE 8,1370,1
?L11:	ICALL2 PRINT-CDEF,PRSI
	.DEBUG-LINE 8,264,1
	FSET? PRSI,PLURALBIT \?L13
	PUSH STR?27
	JUMP ?L15
?L13:	PUSH STR?28
?L15:	PRINT STACK
	PRINTI " take "
	ICALL2 PRINT-DEF,PRSO
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-SGIVE"
	.FUNCT V-SGIVE
	.DEBUG-LINE 8,1374,1
	ICALL PERFORM,V?GIVE,PRSI,PRSO
	.DEBUG-LINE 8,1375,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PRE-TELL"
	.FUNCT PRE-TELL
	.DEBUG-LINE 8,1378,1
	EQUAL? PRSO,WINNER /?L3
	FSET? PRSO,PERSONBIT /FALSE
	.DEBUG-LINE 8,1379,1
?L3:	SET 'P-CONT,0
	.DEBUG-LINE 8,1380,1
	PRINTI "Talking to "
	.DEBUG-LINE 8,1381,1
	EQUAL? PRSO,WINNER \?L4
	.DEBUG-LINE 8,1381,1
	PRINTI "yourself"
	JUMP ?L6
	.DEBUG-LINE 8,1382,1
?L4:	ICALL2 PRINT-INDEF,PRSO
	.DEBUG-LINE 8,1383,1
?L6:	PRINTR ", huh?"
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-TELL-ABOUT"
	.FUNCT V-TELL-ABOUT
	.DEBUG-LINE 8,1386,1
	ICALL2 PRINT-CDEF,PRSO
	PRINTR " doesn't seem interested."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-TELL"
	.FUNCT V-TELL
	.DEBUG-LINE 8,1391,1
	SET 'WINNER,PRSO
	.DEBUG-LINE 8,1392,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-WAVE-HANDS"
	.FUNCT V-WAVE-HANDS
	.DEBUG-LINE 8,1395,1
	ICALL2 POINTLESS,STR?29
	.DEBUG-LINE 8,1396,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-WAVE"
	.FUNCT V-WAVE
	.DEBUG-LINE 8,1399,1
	ICALL1 SILLY
	.DEBUG-LINE 8,1400,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-CLIMB"
	.FUNCT V-CLIMB
	.DEBUG-LINE 8,1403,1
	ZERO? PRSO /?L1
	.DEBUG-LINE 8,1403,1
	ICALL2 NOT-POSSIBLE,STR?30
	RTRUE
	.DEBUG-LINE 8,1403,1
?L1:	ICALL1 SILLY
	.DEBUG-LINE 8,1404,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-SWIM"
	.FUNCT V-SWIM
	.DEBUG-LINE 8,1407,1
	ICALL1 SILLY
	.DEBUG-LINE 8,1408,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-JUMP"
	.FUNCT V-JUMP
	.DEBUG-LINE 8,1411,1
	ICALL2 POINTLESS,STR?31
	.DEBUG-LINE 8,1412,1
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-SING"
	.FUNCT V-SING
	.DEBUG-LINE 8,1415,1
	PRINTR "You give a stirring performance of ""MacArthur Park"". Bravo!"
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-DANCE"
	.FUNCT V-DANCE
	.DEBUG-LINE 8,1418,1
	PRINTR "Dancing is forbidden."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-WAKE"
	.FUNCT V-WAKE
	.DEBUG-LINE 8,1421,1
	EQUAL? PRSO,WINNER \?L1
	.DEBUG-LINE 8,1421,1
	PRINTR "If only this were a dream."
	.DEBUG-LINE 8,1422,1
?L1:	FSET? PRSO,PERSONBIT \?L3
	.DEBUG-LINE 8,1422,1
	CALL1 YOU-MASHER >STACK
	RSTACK
	.DEBUG-LINE 8,1423,1
?L3:	CALL2 NOT-POSSIBLE,STR?32 >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-RUB"
	.FUNCT V-RUB
	.DEBUG-LINE 8,1426,1
	EQUAL? PRSO,WINNER \?L1
	.DEBUG-LINE 8,1426,1
	CALL1 TSD >STACK
	RSTACK
	.DEBUG-LINE 8,1427,1
?L1:	FSET? PRSO,PERSONBIT \?L3
	.DEBUG-LINE 8,1427,1
	CALL1 YOU-MASHER >STACK
	RSTACK
	.DEBUG-LINE 8,1428,1
?L3:	CALL2 POINTLESS,STR?33 >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-BURN"
	.FUNCT V-BURN
	.DEBUG-LINE 8,1431,1
	EQUAL? PRSO,WINNER \?L1
	.DEBUG-LINE 8,1431,1
	PRINTR "What is this, the Friars Club?"
	.DEBUG-LINE 8,1432,1
?L1:	FSET? PRSO,PERSONBIT \?L3
	.DEBUG-LINE 8,1432,1
	CALL1 YOU-MASHER >STACK
	RSTACK
	.DEBUG-LINE 8,1433,1
?L3:	CALL2 POINTLESS,STR?34 >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-UNDO"
	.FUNCT V-UNDO
	.DEBUG-LINE 8,1440,1
	ZERO? USAVE \?L1
	.DEBUG-LINE 8,1441,1
	.DEBUG-LINE 8,1442,1
	PRINTR "Cannot undo any further."
	.DEBUG-LINE 8,1443,1
?L1:	IRESTORE >STACK
	ZERO? STACK \FALSE
	.DEBUG-LINE 8,1444,1
	PRINTR "Undo failed."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-SAVE"
	.FUNCT V-SAVE
	.DEBUG-LINE 8,1448,1
	PRINTI "Saving..."
	CRLF
	CRLF
	.DEBUG-LINE 8,1449,1
	SAVE >STACK
	ZERO? STACK /?L1
	.DEBUG-LINE 8,1449,1
	CALL1 V-LOOK >STACK
	RSTACK
	.DEBUG-LINE 8,1450,1
?L1:	PRINTR "Save failed."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-RESTORE"
	.FUNCT V-RESTORE
	.DEBUG-LINE 8,1453,1
	RESTORE >STACK
	ZERO? STACK \FALSE
	.DEBUG-LINE 8,1454,1
	PRINTR "Restore failed."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-RESTART"
	.FUNCT V-RESTART
	.DEBUG-LINE 8,1457,1
	PRINTI "Are you sure you want to restart?"
	.DEBUG-LINE 8,1458,1
	CALL1 YES? >STACK
	ZERO? STACK /?L1
	.DEBUG-LINE 8,1459,1
	RESTART
	.DEBUG-LINE 8,1461,1
?L1:	PRINTR "Restart aborted."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-BRIEF"
	.FUNCT V-BRIEF
	.DEBUG-LINE 8,1464,1
	PRINTI "Brief descriptions."
	CRLF
	.DEBUG-LINE 8,1465,1
	SET 'MODE,BRIEF
	RETURN MODE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-VERBOSE"
	.FUNCT V-VERBOSE
	.DEBUG-LINE 8,1468,1
	PRINTI "Verbose descriptions."
	CRLF
	CRLF
	.DEBUG-LINE 8,1469,1
	SET 'MODE,VERBOSE
	.DEBUG-LINE 8,1470,1
	CALL1 V-LOOK >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-SUPERBRIEF"
	.FUNCT V-SUPERBRIEF
	.DEBUG-LINE 8,1473,1
	PRINTI "Superbrief descriptions."
	CRLF
	.DEBUG-LINE 8,1474,1
	SET 'MODE,SUPERBRIEF
	RETURN MODE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-SCRIPT"
	.FUNCT V-SCRIPT
	.DEBUG-LINE 8,1477,1
	GET 0,8 >STACK
	BTST STACK,1 \?L1
	.DEBUG-LINE 8,1478,1
	PRINTR "Transcript already on."
	.DEBUG-LINE 8,1479,1
?L1:	DIROUT 2
	GET 0,8 >STACK
	BTST STACK,1 \?L3
	.DEBUG-LINE 8,1481,1
	PRINTI "This begins a transcript of "
	.DEBUG-LINE 8,1482,1
	ICALL1 V-VERSION
	.DEBUG-LINE 8,1483,1
	RTRUE
	.DEBUG-LINE 8,1484,1
?L3:	PRINTR "Failed."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-UNSCRIPT"
	.FUNCT V-UNSCRIPT
	.DEBUG-LINE 8,1487,1
	GET 0,8 >STACK
	BTST STACK,1 /?L1
	.DEBUG-LINE 8,1488,1
	PRINTR "Transcript already off."
	.DEBUG-LINE 8,1489,1
?L1:	CRLF
	PRINTI "End of transcript."
	CRLF
	DIROUT -2
	GET 0,8 >STACK
	BTST STACK,1 \FALSE
	.DEBUG-LINE 8,1492,1
	PRINTR "Failed."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PLAYER-F"
	.FUNCT PLAYER-F
	.DEBUG-LINE 2,3112,1
	EQUAL? PLAYER,PRSO \FALSE
	.DEBUG-LINE 2,3114,1
	EQUAL? PRSA,V?EXAMINE \FALSE
	.DEBUG-LINE 2,3115,1
	PRINTR "You look like you're up for an adventure."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-FLY"
	.FUNCT V-FLY
	.DEBUG-LINE 1,42,1
	IN? PLAYER,KOWWS-CHASM \?L1
	CALL2 HELD?,FLY-SCROLL >STACK
	ZERO? STACK /?L1
	.DEBUG-LINE 1,43,1
	CALL1 FINISH-R >STACK
	RSTACK
	.DEBUG-LINE 1,45,1
?L1:	PRINTR "That's not a spell you know. But perhaps if you could find a scroll -- like the ones owned by the Great Phoenix -- you could do so."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-USE"
	.FUNCT V-USE
	.DEBUG-LINE 1,56,1
	PRINTI "That command doesn't work here. Be more specific about what you wish to do with "
	ICALL2 PRINT-DEF,PRSO
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-USE-ON"
	.FUNCT V-USE-ON
	.DEBUG-LINE 1,61,1
	PRINTI "That command doesn't work here. Be more specific about what you wish to do with "
	ICALL2 PRINT-DEF,PRSO
	PRINTI " and "
	ICALL2 PRINT-DEF,PRSI
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-SPEAK"
	.FUNCT V-SPEAK
	.DEBUG-LINE 1,70,1
	PRINTR "There is no reply."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-SPLASH"
	.FUNCT V-SPLASH
	.DEBUG-LINE 1,76,1
	EQUAL? PRSO,MILK \?L1
	CALL2 HELD?,MILK >STACK
	ZERO? STACK /?L1
	.DEBUG-LINE 1,77,1
	PRINTR "Why would you do that?  Awful waste of milk."
	.DEBUG-LINE 1,79,1
?L1:	PRINTR "You CAN'T DO THAT."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-CAST"
	.FUNCT V-CAST
	.DEBUG-LINE 1,85,1
	PRINTR "You don't know that spell."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-DIG"
	.FUNCT V-DIG
	.DEBUG-LINE 1,91,1
	PRINTI "You can't dig "
	ICALL2 PRINT-DEF,PRSI
	PRINTI " with "
	ICALL2 PRINT-DEF,PRSO
	PRINTI "."
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-CLIMB-MOD"
	.FUNCT V-CLIMB-MOD
	.DEBUG-LINE 1,98,1
	LOC PLAYER >STACK
	EQUAL? STACK,PHOENIX-MOUNTAIN-PASS \?L1
	.DEBUG-LINE 1,99,1
	CALL PERFORM,V?CLIMB,MOUNTAINS >STACK
	RSTACK
	.DEBUG-LINE 1,101,1
?L1:	CALL1 V-CLIMB >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-STAB"
	.FUNCT V-STAB
	.DEBUG-LINE 1,108,1
	CALL1 V-ATTACK >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-PAINT"
	.FUNCT V-PAINT
	.DEBUG-LINE 1,114,1
	CALL2 HELD?,PURPLE-PAINT >STACK
	ZERO? STACK /?L1
	.DEBUG-LINE 1,115,1
	PRINTR "You don't have any paint!"
	.DEBUG-LINE 1,117,1
?L1:	EQUAL? PRSO,PLAYER \?L3
	.DEBUG-LINE 1,118,1
	CALL1 PURPLE-COW-R >STACK
	RSTACK
	.DEBUG-LINE 1,120,1
?L3:	CALL2 POINTLESS,STR?35 >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"QUEST-TWO-R"
	.FUNCT QUEST-TWO-R
	.DEBUG-LINE 1,126,1
	EQUAL? PRSA,V?EXAMINE \?L1
	.DEBUG-LINE 1,127,1
	PRINTR "About what you'd expect."
	.DEBUG-LINE 1,129,1
?L1:	EQUAL? PRSA,V?DROP \?L3
	.DEBUG-LINE 1,130,1
	PRINTR "That's not something you should drop."
	.DEBUG-LINE 1,133,1
?L3:	CRLF
	.DEBUG-LINE 1,134,1
	PRINTR "*** TODO - QUEST 2 HAD NO BUILT-IN INVENTORY FUNCTIONALITY. WE COULD NOT INTERACT WITH QUEST 2 'ITEMS', EXCEPT FOR 'USE OBJECT' AND 'GIVE OBJECT TO OBJECT'. ***"
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"MILK-R"
	.FUNCT MILK-R
	.DEBUG-LINE 1,148,1
	EQUAL? PRSA,V?EXAMINE,V?DROP \?L1
	.DEBUG-LINE 1,149,1
	CALL1 QUEST-TWO-R >STACK
	RSTACK
	.DEBUG-LINE 1,150,1
?L1:	EQUAL? PRSA,V?GIVE \FALSE
	.DEBUG-LINE 1,152,1
	EQUAL? PRSI,ZEKE \FALSE
	.DEBUG-LINE 1,153,1
	PRINTI """Well, thanks a lot, good buddy!  Well, tell ya what, why don't I give ya this here pitchfork ta comp'n'sate ya fer yer milk."""
	CRLF
	.DEBUG-LINE 1,156,1
	REMOVE MILK
	.DEBUG-LINE 1,157,1
	MOVE PITCHFORK,PLAYER
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PITCHFORK-R"
	.FUNCT PITCHFORK-R
	.DEBUG-LINE 1,167,1
	EQUAL? PRSA,V?EXAMINE,V?DROP \?L1
	.DEBUG-LINE 1,168,1
	CALL1 QUEST-TWO-R >STACK
	RSTACK
	.DEBUG-LINE 1,169,1
?L1:	EQUAL? PRSA,V?USE-ON,V?DIG \FALSE
	.DEBUG-LINE 1,171,1
	EQUAL? PRSA,V?USE-ON \?L7
	EQUAL? PRSI,HAYSTACK /?L6
?L7:	EQUAL? PRSA,V?DIG \FALSE
	EQUAL? PRSO,HAYSTACK \FALSE
	.DEBUG-LINE 1,174,1
?L6:	CALL1 OPEN-STATUE-CAVE-R >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"FLY-SCROLL-R"
	.FUNCT FLY-SCROLL-R
	.DEBUG-LINE 1,185,1
	EQUAL? PRSA,V?EXAMINE,V?DROP \?L1
	.DEBUG-LINE 1,186,1
	CALL1 QUEST-TWO-R >STACK
	RSTACK
	.DEBUG-LINE 1,188,1
?L1:	EQUAL? PRSA,V?USE,V?CAST \FALSE
	.DEBUG-LINE 1,189,1
	CALL1 FINISH-R >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"WING-FEATHER-R"
	.FUNCT WING-FEATHER-R
	.DEBUG-LINE 1,201,1
	EQUAL? PRSA,V?EXAMINE,V?DROP \FALSE
	.DEBUG-LINE 1,202,1
	CALL1 QUEST-TWO-R >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"JADE-STATUETTE-R"
	.FUNCT JADE-STATUETTE-R
	.DEBUG-LINE 1,214,1
	EQUAL? PRSA,V?EXAMINE,V?DROP \?L1
	.DEBUG-LINE 1,215,1
	CALL1 QUEST-TWO-R >STACK
	RSTACK
	.DEBUG-LINE 1,216,1
?L1:	EQUAL? PRSA,V?GIVE \FALSE
	.DEBUG-LINE 1,218,1
	EQUAL? PRSI,GOBLIN-KING \FALSE
	.DEBUG-LINE 1,219,1
	CALL1 GIFT-OF-KING-R >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GOBLIN-SPIT-R"
	.FUNCT GOBLIN-SPIT-R
	.DEBUG-LINE 1,230,1
	EQUAL? PRSA,V?EXAMINE,V?DROP \FALSE
	.DEBUG-LINE 1,231,1
	CALL1 QUEST-TWO-R >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"SOMETHING-ITEM-R"
	.FUNCT SOMETHING-ITEM-R
	.DEBUG-LINE 1,241,1
	EQUAL? PRSA,V?EXAMINE,V?DROP \?L1
	.DEBUG-LINE 1,242,1
	CALL1 QUEST-TWO-R >STACK
	RSTACK
	.DEBUG-LINE 1,243,1
?L1:	EQUAL? PRSA,V?USE-ON,V?PUT-IN \FALSE
	.DEBUG-LINE 1,245,1
	EQUAL? PRSI,POND \FALSE
	.DEBUG-LINE 1,246,1
	CALL1 GET-DUCK-TURD-R >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"NOTHING-ITEM-R"
	.FUNCT NOTHING-ITEM-R
	.DEBUG-LINE 1,256,1
	EQUAL? PRSA,V?EXAMINE,V?DROP \?L1
	.DEBUG-LINE 1,257,1
	CALL1 QUEST-TWO-R >STACK
	RSTACK
	.DEBUG-LINE 1,259,1
?L1:	EQUAL? PRSA,V?GIVE \FALSE
	.DEBUG-LINE 1,261,1
	EQUAL? PRSI,GOBLIN-GUARD \FALSE
	.DEBUG-LINE 1,262,1
	CALL1 SECRET-ONE-R >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"DUCK-TURD-R"
	.FUNCT DUCK-TURD-R
	.DEBUG-LINE 1,273,1
	EQUAL? PRSA,V?EXAMINE,V?DROP \?L1
	.DEBUG-LINE 1,274,1
	CALL1 QUEST-TWO-R >STACK
	RSTACK
	.DEBUG-LINE 1,275,1
?L1:	EQUAL? PRSA,V?GIVE \FALSE
	.DEBUG-LINE 1,277,1
	EQUAL? PRSI,GOBLIN-KING \FALSE
	.DEBUG-LINE 1,278,1
	CALL1 OTHER-GIFT-R >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GRAPPLING-HOOK-R"
	.FUNCT GRAPPLING-HOOK-R
	.DEBUG-LINE 1,289,1
	EQUAL? PRSA,V?EXAMINE,V?DROP \?L1
	.DEBUG-LINE 1,290,1
	CALL1 QUEST-TWO-R >STACK
	RSTACK
	.DEBUG-LINE 1,291,1
?L1:	EQUAL? PRSA,V?USE \?L3
	.DEBUG-LINE 1,293,1
	LOC PLAYER >STACK
	EQUAL? STACK,MOUNTAINS \FALSE
	.DEBUG-LINE 1,294,1
	CALL1 CLIMB-THEM-R >STACK
	RSTACK
	.DEBUG-LINE 1,295,1
?L3:	EQUAL? PRSA,V?USE-ON \FALSE
	.DEBUG-LINE 1,297,1
	EQUAL? PRSO,MOUNTAINS \FALSE
	.DEBUG-LINE 1,298,1
	CALL1 CLIMB-THEM-R >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PURPLE-PAINT-R"
	.FUNCT PURPLE-PAINT-R
	.DEBUG-LINE 1,309,1
	EQUAL? PRSA,V?EXAMINE,V?DROP \?L1
	.DEBUG-LINE 1,310,1
	CALL1 QUEST-TWO-R >STACK
	RSTACK
	.DEBUG-LINE 1,311,1
?L1:	EQUAL? PRSA,V?USE \FALSE
	.DEBUG-LINE 1,313,1
	LOC PLAYER >STACK
	EQUAL? STACK,ZEKES-SILO \FALSE
	.DEBUG-LINE 1,314,1
	CALL1 PURPLE-USE-R >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PURPLE-USE-R"
	.FUNCT PURPLE-USE-R
	.DEBUG-LINE 1,318,1
	CALL2 HELD?,PURPLE-PAINT >STACK
	ZERO? STACK /?L1
	.DEBUG-LINE 1,319,1
	CALL1 PURPLE-COW-R >STACK
	RSTACK
	.DEBUG-LINE 1,321,1
?L1:	PRINTR "You don't know where that is."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PURPLE-COW-R"
	.FUNCT PURPLE-COW-R
	.DEBUG-LINE 1,326,1
	REMOVE PURPLE-PAINT
	.DEBUG-LINE 1,327,1
	PRINTI "You spread the purple paint on yourself. Suddenly Farmer Zeke bursts into song!"
	CRLF
	.DEBUG-LINE 1,330,1
	PRINTI """"
	.DEBUG-LINE 1,331,1
	ICALL2 ITALICIZE,STR?36
	.DEBUG-LINE 1,334,1
	PRINTI """"
	CRLF
	.DEBUG-LINE 1,335,1
	PRINTR "Wonderful!  You have just activated the scenario's secret feature!  That's it.  Return to your home. There's nothing more to do here."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"KOWWS-CHASM-R","RARG"
	.FUNCT KOWWS-CHASM-R,RARG
	.DEBUG-LINE 1,352,1
	EQUAL? RARG,M-LOOK \?L1
	.DEBUG-LINE 1,353,1
	PRINTI "You are outside in a pasture of pure, pure green. Green as far as the eye can see. But you, Koww the Magician, are not satisfied. The grass may be even greener on the other side of the "
	.DEBUG-LINE 1,357,1
	ICALL2 BOLDIZE,STR?37
	.DEBUG-LINE 1,358,1
	PRINTI "... you must know!  Also in the area is a very undramatic "
	.DEBUG-LINE 1,359,1
	ICALL2 BOLDIZE,STR?38
	.DEBUG-LINE 1,360,1
	PRINTI "."
	CRLF
	CRLF
	RTRUE
	.DEBUG-LINE 1,361,1
?L1:	EQUAL? RARG,M-FLASH \FALSE
	.DEBUG-LINE 1,362,1
	PRINTI "You can go "
	.DEBUG-LINE 1,363,1
	ICALL2 BOLDIZE,STR?39
	.DEBUG-LINE 1,364,1
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"CHASM-SIGN-R"
	.FUNCT CHASM-SIGN-R
	.DEBUG-LINE 1,382,1
	EQUAL? PRSA,V?EXAMINE /?L3
	EQUAL? PRSA,V?READ \?L1
	.DEBUG-LINE 1,383,1
?L3:	PRINTI "It reads: '"
	.DEBUG-LINE 1,384,1
	ICALL2 ITALICIZE,STR?40
	.DEBUG-LINE 1,385,1
	PRINTR "'"
	.DEBUG-LINE 1,386,1
?L1:	EQUAL? PRSA,V?TAKE \FALSE
	.DEBUG-LINE 1,387,1
	PRINTR "You yank the sign out of the ground and try to fit it in your Koww-pack. But it just doesn't fit. Frustrated, you put it back."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"CHASM-R"
	.FUNCT CHASM-R
	.DEBUG-LINE 1,393,1
	EQUAL? PRSA,V?TAKE \?L1
	.DEBUG-LINE 1,394,1
	PRINTI "Don't worry, the men in the white coats will soon be here to deal with you.
"
	RTRUE
	.DEBUG-LINE 1,396,1
?L1:	EQUAL? PRSA,V?EXAMINE \FALSE
	.DEBUG-LINE 1,397,1
	PRINTR "That's the chasm you simply MUST cross!  Surely the only way to cross it is to FLY!"
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"ZEKES-FARM-R","RARG"
	.FUNCT ZEKES-FARM-R,RARG
	.DEBUG-LINE 1,415,1
	EQUAL? RARG,M-FLASH \FALSE
	.DEBUG-LINE 1,416,1
	PRINTI "You stand outside of a small "
	.DEBUG-LINE 1,417,1
	ICALL2 BOLDIZE,STR?41
	.DEBUG-LINE 1,418,1
	PRINTI " with a "
	.DEBUG-LINE 1,419,1
	ICALL2 BOLDIZE,STR?42
	.DEBUG-LINE 1,420,1
	PRINTI " beside it. There is a "
	.DEBUG-LINE 1,421,1
	ICALL2 BOLDIZE,STR?43
	.DEBUG-LINE 1,422,1
	PRINTI " and a "
	.DEBUG-LINE 1,423,1
	ICALL2 BOLDIZE,STR?44
	.DEBUG-LINE 1,424,1
	PRINTI " here."
	CRLF
	CRLF
	.DEBUG-LINE 1,425,1
	PRINTI "You can go "
	.DEBUG-LINE 1,426,1
	ICALL2 BOLDIZE,STR?45
	.DEBUG-LINE 1,427,1
	PRINTI ", "
	.DEBUG-LINE 1,428,1
	ICALL2 BOLDIZE,STR?46
	.DEBUG-LINE 1,429,1
	PRINTI ", "
	.DEBUG-LINE 1,430,1
	ICALL2 BOLDIZE,STR?39
	.DEBUG-LINE 1,431,1
	PRINTI ", or "
	.DEBUG-LINE 1,432,1
	ICALL2 BOLDIZE,STR?47
	.DEBUG-LINE 1,433,1
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"ZEKES-FARMHOUSE-ENTRANCE-R"
	.FUNCT ZEKES-FARMHOUSE-ENTRANCE-R
	.DEBUG-LINE 1,445,1
	EQUAL? PRSA,V?ENTER \FALSE
	.DEBUG-LINE 1,446,1
	CALL2 GOTO,ZEKES-FARMHOUSE >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"ZEKES-SILO-ENTRANCE-R"
	.FUNCT ZEKES-SILO-ENTRANCE-R
	.DEBUG-LINE 1,458,1
	EQUAL? PRSA,V?ENTER \FALSE
	.DEBUG-LINE 1,459,1
	CALL2 GOTO,ZEKES-SILO >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"HAYSTACK-R"
	.FUNCT HAYSTACK-R
	.DEBUG-LINE 1,471,1
	EQUAL? PRSA,V?EXAMINE \?L1
	.DEBUG-LINE 1,472,1
	PRINTR "About what you'd expect from a haystack. It's made of... HAY!  You munch on it for a while."
	.DEBUG-LINE 1,475,1
?L1:	EQUAL? PRSA,V?EAT,V?TAKE \FALSE
	.DEBUG-LINE 1,476,1
	PRINTR "You take a bite of the haystack. Yummy... tastes just like chicken!"
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"OPEN-STATUE-CAVE-R"
	.FUNCT OPEN-STATUE-CAVE-R
	.DEBUG-LINE 1,481,1
	PRINTI "You stab the pitchfork into the haystack. Lo and behold, the haystack falls down into a hole in the ground!  Inside the hole is a jade statuette, which you take."
	CRLF
	.DEBUG-LINE 1,485,1
	REMOVE PITCHFORK
	.DEBUG-LINE 1,486,1
	MOVE JADE-STATUETTE,PLAYER
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"POND-R"
	.FUNCT POND-R
	.DEBUG-LINE 1,497,1
	EQUAL? PRSA,V?EXAMINE \?L1
	.DEBUG-LINE 1,498,1
	PRINTR "A nice, placid pond full of little tiny duckies. Ooo, how cute!  If you were carnivorous, they'd make you hungry."
	.DEBUG-LINE 1,501,1
?L1:	EQUAL? PRSA,V?TAKE,V?DRINK \?L3
	.DEBUG-LINE 1,502,1
	PRINTR "You sip the water from the pond. Just what you need to wash down a bit of grazing."
	.DEBUG-LINE 1,505,1
?L3:	EQUAL? PRSA,V?USE-ON,V?PUT-IN \FALSE
	.DEBUG-LINE 1,507,1
	EQUAL? PRSO,SOMETHING-ITEM \FALSE
	.DEBUG-LINE 1,508,1
	CALL1 GET-DUCK-TURD-R >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GET-DUCK-TURD-R"
	.FUNCT GET-DUCK-TURD-R
	.DEBUG-LINE 1,512,1
	PRINTI "You throw the something into the pond. The ducks swarm around it in curiosity.  You take the opportunity to grab a duck turd without being noticed!"
	CRLF
	.DEBUG-LINE 1,515,1
	REMOVE SOMETHING-ITEM
	.DEBUG-LINE 1,516,1
	MOVE DUCK-TURD,PLAYER
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"ZEKES-FARMHOUSE-R","RARG"
	.FUNCT ZEKES-FARMHOUSE-R,RARG
	.DEBUG-LINE 1,537,1
	EQUAL? RARG,M-LOOK \?L1
	.DEBUG-LINE 1,538,1
	PRINTI "You're inside Farmer Zeke's rather cramped home. No one's here at the moment. Perhaps you should go away.

"
	RTRUE
	.DEBUG-LINE 1,541,1
?L1:	EQUAL? RARG,M-FLASH \FALSE
	.DEBUG-LINE 1,542,1
	PRINTI "You can go "
	.DEBUG-LINE 1,543,1
	ICALL2 BOLDIZE,STR?48
	.DEBUG-LINE 1,544,1
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"TABLE-R"
	.FUNCT TABLE-R
	.DEBUG-LINE 1,555,1
	EQUAL? PRSA,V?EXAMINE \?L1
	.DEBUG-LINE 1,556,1
	PRINTI "Hmmm, what's a table doing here?  Cool!  It has a "
	.DEBUG-LINE 1,558,1
	ICALL2 BOLDIZE,STR?49
	.DEBUG-LINE 1,559,1
	PRINTI " on it!"
	CRLF
	.DEBUG-LINE 1,560,1
	CALL2 THIS-IS-IT,TREASURE-CHEST >STACK
	RSTACK
	.DEBUG-LINE 1,561,1
?L1:	EQUAL? PRSA,V?TAKE \FALSE
	.DEBUG-LINE 1,562,1
	PRINTR "Farmer Zeke took the wise precaution of bolting his table to the floor."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"TREASURE-CHEST-R"
	.FUNCT TREASURE-CHEST-R
	.DEBUG-LINE 1,576,1
	EQUAL? PRSA,V?OPEN \?L1
	.DEBUG-LINE 1,577,1
	CALL1 GET-NOTHING-R >STACK
	RSTACK
	.DEBUG-LINE 1,578,1
?L1:	EQUAL? PRSA,V?TAKE \FALSE
	.DEBUG-LINE 1,579,1
	PRINTR "It's too big. You could open it instead..."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GET-NOTHING-R"
	.FUNCT GET-NOTHING-R
	.DEBUG-LINE 1,583,1
	PRINTI "Ooooo!  There's nothing inside!  Told ya you should have gone away."
	CRLF
	.DEBUG-LINE 1,585,1
	MOVE NOTHING-ITEM,PLAYER
	.DEBUG-LINE 1,586,1
	ICALL2 THIS-IS-IT,NOTHING-ITEM
	.DEBUG-LINE 1,587,1
	REMOVE TABLE
	.DEBUG-LINE 1,588,1
	REMOVE TREASURE-CHEST
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"ZEKES-SILO-R","RARG"
	.FUNCT ZEKES-SILO-R,RARG
	.DEBUG-LINE 1,604,1
	EQUAL? RARG,M-LOOK \?L1
	.DEBUG-LINE 1,605,1
	PRINTI "Gee, this place smells just like rotting feed. "
	RTRUE
	.DEBUG-LINE 1,606,1
?L1:	EQUAL? RARG,M-FLASH \FALSE
	.DEBUG-LINE 1,607,1
	PRINTI "Standing in the silo, grinning like the idiot that he is, is Farmer "
	.DEBUG-LINE 1,609,1
	ICALL2 BOLDIZE,STR?50
	.DEBUG-LINE 1,610,1
	PRINTI "."
	CRLF
	CRLF
	.DEBUG-LINE 1,611,1
	PRINTI "You can go "
	.DEBUG-LINE 1,612,1
	ICALL2 BOLDIZE,STR?48
	.DEBUG-LINE 1,613,1
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"ZEKE-R"
	.FUNCT ZEKE-R
	.DEBUG-LINE 1,625,1
	EQUAL? PRSA,V?EXAMINE \?L1
	.DEBUG-LINE 1,626,1
	PRINTR "He's wearing a straw hat and at least one of his teeth is rotting away, but he seems pleased as punch that you've arrived."
	.DEBUG-LINE 1,629,1
?L1:	EQUAL? PRSA,V?SPEAK \?L3
	.DEBUG-LINE 1,630,1
	PRINTR """Hey there, good buddy!  Say, bein' a wizard an' all, couldja find it in yer heart to gimme some magic milk?  I'm all out!"""
	.DEBUG-LINE 1,632,1
?L3:	EQUAL? PRSA,V?GIVE \?L4
	.DEBUG-LINE 1,634,1
	EQUAL? PRSO,MILK \FALSE
	.DEBUG-LINE 1,635,1
	PRINTI """Well, thanks a lot, good buddy!  Well, tell ya what, why don't I give ya this here pitchfork ta comp'n'sate ya fer yer milk."""
	CRLF
	.DEBUG-LINE 1,637,1
	REMOVE MILK
	.DEBUG-LINE 1,638,1
	MOVE PITCHFORK,PLAYER
	RTRUE
	.DEBUG-LINE 1,639,1
?L4:	EQUAL? PRSA,V?ATTACK \?L8
	.DEBUG-LINE 1,640,1
	PRINTR "You may be an evil sorcerer, but at least you're an ETHICAL evil sorcerer. No killing allowed!  Especially not of idiots. They don't know they're idiots."
	.DEBUG-LINE 1,643,1
?L8:	EQUAL? PRSA,V?SPLASH \FALSE
	.DEBUG-LINE 1,644,1
	CALL1 DUMB-LOSE-R >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"DUMB-LOSE-R"
	.FUNCT DUMB-LOSE-R
	.DEBUG-LINE 1,647,1
	PRINTI """Well, gee,"" says Farmer Zeke, ""I shore do like ya a lot, but I guess there's a limit!"""
	CRLF
	.DEBUG-LINE 1,649,1
	PRINTI "So saying, Zeke stabs you with his pitchfork."
	CRLF
	.DEBUG-LINE 1,650,1
	CRLF
	.DEBUG-LINE 1,651,1
	ICALL2 JIGS-UP,LOSE-TEXT
	.DEBUG-LINE 1,652,1
	CRLF
	.DEBUG-LINE 1,653,1
	CALL1 V-QUIT >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GOBLIN-TRAIL-R","RARG"
	.FUNCT GOBLIN-TRAIL-R,RARG
	.DEBUG-LINE 1,667,1
	EQUAL? RARG,M-LOOK \?L1
	.DEBUG-LINE 1,668,1
	PRINTI "The stench of goblins permeates this place. Goblins are small, annoying creatures who like to fight anyone who looks weak. Fortunately, you don't look weak."
	CRLF
	CRLF
	RTRUE
	.DEBUG-LINE 1,673,1
?L1:	EQUAL? RARG,M-FLASH \FALSE
	.DEBUG-LINE 1,674,1
	PRINTI "You can go "
	.DEBUG-LINE 1,675,1
	ICALL2 BOLDIZE,STR?47
	.DEBUG-LINE 1,676,1
	PRINTI " or "
	.DEBUG-LINE 1,677,1
	ICALL2 BOLDIZE,STR?46
	.DEBUG-LINE 1,678,1
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"ROAD-GOBLIN-TRAIL-R"
	.FUNCT ROAD-GOBLIN-TRAIL-R
	.DEBUG-LINE 1,689,1
	EQUAL? PRSA,V?EXAMINE \?L1
	.DEBUG-LINE 1,690,1
	PRINTR "It's made of dirt. Concrete hasn't been invented yet."
	.DEBUG-LINE 1,692,1
?L1:	EQUAL? PRSA,V?TAKE \FALSE
	.DEBUG-LINE 1,693,1
	PRINTR "But you're already taking the road!  You're taking it either north or south!  Har har har!  Hey, I saw a car transform the other day!  Yeah, it turned into a driveway!"
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GOBLIN-LAIR-R","RARG"
	.FUNCT GOBLIN-LAIR-R,RARG
	.DEBUG-LINE 1,710,1
	EQUAL? RARG,M-LOOK \?L1
	.DEBUG-LINE 1,711,1
	PRINTI "About twenty goblins patrol the front of a massive cave complex. They eye you for a moment, then decide not to attack. You return the favor and don't kill them."
	CRLF
	CRLF
	RTRUE
	.DEBUG-LINE 1,716,1
?L1:	EQUAL? RARG,M-FLASH \FALSE
	.DEBUG-LINE 1,717,1
	PRINTI "You can go "
	.DEBUG-LINE 1,718,1
	ICALL2 BOLDIZE,STR?47
	.DEBUG-LINE 1,719,1
	PRINTI " or "
	.DEBUG-LINE 1,720,1
	ICALL2 BOLDIZE,STR?51
	.DEBUG-LINE 1,721,1
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"CLIFF-R"
	.FUNCT CLIFF-R
	.DEBUG-LINE 1,731,1
	EQUAL? PRSA,V?EXAMINE \?L1
	.DEBUG-LINE 1,732,1
	PRINTR "It's a cliff; you could climb it, but it might be a difficult climb."
	.DEBUG-LINE 1,734,1
?L1:	EQUAL? PRSA,V?TAKE \?L3
	.DEBUG-LINE 1,735,1
	PRINTR "If you want to climb the cliff, say so!"
	.DEBUG-LINE 1,737,1
?L3:	EQUAL? PRSA,V?CLIMB \FALSE
	.DEBUG-LINE 1,738,1
	PRINTR "After a difficult climb, you reach the top. You're very pleased with yourself.  Unfortunately, the ledge crumbles beneath you and you plummet back to the  ground."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"INSIDE-GOBLIN-LAIR-ENTRANCE-R"
	.FUNCT INSIDE-GOBLIN-LAIR-ENTRANCE-R
	.DEBUG-LINE 1,753,1
	EQUAL? PRSA,V?ENTER \FALSE
	.DEBUG-LINE 1,754,1
	CALL2 GOTO,INSIDE-GOBLIN-LAIR >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GOBLIN-GUARD-R"
	.FUNCT GOBLIN-GUARD-R
	.DEBUG-LINE 1,767,1
	EQUAL? PRSA,V?EXAMINE \?L1
	.DEBUG-LINE 1,768,1
	PRINTR "It's very ugly, like most of its kind. Don't get too close; you could faint from the smell."
	.DEBUG-LINE 1,771,1
?L1:	EQUAL? PRSA,V?SPEAK \FALSE
	.DEBUG-LINE 1,772,1
	PRINTR """Yu wan go cave?  No try no funny bizniss -- I can tell."""
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"SECRET-ONE-R"
	.FUNCT SECRET-ONE-R
	.DEBUG-LINE 1,777,1
	PRINTI """Ooooo!  Nuthing!  Jus wut I all ways want'd!  Inn ex chaynge, I giv yu summ thing!"""
	CRLF
	.DEBUG-LINE 1,780,1
	REMOVE NOTHING-ITEM
	.DEBUG-LINE 1,781,1
	MOVE SOMETHING-ITEM,PLAYER
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"INSIDE-GOBLIN-LAIR-R","RARG"
	.FUNCT INSIDE-GOBLIN-LAIR-R,RARG
	.DEBUG-LINE 1,794,1
	EQUAL? RARG,M-LOOK \?L1
	.DEBUG-LINE 1,795,1
	PRINTI "You are escorted to the Goblin King's throne room, a large chamber ornamented with "
	.DEBUG-LINE 1,798,1
	ICALL2 BOLDIZE,STR?52
	.DEBUG-LINE 1,799,1
	PRINTI " of nude female goblins. You try hard to avoid puking."
	CRLF
	CRLF
	RTRUE
	.DEBUG-LINE 1,800,1
?L1:	EQUAL? RARG,M-FLASH \FALSE
	.DEBUG-LINE 1,801,1
	PRINTI "You can go "
	.DEBUG-LINE 1,802,1
	ICALL2 BOLDIZE,STR?48
	.DEBUG-LINE 1,803,1
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"STATUES-R"
	.FUNCT STATUES-R
	.DEBUG-LINE 1,814,1
	EQUAL? PRSA,V?EXAMINE \?L1
	.DEBUG-LINE 1,815,1
	PRINTR "Apparently, the goblin idea of beauty is the same as the bovine idea of putridity. You'd prefer not to look at these statues."
	.DEBUG-LINE 1,818,1
?L1:	EQUAL? PRSA,V?TAKE \FALSE
	.DEBUG-LINE 1,819,1
	PRINTR "That would be difficult, considering the statues are about seven feet tall, are made of stone, weigh about a ton, and are guarded by some mean-looking goblins."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GOBLIN-KING-R"
	.FUNCT GOBLIN-KING-R
	.DEBUG-LINE 1,834,1
	EQUAL? PRSA,V?EXAMINE \?L1
	.DEBUG-LINE 1,835,1
	PRINTR "An officious-looking, double-chinned goblin monarch sits royally atop a throne of deer hide."
	.DEBUG-LINE 1,838,1
?L1:	EQUAL? PRSA,V?SPEAK \FALSE
	.DEBUG-LINE 1,839,1
	PRINTR """Hoo hoo hoo!  Goblinz so grate, our spit is assid!  We spit on yu if yu make us angree!  If yu hav tiny statyoo of jade, we giv yu nice thing!"""
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"GIFT-OF-KING-R"
	.FUNCT GIFT-OF-KING-R
	.DEBUG-LINE 1,845,1
	REMOVE JADE-STATUETTE
	.DEBUG-LINE 1,846,1
	MOVE GOBLIN-SPIT,PLAYER
	.DEBUG-LINE 1,847,1
	PRINTR """Ooooo!  You find goblinn lost statyoo!  We giv yu wun jar of spit!"""
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"OTHER-GIFT-R"
	.FUNCT OTHER-GIFT-R
	.DEBUG-LINE 1,851,1
	REMOVE DUCK-TURD
	.DEBUG-LINE 1,852,1
	MOVE GRAPPLING-HOOK,PLAYER
	.DEBUG-LINE 1,853,1
	PRINTR """Ooooo!  GIMME GIMME GIMME!  Duck turd favorite goblin food!  We giv yu grapple hook!"""
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"LAND-OF-NECROYAKS-R","RARG"
	.FUNCT LAND-OF-NECROYAKS-R,RARG
	.DEBUG-LINE 1,873,1
	EQUAL? RARG,M-FLASH \FALSE
	.DEBUG-LINE 1,874,1
	PRINTI "You can go "
	.DEBUG-LINE 1,875,1
	ICALL2 BOLDIZE,STR?47
	.DEBUG-LINE 1,876,1
	PRINTI " or "
	.DEBUG-LINE 1,877,1
	ICALL2 BOLDIZE,STR?46
	.DEBUG-LINE 1,878,1
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"NECROYAKS-SIGN-R"
	.FUNCT NECROYAKS-SIGN-R
	.DEBUG-LINE 1,889,1
	EQUAL? PRSA,V?EXAMINE,V?READ \?L1
	.DEBUG-LINE 1,890,1
	PRINTI "It reads: "
	.DEBUG-LINE 1,892,1
	ICALL2 ITALICIZE,STR?53
	.DEBUG-LINE 1,895,1
	CRLF
	RTRUE
	.DEBUG-LINE 1,896,1
?L1:	EQUAL? PRSA,V?TAKE \FALSE
	.DEBUG-LINE 1,897,1
	PRINTR "Oh, THAT'S original."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"AMBUSH-POINT-R","RARG"
	.FUNCT AMBUSH-POINT-R,RARG
	.DEBUG-LINE 1,912,1
	EQUAL? RARG,M-LOOK \?L1
	.DEBUG-LINE 1,913,1
	PRINTI "A cliff face blocks your way here. It's steep -- you can't climb. If you want to continue, you'll have to "
	.DEBUG-LINE 1,916,1
	ICALL2 BOLDIZE,STR?54
	.DEBUG-LINE 1,917,1
	PRINTI " the face."
	CRLF
	CRLF
	RTRUE
	.DEBUG-LINE 1,919,1
?L1:	EQUAL? RARG,M-FLASH \FALSE
	.DEBUG-LINE 1,920,1
	PRINTI "You can go "
	.DEBUG-LINE 1,921,1
	ICALL2 BOLDIZE,STR?46
	.DEBUG-LINE 1,922,1
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"YAKS-KILL-R"
	.FUNCT YAKS-KILL-R
	.DEBUG-LINE 1,926,1
	PRINTI "The NecroYaks recognize you as a cow, then jump out and kill you."
	CRLF
	CRLF
	.DEBUG-LINE 1,928,1
	CALL2 JIGS-UP,LOSE-TEXT >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"YAKS-LOVE-R"
	.FUNCT YAKS-LOVE-R
	.DEBUG-LINE 1,931,1
	PRINTI "The NecroYaks jump out and search you for acid. They find your goblin spit, take it, and run off. But one of them drops a phoenix feather, and you scoop it up unnoticed. By the way, there's no way to go farther this way unless you're a yak."
	CRLF
	.DEBUG-LINE 1,936,1
	REMOVE GOBLIN-SPIT
	.DEBUG-LINE 1,937,1
	MOVE WING-FEATHER,PLAYER
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"V-SEARCH-THE-ROOM"
	.FUNCT V-SEARCH-THE-ROOM
	.DEBUG-LINE 1,943,1
	LOC PLAYER >STACK
	EQUAL? STACK,AMBUSH-POINT \?L1
	.DEBUG-LINE 1,945,1
	CALL2 HELD?,GOBLIN-SPIT >STACK
	ZERO? STACK /?L3
	.DEBUG-LINE 1,946,1
	CALL1 YAKS-LOVE-R >STACK
	RSTACK
	.DEBUG-LINE 1,948,1
?L3:	CALL1 YAKS-KILL-R >STACK
	RSTACK
	.DEBUG-LINE 1,950,1
?L1:	CALL1 V-SEARCH >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PHOENIX-MOUNTAIN-PASS-R","RARG"
	.FUNCT PHOENIX-MOUNTAIN-PASS-R,RARG
	.DEBUG-LINE 1,964,1
	EQUAL? RARG,M-LOOK \?L1
	.DEBUG-LINE 1,965,1
	PRINTI "The towering mountains surround you on all sides but back to your west.  Passage farther east is remotely possible, should you be brave or foolhardy enough to try it."
	CRLF
	CRLF
	RTRUE
	.DEBUG-LINE 1,969,1
?L1:	EQUAL? RARG,M-FLASH \FALSE
	.DEBUG-LINE 1,970,1
	PRINTI "You can go "
	.DEBUG-LINE 1,971,1
	ICALL2 BOLDIZE,STR?45
	.DEBUG-LINE 1,972,1
	PRINTI " or "
	.DEBUG-LINE 1,973,1
	ICALL2 BOLDIZE,STR?39
	.DEBUG-LINE 1,974,1
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"MOUNTAINS-R"
	.FUNCT MOUNTAINS-R
	.DEBUG-LINE 1,986,1
	EQUAL? PRSA,V?EXAMINE \?L1
	.DEBUG-LINE 1,987,1
	PRINTR "They tower up almost as high as the Great Auk Mountains far, far to the north."
	.DEBUG-LINE 1,990,1
?L1:	EQUAL? PRSA,V?TAKE \?L3
	.DEBUG-LINE 1,991,1
	PRINTR "After several hours of effort, you manage to chip a piece off of the mountain you're standing on. But you accidentally let go and it plummets into the valley below."
	.DEBUG-LINE 1,995,1
?L3:	EQUAL? PRSA,V?CLIMB \FALSE
	.DEBUG-LINE 1,996,1
	CALL1 CLIMB-THEM-R >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"CLIMB-THEM-R"
	.FUNCT CLIMB-THEM-R
	.DEBUG-LINE 1,1000,1
	CALL2 HELD?,GRAPPLING-HOOK >STACK
	ZERO? STACK /?L1
	.DEBUG-LINE 1,1001,1
	REMOVE GRAPPLING-HOOK
	.DEBUG-LINE 1,1002,1
	MOVE PURPLE-PAINT,PLAYER
	.DEBUG-LINE 1,1003,1
	PRINTR "On top of the mountain, you find a bunch of purple paint, which you take.  After descending again, you ditch your grappling hook."
	.DEBUG-LINE 1,1007,1
?L1:	PRINTR "Those particular mountains are too steep."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PHOENIX-PEAK-R","RARG"
	.FUNCT PHOENIX-PEAK-R,RARG
	.DEBUG-LINE 1,1021,1
	EQUAL? RARG,M-FLASH \FALSE
	.DEBUG-LINE 1,1022,1
	PRINTI "After hard hours of climbing, you finally reach the summit of Phoenix Peak.  Here, in all its glory, sits the "
	.DEBUG-LINE 1,1025,1
	ICALL2 BOLDIZE,STR?55
	.DEBUG-LINE 1,1026,1
	PRINTI "."
	CRLF
	CRLF
	.DEBUG-LINE 1,1027,1
	PRINTI "You can go "
	.DEBUG-LINE 1,1028,1
	ICALL2 BOLDIZE,STR?45
	.DEBUG-LINE 1,1029,1
	PRINTR "."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PHOENIX-R"
	.FUNCT PHOENIX-R
	.DEBUG-LINE 1,1041,1
	EQUAL? PRSA,V?EXAMINE \?L1
	.DEBUG-LINE 1,1042,1
	PRINTR "The Resplendent Magnificent Phoenix's visage is so brilliant that it hurts to look at it."
	.DEBUG-LINE 1,1045,1
?L1:	EQUAL? PRSA,V?SPEAK \FALSE
	.DEBUG-LINE 1,1046,1
	PRINTI "The Resplendent Magnificent Phoenix "
	.DEBUG-LINE 1,1049,1
	CALL2 HELD?,FLY-SCROLL >STACK
	ZERO? STACK /?L4
	.DEBUG-LINE 1,1050,1
	PRINTR "does not reply."
	.DEBUG-LINE 1,1052,1
?L4:	PRINTI "demands to know "
	.DEBUG-LINE 1,1053,1
	ICALL2 ITALICIZE,STR?56
	.DEBUG-LINE 1,1054,1
	PRINTI " such a weakling as you has come here!  ""If you do not have my wing feather with you, I'm afraid I must ask you to leave "
	.DEBUG-LINE 1,1057,1
	ICALL2 ITALICIZE,STR?57
	.DEBUG-LINE 1,1058,1
	PRINTI "  Now, do you have my wing feather or not?"" -- "
	.DEBUG-LINE 1,1060,1
	ICALL2 BOLDIZE,STR?58
	.DEBUG-LINE 1,1061,1
	PRINTI " or "
	.DEBUG-LINE 1,1062,1
	ICALL2 BOLDIZE,STR?59
	.DEBUG-LINE 1,1063,1
	PRINTI "?"
	CRLF
	CRLF
	.DEBUG-LINE 1,1065,1
	CALL1 YES? >STACK
	ZERO? STACK /?L7
	.DEBUG-LINE 1,1066,1
	CALL1 PHOENIX-PROC-R >STACK
	RSTACK
	.DEBUG-LINE 1,1068,1
?L7:	CALL1 PHOENIX-KILL-R >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PHOENIX-PROC-R"
	.FUNCT PHOENIX-PROC-R
	.DEBUG-LINE 1,1071,1
	PRINTI "Thank you; you have found my wing feather. In the wrong hands, that could have been very dangerous. I will give you this ""fly"" scroll to compensate you for your hard work. "
	.DEBUG-LINE 1,1075,1
	ICALL2 BOLDIZE,STR?60
	.DEBUG-LINE 1,1076,1
	PRINTI " the scroll to fly, but it will only work once."
	CRLF
	.DEBUG-LINE 1,1077,1
	MOVE FLY-SCROLL,PLAYER
	.DEBUG-LINE 1,1078,1
	REMOVE WING-FEATHER
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"PHOENIX-KILL-R"
	.FUNCT PHOENIX-KILL-R
	.DEBUG-LINE 1,1081,1
	PRINTI """Then give it to me quickly!  What..... You don't have my wing feather at all, do you?  You shammer. I was going to dismiss you without hurting you, but I'm afraid now I'll have to kill you.""

The Resplendent Magnificent Phoenix bats you with one claw. You roll back down the mountainside, finally coming to a complete stop looking very much like a well-done steak."
	CRLF
	CRLF
	.DEBUG-LINE 1,1087,1
	CALL2 JIGS-UP,LOSE-TEXT >STACK
	RSTACK
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"FINISH-R"
	.FUNCT FINISH-R
	.DEBUG-LINE 1,1100,1
	CALL2 HELD?,FLY-SCROLL >STACK
	ZERO? STACK /?L1
	.DEBUG-LINE 1,1101,1
	CALL1 END-R >STACK
	RSTACK
	.DEBUG-LINE 1,1103,1
?L1:	PRINTR "Maybe you'll find it someday, but you don't have it today. You stupid cow."
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"END-R"
	.FUNCT END-R
	.DEBUG-LINE 1,1107,1
	PRINTI "You fly up and over the chasm!"
	CRLF
	CRLF
	.DEBUG-LINE 1,1108,1
	PRINT WIN-TEXT
	CRLF
	CRLF
	.DEBUG-LINE 1,1109,1
	QUIT
	.DEBUG-ROUTINE-END 0,0,0

	.DEBUG-ROUTINE 0,0,0,"BOLDIZE","TEXT"
	.FUNCT BOLDIZE,TEXT
	.DEBUG-LINE 1,1114,1
	HLIGHT 2
	.DEBUG-LINE 1,1115,1
	PRINT TEXT
	.DEBUG-LINE 1,1116,1
	HLIGHT 0
	RTRUE
	.DEBUG-ROUTINE-END 0,0,0

	.INSERT "koww_str"
	.END
